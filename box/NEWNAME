%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: World Teachers Day-3 up-02.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 08/08/18
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font Milkshake
%%+ font BebasNeueBook
%%+ font BebasNeue
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: Milkshake
%%+ BebasNeueBook
%%+ BebasNeue
%%DocumentNeededFonts: Milkshake
%%+ BebasNeueBook
%%+ BebasNeue
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">World Teachers Day-3 up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-08-08T14:47:57+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-08-08T14:47:57+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-08-08T14:47:57+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AnnHNY7Rp1+E/I4ob44pd&#xA;xxV3HFXccVWldxihdxxS7jiruOKu44q0F3b5/wABihvjil3HFXccVY958uri28t3Hox+oZ6QOCGN&#xA;FkBBI49/nl2nA493H1MiIGneQ7q4ufLdv60fpmCsCABhVYwACeX8NsdQBx7LppEwFsh45S5DuOKu&#xA;44q0V3X5/wADihvjil3HFXccVdxxVaF3OKF3HFLuOKu44q7jirSL8I+QxQ3xxSqccUNOvwn5HFW+&#xA;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&#xA;wJdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:1b16d245-90e0-4244-b0dd-677010b97437</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:1b16d245-90e0-4244-b0dd-677010b97437</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:31582529-0552-3d49-b136-067c03c3ec36</stRef:instanceID>
            <stRef:documentID>xmp.did:820e4424-1a10-44ce-9735-e5a78c74ee70</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1b16d245-90e0-4244-b0dd-677010b97437</stEvt:instanceID>
                  <stEvt:when>2018-08-08T14:47:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BebasNeueBook</stFnt:fontName>
                  <stFnt:fontFamily>Bebas Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Book</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 001.003</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BebasNeue Book.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BebasNeue</stFnt:fontName>
                  <stFnt:fontFamily>Bebas Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.300</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BebasNeue.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Milkshake</stFnt:fontName>
                  <stFnt:fontFamily>Milkshake</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.000</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Milkshake.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=202 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=150 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=125 B=108</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>125</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=191 B=180 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>180</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Kulit</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=188 G=136 B=103</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>136</xmpG:green>
                           <xmpG:blue>103</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=39 M=59 Y=77 K=25 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>132</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>64</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=109 G=75 B=53 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>53</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=187 B=163 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>187</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=208 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>208</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=233 G=229 B=217</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>217</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=248 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>248</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=58 G=77 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>58</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=101 B=100 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=190 B=160</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>160</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=139 B=101 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>101</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=129 B=98 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>129</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=190 B=104 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>104</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Gold 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=40 Y=96 K=7</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>195</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>46</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=16 M=32 Y=82 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>205</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>73</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=4 M=14 Y=60 K=8</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=191 B=180</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>180</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=183 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
469.964 500 li
469.964 431.566 li
500 431.566 li
500 500 li
468.964 500 mo
396.81 500 li
396.81 431.566 li
468.964 431.566 li
468.964 500 li
395.81 500 mo
323.654 500 li
323.654 431.566 li
395.81 431.566 li
395.81 500 li
322.654 500 mo
250.5 500 li
250.5 431.566 li
322.654 431.566 li
322.654 500 li
249.5 500 mo
177.346 500 li
177.346 431.566 li
249.5 431.566 li
249.5 500 li
176.346 500 mo
104.191 500 li
104.191 431.566 li
176.346 431.566 li
176.346 500 li
103.191 500 mo
31.0361 500 li
31.0361 431.566 li
103.191 431.566 li
103.191 500 li
30.0362 500 mo
0 500 li
0 0 li
500 0 li
500 316.45 li
469.964 316.45 li
469.964 0 li
468.964 0 li
468.964 316.45 li
455.812 316.45 li
457.872 309.688 458.98 302.516 458.98 295.089 cv
458.98 272.003 447.916 249.975 429.385 236.165 cv
429.025 235.897 428.606 235.768 428.191 235.768 cv
427.58 235.768 426.978 236.047 426.586 236.573 cv
425.926 237.459 426.109 238.712 426.994 239.372 cv
429.186 241.005 431.263 242.746 433.219 244.584 cv
427.539 250.264 li
419.043 242.669 408.416 237.437 396.81 235.414 cv
396.81 0 li
395.81 0 li
395.81 235.248 li
395.082 235.134 394.345 235.031 393.61 234.942 cv
323.654 106.998 li
323.654 0 li
322.654 0 li
322.654 105.169 li
306.384 75.413 li
310.004 75.413 li
310.004 75.4128 li
300.169 55.9073 li
300.16 55.8902 300.151 55.8726 300.143 55.8555 cv
300.14 55.8508 300.138 55.8465 300.136 55.8419 cv
300.129 55.8286 300.123 55.8159 300.116 55.8026 cv
300.113 55.798 300.111 55.7934 300.109 55.7888 cv
300.102 55.7755 300.094 55.7599 300.087 55.7466 cv
300.086 55.7437 300.084 55.7402 300.083 55.7373 cv
295.293 46.3352 287.545 39.045 278.304 34.7706 cv
278.304 32.6643 li
278.304 30.5048 277.428 28.5497 276.013 27.1344 cv
274.598 25.7192 272.643 24.8438 270.483 24.8438 cv
270.483 24.8438 li
270.483 24.8438 li
266.496 24.8438 li
266.496 20.0132 li
256.652 20.0132 li
256.652 17.7299 li
256.652 17.7299 li
256.652 17.7299 li
256.652 16.4156 255.616 15.3433 254.316 15.2857 cv
254.279 15.284 254.242 15.2832 254.206 15.2832 cv
254.075 15.2832 li
254.075 7.22766 li
252.322 7.22766 li
252.322 0 li
250.5 0 li
249.5 0 li
247.678 0 li
247.678 7.22766 li
245.925 7.22766 li
245.925 15.2832 li
245.794 15.2832 li
244.644 15.2832 243.678 16.0777 243.417 17.148 cv
243.417 15.2832 li
243.348 15.2832 li
243.348 17.7042 li
243.348 17.7128 243.348 17.7214 243.348 17.7299 cv
243.348 20.0132 li
233.504 20.0132 li
233.504 24.8438 li
229.517 24.8438 li
225.198 24.8438 221.696 28.3453 221.696 32.6643 cv
221.696 34.7705 li
212.399 39.0708 204.613 46.4226 199.831 55.9073 cv
189.996 75.413 li
195.616 75.413 li
177.346 108.827 li
177.346 0 li
176.346 0 li
176.346 110.656 li
104.191 242.621 li
104.191 0 li
103.191 0 li
103.191 244.45 li
87.9386 272.345 li
64.204 272.345 li
64.204 315.753 li
64.19 315.779 li
64.19 230.436 li
31.0361 230.436 li
31.0361 0 li
30.0362 0 li
30.0362 230.436 li
24.3713 230.436 li
24.3713 388.604 li
24.3713 373.024 li
24.3713 370.507 li
24.3713 238.742 li
0 238.742 li
0 403.931 li
0 431.566 li
30.0362 431.566 li
30.0362 500 li
451.619 316.45 mo
443.402 316.45 li
446.543 308.452 447.993 299.717 447.379 290.725 cv
447.379 290.723 li
447.375 290.663 447.371 290.603 447.366 290.543 cv
447.366 290.54 447.366 290.538 447.366 290.535 cv
447.365 290.517 447.363 290.501 447.362 290.483 cv
447.362 290.481 447.362 290.478 447.362 290.475 cv
447.359 290.435 447.356 290.398 447.353 290.358 cv
447.353 290.354 447.352 290.352 447.352 290.348 cv
447.351 290.33 447.35 290.316 447.348 290.298 cv
447.348 290.295 447.348 290.292 447.348 290.289 cv
447.346 290.271 447.345 290.254 447.344 290.236 cv
447.344 290.235 447.343 290.231 447.343 290.23 cv
447.34 290.192 447.337 290.152 447.334 290.114 cv
447.334 290.11 447.334 290.105 447.333 290.102 cv
447.332 290.086 447.331 290.069 447.329 290.053 cv
447.329 290.049 447.329 290.047 447.329 290.043 cv
447.326 290.005 447.322 289.965 447.319 289.927 cv
447.319 289.923 447.319 289.92 447.318 289.916 cv
447.317 289.902 447.316 289.885 447.315 289.871 cv
447.314 289.866 447.314 289.858 447.313 289.853 cv
447.312 289.839 447.311 289.825 447.31 289.811 cv
447.309 289.806 447.309 289.802 447.308 289.796 cv
447.307 289.778 447.305 289.758 447.304 289.74 cv
447.304 289.738 447.303 289.737 447.303 289.736 cv
447.302 289.718 447.3 289.701 447.299 289.683 cv
447.298 289.677 447.298 289.673 447.297 289.668 cv
447.296 289.654 447.295 289.641 447.294 289.627 cv
447.293 289.621 447.293 289.614 447.292 289.608 cv
447.291 289.594 447.29 289.579 447.289 289.565 cv
447.288 289.56 447.288 289.557 447.287 289.551 cv
447.286 289.531 447.284 289.516 447.282 289.496 cv
447.282 289.491 447.282 289.486 447.281 289.481 cv
447.28 289.467 447.279 289.455 447.277 289.441 cv
447.277 289.434 447.276 289.425 447.275 289.418 cv
447.274 289.406 447.274 289.397 447.272 289.385 cv
447.272 289.377 447.271 289.368 447.27 289.361 cv
447.269 289.347 447.268 289.331 447.266 289.317 cv
447.266 289.314 447.266 289.309 447.265 289.307 cv
447.264 289.289 447.262 289.271 447.26 289.253 cv
447.26 289.245 447.259 289.239 447.258 289.231 cv
447.257 289.221 447.256 289.207 447.255 289.197 cv
447.254 289.189 447.254 289.181 447.253 289.173 cv
447.252 289.161 447.251 289.15 447.25 289.138 cv
447.249 289.132 447.248 289.124 447.248 289.117 cv
447.246 289.099 447.244 289.082 447.242 289.064 cv
447.242 289.057 447.241 289.053 447.241 289.047 cv
447.24 289.035 447.238 289.021 447.237 289.009 cv
447.236 289 447.235 288.992 447.235 288.983 cv
447.234 288.975 447.232 288.962 447.232 288.954 cv
447.231 288.945 447.23 288.937 447.229 288.928 cv
447.228 288.918 447.227 288.906 447.226 288.896 cv
447.225 288.885 447.224 288.872 447.222 288.86 cv
447.221 288.848 447.22 288.833 447.219 288.821 cv
447.218 288.812 447.217 288.803 447.216 288.794 cv
447.215 288.784 447.214 288.776 447.213 288.766 cv
447.212 288.757 447.211 288.748 447.21 288.739 cv
447.209 288.729 447.208 288.719 447.207 288.709 cv
447.206 288.7 447.205 288.691 447.204 288.682 cv
447.203 288.672 447.202 288.664 447.201 288.654 cv
447.2 288.638 447.198 288.621 447.197 288.606 cv
447.195 288.596 447.195 288.587 447.193 288.577 cv
447.193 288.568 447.191 288.558 447.191 288.549 cv
447.189 288.539 447.189 288.532 447.188 288.522 cv
447.187 288.512 447.186 288.502 447.184 288.492 cv
447.184 288.483 447.183 288.476 447.182 288.468 cv
447.181 288.458 447.18 288.447 447.179 288.437 cv
447.178 288.431 447.177 288.424 447.177 288.418 cv
447.175 288.399 447.172 288.377 447.17 288.358 cv
447.169 288.35 447.168 288.341 447.167 288.333 cv
447.166 288.324 447.165 288.312 447.164 288.303 cv
447.163 288.295 447.162 288.287 447.162 288.279 cv
447.16 288.268 447.159 288.258 447.158 288.247 cv
447.157 288.239 447.156 288.231 447.155 288.223 cv
447.153 288.205 447.152 288.189 447.15 288.171 cv
447.149 288.163 447.147 288.152 447.147 288.144 cv
447.145 288.134 447.144 288.123 447.143 288.113 cv
447.142 288.105 447.141 288.096 447.14 288.088 cv
447.139 288.079 447.138 288.069 447.137 288.06 cv
447.136 288.05 447.135 288.04 447.134 288.029 cv
447.133 288.02 447.132 288.014 447.131 288.005 cv
447.129 287.986 447.127 287.971 447.125 287.953 cv
447.124 287.945 447.123 287.936 447.122 287.928 cv
447.121 287.918 447.12 287.91 447.119 287.899 cv
447.118 287.889 447.116 287.88 447.115 287.869 cv
447.114 287.861 447.113 287.85 447.112 287.842 cv
447.111 287.833 447.11 287.824 447.109 287.815 cv
447.108 287.805 447.106 287.794 447.105 287.784 cv
447.104 287.776 447.103 287.767 447.102 287.76 cv
447.1 287.741 447.098 287.726 447.096 287.708 cv
447.095 287.701 447.094 287.691 447.093 287.685 cv
447.092 287.673 447.091 287.665 447.09 287.652 cv
447.088 287.643 447.087 287.635 447.086 287.626 cv
447.085 287.616 447.084 287.606 447.083 287.596 cv
447.082 287.588 447.081 287.578 447.08 287.571 cv
447.078 287.556 447.077 287.545 447.075 287.531 cv
447.074 287.521 447.072 287.51 447.071 287.5 cv
447.07 287.488 447.068 287.475 447.066 287.463 cv
447.066 287.456 447.064 287.445 447.063 287.437 cv
447.062 287.427 447.061 287.418 447.06 287.408 cv
447.059 287.399 447.057 287.39 447.056 287.381 cv
447.055 287.371 447.054 287.359 447.052 287.349 cv
447.051 287.341 447.05 287.334 447.049 287.326 cv
447.047 287.31 447.045 287.289 447.043 287.273 cv
447.042 287.267 447.041 287.26 447.04 287.254 cv
447.039 287.241 447.037 287.229 447.036 287.217 cv
447.035 287.21 447.034 287.201 447.033 287.194 cv
447.031 287.182 447.03 287.173 447.028 287.161 cv
447.027 287.152 447.026 287.144 447.025 287.135 cv
447.024 287.123 447.022 287.114 447.021 287.102 cv
447.02 287.093 447.018 287.084 447.017 287.075 cv
447.015 287.059 447.013 287.045 447.011 287.029 cv
447.01 287.021 447.009 287.013 447.008 287.005 cv
447.007 286.995 447.005 286.982 447.004 286.972 cv
447.003 286.964 447.001 286.955 447 286.947 cv
446.999 286.937 446.998 286.926 446.996 286.916 cv
446.995 286.907 446.994 286.9 446.993 286.891 cv
446.991 286.875 446.989 286.859 446.987 286.843 cv
446.986 286.835 446.985 286.829 446.984 286.821 cv
446.982 286.809 446.98 286.794 446.978 286.782 cv
446.978 286.775 446.976 286.767 446.976 286.761 cv
446.974 286.749 446.972 286.737 446.971 286.725 cv
446.97 286.718 446.969 286.709 446.968 286.703 cv
446.966 286.689 446.964 286.677 446.962 286.663 cv
446.962 286.658 446.961 286.652 446.96 286.647 cv
446.958 286.629 446.955 286.61 446.952 286.592 cv
446.952 286.587 446.951 286.58 446.95 286.575 cv
446.948 286.563 446.947 286.549 446.945 286.537 cv
446.944 286.529 446.943 286.522 446.942 286.514 cv
446.94 286.504 446.938 286.488 446.937 286.478 cv
446.936 286.471 446.935 286.465 446.934 286.457 cv
446.931 286.439 446.928 286.42 446.926 286.402 cv
446.926 286.402 li
446.926 286.402 li
446.924 286.387 446.921 286.371 446.919 286.355 cv
446.918 286.345 446.916 286.332 446.914 286.322 cv
446.913 286.312 446.912 286.306 446.911 286.296 cv
446.908 286.277 446.905 286.258 446.903 286.239 cv
446.901 286.231 446.9 286.219 446.899 286.211 cv
446.896 286.192 446.893 286.174 446.89 286.155 cv
446.889 286.146 446.888 286.138 446.887 286.13 cv
446.883 286.106 446.879 286.079 446.876 286.056 cv
446.875 286.052 446.875 286.052 446.875 286.048 cv
446.871 286.021 446.867 285.994 446.863 285.968 cv
446.862 285.96 446.86 285.952 446.859 285.944 cv
446.856 285.925 446.854 285.906 446.851 285.886 cv
446.849 285.876 446.848 285.868 446.846 285.858 cv
446.844 285.839 446.841 285.822 446.838 285.803 cv
446.837 285.793 446.835 285.786 446.834 285.776 cv
446.831 285.754 446.827 285.729 446.823 285.707 cv
446.823 285.703 446.822 285.699 446.822 285.695 cv
446.818 285.669 446.813 285.642 446.809 285.616 cv
446.808 285.608 446.807 285.599 446.805 285.591 cv
446.803 285.573 446.799 285.552 446.797 285.534 cv
446.795 285.526 446.793 285.513 446.792 285.505 cv
446.789 285.488 446.786 285.468 446.784 285.451 cv
446.782 285.44 446.781 285.434 446.779 285.424 cv
446.776 285.401 446.772 285.379 446.768 285.355 cv
446.768 285.351 446.767 285.347 446.766 285.343 cv
446.762 285.317 446.758 285.29 446.754 285.264 cv
446.752 285.254 446.751 285.248 446.75 285.238 cv
446.747 285.221 446.744 285.202 446.741 285.184 cv
446.739 285.174 446.737 285.162 446.736 285.152 cv
446.733 285.135 446.73 285.119 446.727 285.101 cv
446.726 285.091 446.724 285.082 446.722 285.072 cv
446.719 285.052 446.716 285.031 446.713 285.012 cv
446.711 285.004 446.711 284.999 446.709 284.991 cv
446.705 284.966 446.701 284.939 446.696 284.914 cv
446.694 284.902 446.693 284.896 446.691 284.884 cv
446.688 284.866 446.686 284.852 446.683 284.834 cv
446.681 284.824 446.679 284.811 446.677 284.801 cv
446.674 284.784 446.672 284.768 446.669 284.751 cv
446.667 284.741 446.666 284.731 446.664 284.721 cv
446.66 284.701 446.657 284.682 446.654 284.661 cv
446.653 284.655 446.651 284.647 446.65 284.641 cv
446.646 284.616 446.641 284.589 446.637 284.564 cv
446.635 284.554 446.633 284.545 446.632 284.535 cv
446.629 284.517 446.626 284.502 446.623 284.484 cv
446.621 284.472 446.619 284.462 446.617 284.45 cv
446.614 284.434 446.612 284.42 446.609 284.404 cv
446.607 284.394 446.605 284.379 446.603 284.369 cv
446.6 284.353 446.597 284.337 446.594 284.321 cv
446.592 284.311 446.59 284.3 446.589 284.29 cv
446.584 284.265 446.58 284.24 446.575 284.216 cv
446.573 284.204 446.572 284.194 446.569 284.182 cv
446.567 284.167 446.564 284.15 446.561 284.136 cv
446.559 284.124 446.557 284.111 446.554 284.099 cv
446.552 284.086 446.549 284.07 446.547 284.057 cv
446.545 284.045 446.542 284.031 446.54 284.019 cv
446.537 284.005 446.535 283.99 446.532 283.976 cv
446.529 283.96 446.527 283.948 446.524 283.932 cv
446.52 283.91 446.516 283.89 446.512 283.868 cv
446.509 283.854 446.507 283.842 446.505 283.828 cv
446.502 283.816 446.5 283.802 446.498 283.79 cv
446.495 283.776 446.492 283.762 446.49 283.748 cv
446.487 283.735 446.485 283.725 446.483 283.712 cv
446.48 283.698 446.478 283.684 446.475 283.67 cv
446.473 283.657 446.47 283.645 446.468 283.632 cv
446.464 283.612 446.461 283.594 446.457 283.574 cv
446.454 283.557 446.45 283.539 446.447 283.521 cv
446.444 283.505 446.442 283.494 446.438 283.478 cv
446.436 283.467 446.434 283.455 446.432 283.443 cv
446.429 283.429 446.426 283.413 446.423 283.399 cv
446.421 283.387 446.419 283.378 446.417 283.366 cv
446.414 283.352 446.411 283.335 446.408 283.321 cv
446.406 283.311 446.404 283.3 446.402 283.29 cv
446.391 283.235 446.381 283.183 446.37 283.128 cv
446.368 283.118 446.366 283.107 446.364 283.097 cv
446.361 283.083 446.358 283.065 446.355 283.051 cv
446.353 283.04 446.351 283.031 446.349 283.02 cv
446.345 283.004 446.342 282.989 446.339 282.973 cv
446.337 282.963 446.336 282.957 446.334 282.947 cv
446.322 282.889 446.311 282.834 446.299 282.777 cv
446.298 282.77 446.296 282.76 446.294 282.753 cv
446.291 282.737 446.287 282.718 446.284 282.702 cv
446.282 282.693 446.281 282.686 446.279 282.678 cv
446.276 282.662 446.271 282.641 446.268 282.625 cv
446.267 282.619 446.266 282.613 446.264 282.607 cv
446.251 282.544 446.239 282.486 446.226 282.423 cv
446.225 282.419 446.224 282.415 446.223 282.41 cv
446.219 282.393 446.215 282.371 446.211 282.353 cv
446.21 282.347 446.209 282.342 446.207 282.336 cv
446.203 282.316 446.199 282.298 446.195 282.278 cv
446.194 282.274 446.194 282.272 446.193 282.268 cv
446.179 282.203 446.165 282.137 446.151 282.072 cv
446.151 282.071 446.15 282.069 446.15 282.067 cv
446.145 282.048 446.141 282.025 446.136 282.006 cv
446.136 282.003 446.134 281.997 446.134 281.994 cv
446.129 281.972 446.125 281.954 446.12 281.933 cv
446.12 281.931 446.119 281.927 446.119 281.926 cv
446.099 281.838 446.079 281.747 446.059 281.659 cv
446.059 281.656 446.059 281.656 446.058 281.653 cv
443.563 270.548 438.024 260.765 430.433 253.026 cv
436.055 247.404 li
448.199 260.19 454.98 277.026 454.98 295.089 cv
454.98 302.539 453.801 309.718 451.619 316.45 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@
)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@
)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@
)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@)^dB@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~)^dB@)^mHA)^mKB)^mKB)_!TD*%<]E*%EfG*%EiH*%ElI*@j&K*@s/M*\98N*\BAP+"fSS+"fVT+>5hW
+>>qY+Yc.\+u2@_+u2C`,;VUc,W%gf,W%jg,rJ'j,rS0l,r\9n-9"Ep-TFWs-TFZt-ojm".6:*%.6C3'
.QgE*.QgH+.m6Z..m?c0/3Zo2/O*/6/O388/jWJ;/j`S=01/e@018qC0L].F0h,@I0h,CJ1.PXN1ItjQ
1J(sS1eM0V1eV9X2,%N\2GI`_2GRia2c")e2c",f3)FAj3)OJl3)XSn3E'hr3`L%u3`U/"4'$D&4BHV*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)]K_8)]K_8*#oq<*$$%?*?H7C*ZcCF+!2UJ+X&!P+sJ3U,9nEY,U=W\,U=Z^-71&d-RU;j-n$Jm.4H\q
.Olnu.k</%/1`A)/M/S-/hSb00/,(60JP:;1,:U?1G^gC1c.'I2)R6L2E!HP2`EZS2`E]U3B9)[3]]>a
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&e-RU8h-RU;j
-n$Mn.4H\p.Olnu.k<,$/1iG*/M/S-0/#"50ekC;1,:U@1G^gD1c7-K2E!HO2`EZS3&ioY3]];`4$,Md
4?Yhj4Zttm5<hCu5s[h(6UO4/6q'O577Ka:7n6*@8P)NH91qrP9he>W:/4P[:Jakb;,L4h;c?Xp<E3(#
~>
<~0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;
0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0etL>1,:XA
1G^jE2)R9M2E!HP2`EZT3&ru[3]]>a4?Pbi5!D1q5X7S#5sdn*6UX=277B[87n6*@8P)NH91qoO9MJ5V
:/=Y^:f("e;c?Xp<E3(#='&L,=^#!5>?kH??=$uG?smDO@UiqZAS#FbB4tsmC27U$Ci!s+Df9T6EH6,A
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
469.964 500 mo
468.964 500 li
468.964 431.566 li
469.964 431.566 li
469.964 500 li
469.964 316.45 mo
468.964 316.45 li
468.964 0 li
469.964 0 li
469.964 316.45 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb
.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb
.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb
.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb.5<pb
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.5<pb.5<pb.5O*e.Pa-e.Pa3g.Pj6g.l0Ej.l9Nl.l9Nl/2]`o/2]fq/2]ir/N-#t/N-&u/N60"/iQ?%
/iZB%00)N&00)T(002]*0KVl,0KVr.0g&/10g/211HeJ51HnS71d=e:1dOt=1dP">2*t4A2+(=C2FLOF
2ag^I3(6pL3(@$N3Cd6Q3Cd<S3_3NV3_3NV4%W`Y4%WcZ4%`l\4A9/`4AB8b4\fJe4\oSg5>Gej5>Pnl
5Yu+o5Z2:r5uVLu5u_Y$5uV\&5u_b'6<.t*6<A.-6s+F079Xa579aj87U($;7U13?7U:9@7U1<B7pUNE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jm.4H\p
.4H_r.Olnt.k<,#.k<,$/1`>'/1`A)/M/S-/hSb/0/"t30/,(60JP=<1,:XA1G^gC1c.$G2)R6L2E*QR
2`NcV3&ioY3B9,]3]];_4$,Mc4$5Vf4?Ykl5!D1q5<hCu5X7S"5X7S#5s[e'6UX=16psI477BX677B[8
~>
<~0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JP=<1,:R=
1,:U?1G^gC1c.$G1c.$H2)R6L2E!HO2`E]U3&ioY3]];_3]fDc4?P_h4Zttm5<qJ!5s[h(6UO4.6UX=2
77Ka97Rfm<7n6*@84Z<D8kM`M9MJ5V:/4PZ:/4S\:f1+g;c?Un;c?Uo<)lt#='/U/>$>*5>?b?;>[1N=
~>
<~4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$5Vf4?Pbj
5!D.p5X7S"5s[e'6UX=16q'O67Rfm=84Z6@7n?3C8P)KG92&#Q9MA/U:/4S\:f("d;GpFl<)cgs<``@)
=BSd1>?b?;>[1Q??=$uG?smAN@:E\U@q9._AnG[gBP;*oC27X&DJj?1DfBZ7E,fo>F)uGGGBe@WH$Xjc
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
396.81 500 mo
395.81 500 li
395.81 431.566 li
396.81 431.566 li
396.81 500 li
396.81 235.414 mo
396.477 235.356 396.144 235.301 395.81 235.248 cv
395.81 0 li
396.81 0 li
396.81 235.414 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
323.654 500 mo
322.654 500 li
322.654 431.566 li
323.654 431.566 li
323.654 500 li
323.654 106.998 mo
322.654 105.169 li
322.654 0 li
323.654 0 li
323.654 106.998 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
250.5 500 mo
249.5 500 li
249.5 431.566 li
250.5 431.566 li
250.5 500 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
177.346 500 mo
176.346 500 li
176.346 431.566 li
177.346 431.566 li
177.346 500 li
176.346 110.656 mo
176.346 0 li
177.346 0 li
177.346 108.827 li
176.346 110.656 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
104.191 500 mo
103.191 500 li
103.191 431.566 li
104.191 431.566 li
104.191 500 li
103.191 244.45 mo
103.191 0 li
104.191 0 li
104.191 242.621 li
103.191 244.45 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
31.0361 500 mo
30.0362 500 li
30.0362 431.566 li
31.0361 431.566 li
31.0361 500 li
31.0361 230.436 mo
30.0362 230.436 li
30.0362 0 li
31.0361 0 li
31.0361 230.436 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
406.417 403.931 mo
396.81 403.931 li
396.81 367.665 li
400.088 367.158 403.296 366.433 406.417 365.506 cv
406.417 403.931 li
395.81 403.931 mo
323.654 403.931 li
323.654 403.929 li
325.55 403.886 327.359 403.113 328.703 401.77 cv
328.963 401.51 329.22 401.255 329.48 400.995 cv
330.868 399.61 331.649 397.729 331.649 395.768 cv
331.649 388.499 li
334.517 388.194 li
334.517 382.582 li
331.649 382.582 li
331.649 380.858 li
328.042 377.25 li
327.169 376.377 325.985 375.887 324.751 375.887 cv
323.654 375.887 li
323.654 298.6 li
323.747 300.316 323.914 302.042 324.16 303.775 cv
326.009 316.842 331.996 328.327 340.652 337.15 cv
335.042 342.761 li
333.205 340.806 331.466 338.732 329.833 336.543 cv
329.441 336.015 328.839 335.737 328.229 335.737 cv
327.813 335.737 327.393 335.866 327.034 336.134 cv
326.148 336.796 325.966 338.049 326.626 338.933 cv
340.653 357.741 362.127 368.528 385.54 368.528 cv
389.025 368.528 392.453 368.284 395.81 367.812 cv
395.81 403.931 li
301.144 403.931 mo
266.97 403.931 li
272.717 403.931 277.616 399.797 278.584 394.133 cv
278.584 394.133 li
284.057 393.552 li
289.529 394.133 li
290.497 399.797 295.396 403.931 301.144 403.931 cv
244.628 403.931 mo
177.346 403.931 li
177.346 108.827 li
195.616 75.413 li
249.5 75.413 li
249.5 375.887 li
243.362 375.887 li
242.128 375.887 240.944 376.377 240.071 377.25 cv
236.464 380.858 li
236.464 382.582 li
233.596 382.582 li
233.596 388.194 li
236.464 388.499 li
236.464 395.768 li
236.464 397.729 237.245 399.61 238.633 400.995 cv
238.894 401.255 239.15 401.51 239.41 401.77 cv
240.794 403.153 242.672 403.931 244.628 403.931 cv
176.346 403.931 mo
112.919 403.931 li
112.919 390.805 li
113.652 393.223 li
114.469 393.223 li
114.469 396.614 li
115.48 400.048 li
116.49 396.614 li
116.49 393.223 li
117.308 393.223 li
120.162 383.802 li
112.919 383.802 li
112.919 383.744 li
115.48 383.744 li
120.162 383.744 li
120.162 302.17 li
120.164 302.17 120.166 302.17 120.167 302.17 cv
121.71 302.173 122.974 303.379 123.071 304.898 cv
123.071 304.899 123.071 304.9 123.071 304.902 cv
123.072 304.919 123.073 304.936 123.074 304.953 cv
123.074 304.962 123.074 304.971 123.075 304.98 cv
123.076 305.014 123.077 305.049 123.077 305.084 cv
123.077 325.024 li
125.173 325.024 li
125.173 305.084 li
125.173 305.084 li
125.173 305.009 125.171 304.933 125.168 304.858 cv
125.051 302.238 122.91 300.134 120.275 300.075 cv
120.274 300.075 120.273 300.075 120.272 300.075 cv
120.267 300.075 120.263 300.075 120.259 300.075 cv
120.259 300.075 120.259 300.075 120.258 300.075 cv
120.253 300.075 120.248 300.075 120.243 300.075 cv
120.241 300.075 120.239 300.075 120.237 300.074 cv
120.234 300.074 120.23 300.074 120.227 300.074 cv
120.226 300.074 120.225 300.074 120.224 300.074 cv
120.215 300.074 120.204 300.074 120.194 300.074 cv
120.192 300.074 120.188 300.074 120.186 300.074 cv
120.183 300.074 120.181 300.074 120.178 300.074 cv
120.175 300.074 120.172 300.074 120.169 300.074 cv
120.166 300.074 120.164 300.074 120.162 300.074 cv
120.162 298.08 li
118.075 298.08 li
118.075 291.985 li
112.919 291.985 li
112.919 288.025 li
112.919 284.409 li
112.919 277.741 li
104.191 277.741 li
104.191 242.621 li
176.346 110.656 li
176.346 403.931 li
128.262 402.83 mo
128.262 402.83 li
129.603 399.511 li
129.935 396.137 li
130.749 396.217 li
134.511 387.12 li
125.191 386.204 li
127.11 395.859 li
127.924 395.939 li
127.593 399.314 li
128.262 402.83 li
128.262 402.83 li
134.517 387.063 mo
134.517 387.063 li
142.494 305.88 li
143.862 306.014 144.918 307.079 145.097 308.385 cv
145.097 308.389 145.098 308.392 145.098 308.395 cv
145.098 308.398 145.099 308.401 145.099 308.403 cv
145.1 308.407 145.1 308.411 145.101 308.415 cv
145.101 308.417 145.101 308.419 145.101 308.421 cv
145.127 308.631 145.131 308.846 145.109 309.065 cv
143.159 328.909 li
145.245 329.114 li
147.195 309.27 li
147.465 306.521 145.448 304.064 142.699 303.793 cv
142.71 303.675 li
142.894 301.809 li
142.894 301.809 li
140.817 301.605 li
141.413 295.54 li
138.83 295.286 li
136.246 295.032 li
135.65 301.097 li
133.573 300.893 li
125.197 386.147 li
134.517 387.063 li
89.1952 403.931 mo
89.183 403.931 li
89.183 392.795 li
89.183 390.841 li
89.183 381.151 li
89.183 379.198 li
89.183 297.079 li
89.183 295.125 li
89.183 285.435 li
89.183 283.481 li
89.183 272.345 li
87.9386 272.345 li
103.191 244.45 li
103.191 277.741 li
89.1952 277.741 li
89.1952 403.931 li
64.204 403.931 mo
64.19 403.931 li
64.19 386.669 li
64.19 383.339 li
64.19 355.008 li
64.19 351.678 li
64.19 315.779 li
64.204 315.753 li
64.204 403.931 li
323.654 399.146 mo
323.654 399.146 li
324.285 399.106 324.873 398.84 325.326 398.388 cv
326.108 397.607 li
326.591 397.126 326.87 396.454 326.87 395.768 cv
326.87 389.006 li
326.87 395.768 li
326.87 396.454 326.591 397.126 326.108 397.607 cv
325.327 398.388 li
324.873 398.84 324.285 399.106 323.654 399.146 cv
289.529 394.133 mo
289.333 392.992 li
289.529 394.133 li
278.584 394.133 mo
278.78 392.992 li
278.584 394.133 li
284.057 389.536 mo
279.487 388.868 li
280.854 380.858 li
279.619 379.401 278.946 378.596 278.061 377.545 cv
277.176 376.495 275.872 375.887 274.5 375.887 cv
250.5 375.887 li
250.5 75.413 li
306.384 75.413 li
322.654 105.169 li
322.654 375.887 li
293.614 375.887 li
292.241 375.887 290.937 376.495 290.053 377.545 cv
289.167 378.596 288.494 379.401 287.259 380.858 cv
288.626 388.868 li
284.057 389.536 li
385.54 364.528 mo
367.487 364.528 350.653 357.745 337.862 345.597 cv
343.546 339.913 li
354.616 349.809 369.307 355.694 385.065 355.694 cv
388.022 355.694 391.015 355.487 394.029 355.06 cv
394.029 355.06 li
394.029 355.06 li
394.05 355.057 394.073 355.054 394.094 355.051 cv
394.099 355.051 394.104 355.05 394.109 355.049 cv
394.128 355.046 394.15 355.043 394.168 355.041 cv
394.171 355.04 394.172 355.04 394.174 355.04 cv
394.197 355.036 394.219 355.033 394.242 355.03 cv
394.244 355.03 394.246 355.029 394.249 355.029 cv
394.771 354.953 395.292 354.871 395.81 354.783 cv
395.81 363.771 li
392.457 364.27 389.029 364.528 385.54 364.528 cv
396.81 363.614 mo
396.81 354.605 li
400.123 353.987 403.334 353.119 406.417 352.024 cv
406.417 361.322 li
403.305 362.305 400.093 363.076 396.81 363.614 cv
138.234 301.351 mo
138.234 301.351 li
138.234 301.351 li
323.654 292.211 mo
323.654 106.998 li
393.61 234.942 li
391.115 234.638 388.583 234.483 386.02 234.483 cv
383.064 234.483 380.071 234.69 377.056 235.117 cv
347.147 239.349 325.191 263.772 323.654 292.211 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0
'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0
'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0
'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0'I#.0
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'I#.0'I#.0'I,72(*bI4(*bO6'dPI5(F1a9(F1d:(F1d:(aLp<(aLp<(a_*?(FM$>(FM'?(F_6B)(7HE
(b%BD)(ITG)Cd`I)CdfK)_*rM)_*uN*%O2Q*%a;R*%aAT*%jDT*%sMV*&'VX*ABbZ*\]t^+#67b+>ZIe
+>ZLf+Z)aj+Z2gk+ZE!n+ZE!n+u`-p,</?s,WJO!,WJR",re^$,s"m'-9G**-9P3,-9Y<.-TtK1-U(T3
.6U`4.6go7.6q#9.7%2=.R@>?.RIGA.R[YE.RdbG.n*nI/Oa.L/4X4N/k0CP/kBUT01fgW/kTgX/kg![
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#n'bqGu
'bqH!()@Z$(Ddl((Ddl((D[c%()@]'(`4),)&X;0)B'M4)B0V7)]K_8)]K_8)]Kb:*??1B+!2RH+!;[K
+<VdL+<VgN+sJ6V,9nHZ,U=W],pai`,pjrc-71)g-n$Jl-n$Mn.4H\p.4H\q.P!&$/1`>(/M/S-/hS_-
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X/*S+sJ3T
,9nEX,9nEX,9nEX,:"Q^-71&e-n$Jl-n$Mn.4H\p.4H\p.4Qet/1`>(/M/S-0/"t30/#"61,:U?1,C^C
1c70L2E!HO2`EZS2`EZS3&ioZ3]fDc4?P_h4Ztqk4[)(p5X7S"5s[e'6UX=16psF37Rfj:7Rp!?8P)NI
~>
<~/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+
/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M8Y./hSe2
0JG181,:U?1G^gC1GgpF1c.$H2)R9N2`EZS3&ioZ4$,Md4?Yhj4Zttm5!D.o5<hCu5sdt-77BX77Rp!?
84cBE8P)NH91qrQ:/4S\:f'tc;,U:j;cHat<`W7%='&L+=^#'8?!U`B?XR8M@:E\U@q0%[AS,RfBP;*o
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
396.81 403.931 mo
395.81 403.931 li
395.81 367.812 li
396.143 367.766 396.478 367.716 396.81 367.665 cv
396.81 403.931 li
395.81 363.771 mo
395.81 354.783 li
396.145 354.726 396.476 354.667 396.81 354.605 cv
396.81 363.614 li
396.477 363.669 396.144 363.721 395.81 363.771 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K
+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K
+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K
+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K+"9,K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+"9,K+"9,K+"B2L+=]>N+=]AO+=fDO+=fJQ+>#YT+>#YT+YGkW+YGnX+YGtZ,;27],;27],;2:^,q_La
,qqXc-8@dd-8@jf-8Ish,r7ph-8S*k-T"<n-T4Eo-oFNq-oX]t.5jcu.5sj!.5sm".QC*%.QL3'.Q^B*
.Q^E+.m-W..m6`0/Ncr3/Ncu4/j327/j32700WG;00WG;00iV>00r\?01&eA019"E0LT.G0gf7I0h#FL
1.>UO1.G[P1IkmS1J)'V1J)-X1J26Z1eVH]1eVN_2G@ca2be#e2bn)f3)48i3)=Gm3)FPo3)FPo3)OYq
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@E+!2RH
+!2RH+!2RH+<VdL+<VdM+sJ3T+sJ6W,U=Z^,pai`,pai`,pjrc-7:/g-RU;j-n$Jl.4H\p.4H\p.4Qes
.P!&$/1`A)/M/S-/hSb//hSb//hSb00/,(60JG490ekF=1,:U?1,:U@1G^gD2)[?N2E!KQ2`EZS2`EZS
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n-So.4H\p
.Olnt.kE5&/M/P+/M/P,/hSb//hSb//h\n40JG491,:U?1,C^C2)R6K2E!HO2E!HO2`E]U3B9,]3]fDc
4?P_f4$,Pe4?Pbi4Zttn5X7S#5sdq+6UO4.6psF277B[87n?0A8P)KG8kM]K92&#R9he>V:/4S\:JXe`
~>
<~2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HP2`E]U
3&ilX3]];_4$,Md4?Ykl5!D.p5<hD!5s[e&5sdq+6UO4/77Ka97Rfm=84Z<D8P)NH91qrP9he>W:/=Y^
:f1+h;c?Xp<)cju<`W:'='&I*=BSg3>?kH??=$uH?smDO@U`hXAS#FbAnPdjBP;*oBk_<tD/O91Df9T6
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
323.654 403.931 mo
323.485 403.931 li
323.542 403.931 323.598 403.931 323.654 403.929 cv
323.654 403.931 li
323.485 399.152 mo
322.654 399.152 li
323.485 399.152 li
323.542 399.152 323.598 399.15 323.654 399.146 cv
323.654 399.146 li
323.598 399.15 323.542 399.152 323.485 399.152 cv
323.654 375.887 mo
322.654 375.887 li
322.654 105.169 li
323.654 106.998 li
323.654 292.211 li
323.54 294.32 323.539 296.454 323.654 298.6 cv
323.654 375.887 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.5 375.887 mo
249.5 375.887 li
249.5 75.413 li
250.5 75.413 li
250.5 375.887 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
177.346 403.931 mo
176.346 403.931 li
176.346 110.656 li
177.346 108.827 li
177.346 403.931 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
104.191 277.741 mo
103.191 277.741 li
103.191 244.45 li
104.191 242.621 li
104.191 277.741 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
500 500 mo
0 500 li
0 420.848 li
500 420.848 li
500 500 li
cp
.779202 .591241 .502647 .329534 cmyk
f
500 443.695 mo
0 443.695 li
0 420.848 li
500 420.848 li
500 443.695 li
cp
.79498 .633936 .556786 .48838 cmyk
f
500 431.566 mo
0 431.566 li
0 403.931 li
500 403.931 li
500 431.566 li
.754421 .519646 .43476 .181674 cmyk
f
500 431.566 mo
447.509 431.566 li
447.509 403.931 li
500 403.931 li
500 431.566 li
cp
.772976 .535241 .483253 .251286 cmyk
f
386.967 500 mo
500 500 li
500 443.695 li
386.967 443.695 li
386.967 500 li
cp
.79498 .633936 .556786 .48838 cmyk
f
391.543 462 mo
0 462 li
0 461 li
391.543 461 li
391.543 462 li
cp
f
391.543 485.167 mo
0 485.167 li
0 484.167 li
391.543 484.167 li
391.543 485.167 li
cp
f
112.919 403.931 mo
112.919 277.741 li
89.1952 277.741 li
89.1952 403.931 li
112.919 403.931 li
0 .219608 .596918 0 cmyk
f
93.5056 320.721 mo
108.609 320.721 li
108.609 393.624 li
93.5056 393.624 li
93.5056 320.721 li
.00546273 .190799 .413275 0 cmyk
f
89.1952 288.025 mo
89.1952 284.409 li
112.919 284.409 li
112.919 288.025 li
89.1952 288.025 li
0 .219608 .596918 0 cmyk
f
89.1952 295.602 mo
89.1952 291.985 li
112.919 291.985 li
112.919 295.602 li
89.1952 295.602 li
.00546273 .190799 .413275 0 cmyk
f
101.057 316.581 mo
96.9672 316.581 93.6514 313.266 93.6514 309.175 cv
93.6514 305.085 96.9672 301.77 101.057 301.77 cv
105.147 301.77 108.463 305.085 108.463 309.175 cv
108.463 313.266 105.147 316.581 101.057 316.581 cv
f
101.057 403.931 mo
89.1952 403.931 li
89.1952 295.602 li
101.057 295.602 li
101.057 296.402 li
97.3897 296.773 li
96.4298 296.87 95.7141 297.68 95.7137 298.624 cv
95.7137 298.687 95.7168 298.751 95.7233 298.815 cv
95.7233 298.815 li
96.1203 302.738 li
96.1202 302.738 li
96.2055 303.58 li
94.6409 304.938 93.6514 306.941 93.6514 309.175 cv
93.6514 311.946 95.1724 314.361 97.4249 315.631 cv
97.94 320.721 li
93.5056 320.721 li
93.5056 393.624 li
101.057 393.624 li
101.057 403.931 li
.101656 .282567 .653437 0 cmyk
f
101.057 393.624 mo
93.5056 393.624 li
93.5056 320.721 li
97.94 320.721 li
101.057 351.527 li
101.057 393.624 li
.1066 .257267 .47013 0 cmyk
f
101.057 291.985 mo
89.1952 291.985 li
89.1952 288.025 li
101.057 288.025 li
101.057 291.985 li
101.057 284.409 mo
89.1952 284.409 li
89.1952 277.741 li
101.057 277.741 li
101.057 284.409 li
.101656 .282567 .653437 0 cmyk
f
101.057 288.025 mo
89.1952 288.025 li
89.1952 284.409 li
101.057 284.409 li
101.057 288.025 li
f
101.057 295.602 mo
89.1952 295.602 li
89.1952 291.985 li
101.057 291.985 li
101.057 295.602 li
.1066 .257267 .47013 0 cmyk
f
97.4249 315.631 mo
95.1724 314.361 93.6514 311.946 93.6514 309.175 cv
93.6514 306.941 94.6409 304.938 96.2055 303.58 cv
96.2231 303.754 li
97.4249 315.631 li
f
24.3713 403.931 mo
24.3713 238.742 li
0 238.742 li
0 403.931 li
24.3713 403.931 li
.779202 .591241 .502647 .329534 cmyk
f
12.1857 251.337 mo
16.4702 251.337 19.9434 254.81 19.9434 259.094 cv
19.9434 352.443 li
19.9434 356.727 16.4702 360.201 12.1857 360.201 cv
7.90124 360.201 4.42804 356.727 4.42804 352.443 cv
4.42804 259.094 li
4.42804 254.81 7.90124 251.337 12.1857 251.337 cv
.706325 .36054 .278843 .0159304 cmyk
f
.000143284 370.507 mo
24.3713 370.507 li
24.3713 393.116 li
.000143284 393.116 li
.000143284 370.507 li
.401709 .12256 .422339 0 cmyk
f
.000143284 373.024 mo
24.3713 373.024 li
24.3713 390.599 li
.000143284 390.599 li
.000143284 373.024 li
.706325 .36054 .278843 .0159304 cmyk
f
12.1857 403.931 mo
0 403.931 li
0 238.742 li
12.1857 238.742 li
12.1857 251.337 li
12.1857 251.337 li
7.90124 251.337 4.42804 254.81 4.42804 259.094 cv
4.42804 352.443 li
4.42804 356.727 7.90124 360.201 12.1857 360.201 cv
12.1857 360.201 li
12.1857 370.507 li
.000143284 370.507 li
.000143284 393.116 li
12.1857 393.116 li
12.1857 403.931 li
.791836 .607691 .520836 .384253 cmyk
f
12.1857 360.201 mo
7.90124 360.201 4.42804 356.727 4.42804 352.443 cv
4.42804 259.094 li
4.42804 254.81 7.90124 251.337 12.1857 251.337 cv
12.1857 251.337 li
12.1857 360.201 li
12.1857 360.201 li
.744381 .419898 .320989 .045594 cmyk
f
12.1857 393.116 mo
.000143284 393.116 li
.000143284 370.507 li
12.1857 370.507 li
12.1857 373.024 li
.000143284 373.024 li
.000143284 390.599 li
12.1857 390.599 li
12.1857 393.116 li
.469764 .205966 .475593 .00549325 cmyk
f
12.1857 390.599 mo
.000143284 390.599 li
.000143284 373.024 li
12.1857 373.024 li
12.1857 390.599 li
.744381 .419898 .320989 .045594 cmyk
f
64.19 403.931 mo
64.19 230.436 li
24.3713 230.436 li
24.3713 403.931 li
64.19 403.931 li
.543145 .127993 .626429 .0021973 cmyk
f
64.19 386.669 mo
64.19 351.678 li
24.3713 351.678 li
24.3713 386.669 li
64.19 386.669 li
.401709 .12256 .422339 0 cmyk
f
64.19 383.339 mo
64.19 355.008 li
24.3713 355.008 li
24.3713 383.339 li
64.19 383.339 li
0 .219608 .596918 0 cmyk
f
31.606 256.848 mo
56.9555 256.848 li
56.9555 344.754 li
31.606 344.754 li
31.606 256.848 li
.401709 .12256 .422339 0 cmyk
f
44.2806 403.931 mo
24.3713 403.931 li
24.3713 386.669 li
44.2806 386.669 li
44.2806 403.931 li
44.2806 351.678 mo
24.3713 351.678 li
24.3713 230.436 li
44.2806 230.436 li
44.2806 256.848 li
31.606 256.848 li
31.606 344.754 li
44.2806 344.754 li
44.2806 351.678 li
.589166 .20145 .667231 .0198367 cmyk
f
44.2806 386.669 mo
24.3713 386.669 li
24.3713 383.339 li
44.2806 383.339 li
44.2806 386.669 li
44.2806 355.008 mo
24.3713 355.008 li
24.3713 351.678 li
44.2806 351.678 li
44.2806 355.008 li
.469764 .205966 .475593 .00549325 cmyk
f
44.2806 383.339 mo
24.3713 383.339 li
24.3713 355.008 li
44.2806 355.008 li
44.2806 383.339 li
.101656 .282567 .653437 0 cmyk
f
44.2806 344.754 mo
31.606 344.754 li
31.606 256.848 li
44.2806 256.848 li
44.2806 344.754 li
.469764 .205966 .475593 .00549325 cmyk
f
89.183 272.345 mo
89.183 403.931 li
64.204 403.931 li
64.204 272.345 li
89.183 272.345 li
0 .561456 .61062 0 cmyk
f
76.6935 308.17 mo
81.9818 308.17 86.2687 312.457 86.2687 317.745 cv
86.2687 358.531 li
86.2687 363.82 81.9818 368.107 76.6935 368.107 cv
71.4053 368.107 67.1184 363.82 67.1184 358.531 cv
67.1184 317.745 li
67.1184 312.457 71.4053 308.17 76.6935 308.17 cv
.00708019 .278782 .682246 0 cmyk
f
64.2042 297.079 mo
89.183 297.079 li
89.183 283.481 li
64.2042 283.481 li
64.2042 297.079 li
f
64.2042 295.125 mo
89.183 295.125 li
89.183 285.435 li
64.2042 285.435 li
64.2042 295.125 li
0 .561456 .61062 0 cmyk
f
64.2042 379.198 mo
89.183 379.198 li
89.183 392.795 li
64.2042 392.795 li
64.2042 379.198 li
.00708019 .278782 .682246 0 cmyk
f
64.2042 381.151 mo
89.183 381.151 li
89.183 390.841 li
64.2042 390.841 li
64.2042 381.151 li
.67126 0 .361639 0 cmyk
f
76.6935 403.931 mo
64.204 403.931 li
64.204 272.345 li
76.6935 272.345 li
76.6935 283.481 li
64.2042 283.481 li
64.2042 297.079 li
76.6935 297.079 li
76.6935 308.17 li
76.6935 308.17 li
71.4053 308.17 67.1184 312.457 67.1184 317.745 cv
67.1184 358.531 li
67.1184 363.82 71.4053 368.107 76.6935 368.107 cv
76.6935 368.107 li
76.6935 379.198 li
64.2042 379.198 li
64.2042 392.795 li
76.6935 392.795 li
76.6935 403.931 li
.0844129 .610712 .669154 .00234989 cmyk
f
76.6935 368.107 mo
71.4053 368.107 67.1184 363.82 67.1184 358.531 cv
67.1184 317.745 li
67.1184 312.457 71.4053 308.17 76.6935 308.17 cv
76.6935 308.17 li
76.6935 368.107 li
76.6935 368.107 li
.111269 .332403 .727382 0 cmyk
f
76.6935 297.079 mo
64.2042 297.079 li
64.2042 283.481 li
76.6935 283.481 li
76.6935 285.435 li
64.2042 285.435 li
64.2042 295.125 li
76.6935 295.125 li
76.6935 297.079 li
f
76.6935 295.125 mo
64.2042 295.125 li
64.2042 285.435 li
76.6935 285.435 li
76.6935 295.125 li
.0844129 .610712 .669154 .00234989 cmyk
f
76.6935 392.795 mo
64.2042 392.795 li
64.2042 379.198 li
76.6935 379.198 li
76.6935 381.151 li
64.2042 381.151 li
64.2042 390.841 li
76.6935 390.841 li
76.6935 392.795 li
.111269 .332403 .727382 0 cmyk
f
76.6935 390.841 mo
64.2042 390.841 li
64.2042 381.151 li
76.6935 381.151 li
76.6935 390.841 li
.722255 .0941482 .412238 .000183108 cmyk
f
336.444 347.015 mo
333.615 344.187 li
434.642 243.161 li
437.47 245.989 li
336.444 347.015 li
.779202 .591241 .502647 .329534 cmyk
f
385.065 355.694 mo
369.307 355.694 354.616 349.809 343.546 339.913 cv
342.552 339.025 341.585 338.102 340.652 337.15 cv
331.996 328.327 326.009 316.842 324.16 303.775 cv
323.914 302.042 323.747 300.316 323.654 298.6 cv
323.539 296.454 323.54 294.32 323.654 292.211 cv
325.191 263.772 347.147 239.349 377.056 235.117 cv
380.071 234.69 383.064 234.483 386.02 234.483 cv
388.583 234.483 391.115 234.638 393.61 234.942 cv
394.345 235.031 395.082 235.134 395.81 235.248 cv
396.144 235.301 396.477 235.356 396.81 235.414 cv
408.416 237.437 419.043 242.669 427.539 250.264 cv
428.533 251.152 429.5 252.075 430.433 253.026 cv
438.024 260.765 443.563 270.548 446.058 281.653 cv
441.139 259.767 424.391 243.004 403.422 236.944 cv
403.323 237.962 402.822 238.911 404.568 239.331 cv
405.743 239.613 406.455 240.949 406.714 242.236 cv
406.955 243.437 407.072 244.662 407.244 245.876 cv
407.383 245.699 407.521 245.523 407.66 245.347 cv
408.488 246.222 409.316 247.098 410.222 248.055 cv
410.807 247.474 411.203 247.081 411.918 246.371 cv
412.78 248.161 413.571 249.803 414.285 251.285 cv
413.492 253.083 412.694 254.892 411.913 256.663 cv
411.534 256.457 411.22 256.286 410.936 256.132 cv
410.524 256.68 410.196 257.023 409.99 257.427 cv
409.869 257.662 409.944 257.997 409.931 258.286 cv
412.832 259.618 413.346 260.209 413.98 262.933 cv
412.33 262.854 410.656 262.775 408.922 262.692 cv
409.326 266.689 409.721 267.836 411.288 269.912 cv
412.036 269.887 412.749 269.864 413.404 269.842 cv
413.848 271.781 413.625 273.518 412.279 274.404 cv
410.343 275.68 412.414 277.576 410.949 279.159 cv
408.606 281.689 408.075 285.368 406.432 288.647 cv
407.355 288.935 408 289.136 408.918 289.423 cv
408.837 290.501 408.871 291.67 408.636 292.782 cv
408.207 294.814 408.721 296.541 409.979 298.114 cv
410.785 299.121 411.529 300.188 412.412 301.121 cv
413.454 302.221 415.418 302.137 416.026 303.855 cv
416.069 303.976 416.249 304.084 416.387 304.128 cv
416.752 304.246 417.141 304.443 417.5 304.443 cv
417.539 304.443 417.578 304.441 417.616 304.436 cv
418.627 304.305 419.613 304.32 420.47 303.347 cv
420.53 303.28 420.637 303.253 420.776 303.253 cv
421.05 303.253 421.447 303.358 421.84 303.464 cv
422.233 303.569 422.622 303.675 422.881 303.675 cv
423.007 303.675 423.103 303.65 423.152 303.587 cv
424.273 302.169 425.791 302.502 427.155 302.214 cv
427.078 302.423 427.001 302.631 426.922 302.839 cv
426.83 303.082 426.74 303.326 426.646 303.569 cv
426.277 304.516 425.89 305.456 425.483 306.386 cv
425.389 306.601 425.289 306.814 425.193 307.028 cv
424.834 307.827 424.461 308.62 424.073 309.406 cv
423.97 309.614 423.871 309.825 423.766 310.033 cv
423.313 310.931 422.84 311.818 422.35 312.697 cv
422.214 312.942 422.074 313.184 421.934 313.428 cv
421.488 314.208 421.03 314.981 420.556 315.744 cv
420.468 315.886 420.384 316.031 420.295 316.172 cv
420.236 316.265 420.177 316.358 420.118 316.45 cv
406.417 316.45 li
406.417 332.465 li
406.289 332.577 406.159 332.689 406.03 332.801 cv
405.775 333.024 405.524 333.25 405.266 333.47 cv
405.274 333.438 li
398.139 339.493 389.806 344.307 380.584 347.459 cv
380.273 346.662 379.997 345.955 379.717 345.237 cv
380.421 345.138 381.024 345.052 381.544 344.979 cv
382.111 343.898 382.67 342.893 383.168 341.86 cv
383.541 341.087 384.273 340.153 384.091 339.503 cv
383.28 336.617 385.504 335.607 387.227 334.978 cv
388.929 334.357 389.611 333.564 389.841 331.943 cv
390.081 330.255 390.602 328.598 390.727 326.908 cv
390.843 325.34 390.88 323.922 392.361 322.885 cv
392.831 322.556 392.952 321.666 393.141 321.006 cv
393.982 318.061 393.423 317.337 390.182 316.678 cv
389.651 316.571 389.256 315.796 388.499 315.025 cv
387.167 315.363 385.546 315.775 383.88 316.197 cv
383.371 314.671 381.725 314.671 380.217 314.393 cv
379.927 314.751 379.643 315.103 379.454 315.336 cv
377.698 313.114 375.916 310.859 374.533 309.108 cv
372.855 309.01 371.585 308.807 370.44 308.807 cv
370.101 308.807 369.773 308.825 369.449 308.868 cv
369.363 308.88 369.281 308.885 369.203 308.885 cv
367.729 308.886 367.655 306.915 366.019 306.889 cv
365.012 306.873 363.356 306.211 362.928 304.786 cv
361.697 305.29 360.644 306.05 359.581 306.066 cv
359.567 306.066 359.554 306.066 359.541 306.066 cv
358.426 306.066 357.302 305.387 356.231 305.026 cv
355.968 305.318 355.779 305.529 355.525 305.811 cv
355.245 305.273 354.983 304.771 354.721 304.269 cv
354.633 304.252 354.507 304.201 354.436 304.201 cv
354.417 304.201 354.401 304.204 354.392 304.214 cv
351.048 307.775 351.054 307.775 351.525 312.958 cv
351.549 313.218 351.346 313.493 351.275 313.767 cv
350.781 315.689 350.293 317.613 349.824 319.454 cv
350.342 320.789 350.863 322.133 351.336 323.353 cv
352.753 324.898 354.078 326.466 355.535 327.898 cv
357.028 329.366 357.59 332.112 360.198 332.112 cv
360.453 332.112 360.727 332.086 361.024 332.03 cv
362.483 333.216 364.486 333.669 365.11 335.939 cv
365.671 337.973 367.143 339.767 367.635 341.806 cv
368.078 343.648 369.592 344.743 370.105 346.28 cv
370.542 347.588 371.144 348.743 371.754 349.9 cv
369.988 350.277 368.197 350.595 366.382 350.852 cv
364.958 351.053 363.539 351.211 362.125 351.332 cv
366.535 353.068 371.178 354.322 375.978 355.024 cv
375.981 355.026 375.984 355.029 375.986 355.032 cv
375.986 355.032 li
375.986 355.032 li
377.572 355.263 379.173 355.435 380.79 355.545 cv
380.79 355.545 li
380.79 355.545 li
380.79 355.545 li
380.789 355.542 380.788 355.539 380.788 355.536 cv
382.232 355.634 383.687 355.684 385.151 355.684 cv
388.079 355.684 391.043 355.483 394.029 355.06 cv
391.015 355.487 388.022 355.694 385.065 355.694 cv
394.029 355.06 mo
394.051 355.057 394.072 355.054 394.094 355.051 cv
394.073 355.054 394.05 355.057 394.029 355.06 cv
394.109 355.049 mo
394.129 355.046 394.149 355.043 394.168 355.041 cv
394.15 355.043 394.128 355.046 394.109 355.049 cv
394.174 355.04 mo
394.197 355.036 394.22 355.033 394.242 355.03 cv
394.219 355.033 394.197 355.036 394.174 355.04 cv
394.249 355.029 mo
398.477 354.416 402.546 353.397 406.417 352.02 cv
406.417 352.024 li
403.334 353.119 400.123 353.987 396.81 354.605 cv
396.476 354.667 396.145 354.726 395.81 354.783 cv
395.292 354.871 394.771 354.953 394.249 355.029 cv
443.402 316.45 mo
443.401 316.45 li
446.543 308.452 447.993 299.716 447.379 290.725 cv
447.993 299.717 446.543 308.452 443.402 316.45 cv
447.379 290.723 mo
447.375 290.663 447.371 290.603 447.366 290.543 cv
447.371 290.603 447.375 290.663 447.379 290.723 cv
447.366 290.535 mo
447.365 290.517 447.363 290.501 447.362 290.483 cv
447.363 290.501 447.365 290.517 447.366 290.535 cv
447.362 290.475 mo
447.359 290.437 447.356 290.397 447.353 290.358 cv
447.356 290.398 447.359 290.435 447.362 290.475 cv
447.352 290.348 mo
447.351 290.331 447.35 290.315 447.348 290.298 cv
447.35 290.316 447.351 290.33 447.352 290.348 cv
447.348 290.289 mo
447.346 290.272 447.345 290.254 447.344 290.236 cv
447.345 290.254 447.346 290.271 447.348 290.289 cv
447.343 290.23 mo
447.34 290.19 447.337 290.153 447.334 290.114 cv
447.337 290.152 447.34 290.192 447.343 290.23 cv
447.333 290.102 mo
447.332 290.086 447.331 290.068 447.329 290.053 cv
447.331 290.069 447.332 290.086 447.333 290.102 cv
447.329 290.043 mo
447.326 290.005 447.322 289.965 447.319 289.927 cv
447.322 289.965 447.326 290.005 447.329 290.043 cv
447.318 289.916 mo
447.317 289.9 447.316 289.886 447.315 289.871 cv
447.316 289.885 447.317 289.902 447.318 289.916 cv
447.313 289.853 mo
447.312 289.839 447.311 289.825 447.31 289.811 cv
447.311 289.825 447.312 289.839 447.313 289.853 cv
447.308 289.796 mo
447.307 289.777 447.305 289.759 447.304 289.74 cv
447.305 289.758 447.307 289.778 447.308 289.796 cv
447.303 289.736 mo
447.302 289.718 447.3 289.701 447.299 289.683 cv
447.3 289.701 447.302 289.718 447.303 289.736 cv
447.297 289.668 mo
447.296 289.655 447.295 289.64 447.294 289.627 cv
447.295 289.641 447.296 289.654 447.297 289.668 cv
447.292 289.608 mo
447.291 289.594 447.29 289.579 447.289 289.565 cv
447.29 289.579 447.291 289.594 447.292 289.608 cv
447.287 289.551 mo
447.286 289.533 447.284 289.514 447.282 289.496 cv
447.284 289.516 447.286 289.531 447.287 289.551 cv
447.281 289.481 mo
447.28 289.467 447.279 289.455 447.277 289.441 cv
447.279 289.455 447.28 289.467 447.281 289.481 cv
447.275 289.418 mo
447.274 289.407 447.273 289.397 447.272 289.385 cv
447.274 289.397 447.274 289.406 447.275 289.418 cv
447.27 289.361 mo
447.269 289.345 447.268 289.332 447.266 289.317 cv
447.268 289.331 447.269 289.347 447.27 289.361 cv
447.265 289.307 mo
447.264 289.289 447.262 289.271 447.26 289.253 cv
447.262 289.271 447.264 289.289 447.265 289.307 cv
447.258 289.231 mo
447.257 289.219 447.256 289.208 447.255 289.197 cv
447.256 289.207 447.257 289.221 447.258 289.231 cv
447.253 289.173 mo
447.252 289.162 447.251 289.15 447.25 289.138 cv
447.251 289.15 447.252 289.161 447.253 289.173 cv
447.248 289.117 mo
447.246 289.099 447.244 289.082 447.242 289.064 cv
447.244 289.082 447.246 289.099 447.248 289.117 cv
447.241 289.047 mo
447.24 289.035 447.238 289.021 447.237 289.009 cv
447.238 289.021 447.24 289.035 447.241 289.047 cv
447.235 288.983 mo
447.234 288.973 447.233 288.964 447.232 288.954 cv
447.232 288.962 447.234 288.975 447.235 288.983 cv
447.229 288.928 mo
447.228 288.917 447.227 288.907 447.226 288.896 cv
447.227 288.906 447.228 288.918 447.229 288.928 cv
447.222 288.86 mo
447.221 288.847 447.22 288.834 447.219 288.821 cv
447.22 288.833 447.221 288.848 447.222 288.86 cv
447.216 288.794 mo
447.215 288.784 447.214 288.776 447.213 288.766 cv
447.214 288.776 447.215 288.784 447.216 288.794 cv
447.21 288.739 mo
447.209 288.73 447.208 288.718 447.207 288.709 cv
447.208 288.719 447.209 288.729 447.21 288.739 cv
447.204 288.682 mo
447.203 288.672 447.203 288.664 447.201 288.654 cv
447.202 288.664 447.203 288.672 447.204 288.682 cv
447.197 288.606 mo
447.195 288.596 447.195 288.587 447.193 288.577 cv
447.195 288.587 447.195 288.596 447.197 288.606 cv
447.191 288.549 mo
447.19 288.54 447.189 288.531 447.188 288.522 cv
447.189 288.532 447.189 288.539 447.191 288.549 cv
447.184 288.492 mo
447.184 288.484 447.183 288.476 447.182 288.468 cv
447.183 288.476 447.184 288.483 447.184 288.492 cv
447.179 288.437 mo
447.178 288.431 447.177 288.425 447.177 288.418 cv
447.177 288.424 447.178 288.431 447.179 288.437 cv
447.17 288.358 mo
447.169 288.349 447.168 288.342 447.167 288.333 cv
447.168 288.341 447.169 288.35 447.17 288.358 cv
447.164 288.303 mo
447.163 288.294 447.163 288.288 447.162 288.279 cv
447.162 288.287 447.163 288.295 447.164 288.303 cv
447.158 288.247 mo
447.157 288.24 447.156 288.231 447.155 288.223 cv
447.156 288.231 447.157 288.239 447.158 288.247 cv
447.15 288.171 mo
447.149 288.162 447.148 288.153 447.147 288.144 cv
447.147 288.152 447.149 288.163 447.15 288.171 cv
447.143 288.113 mo
447.142 288.105 447.141 288.096 447.14 288.088 cv
447.141 288.096 447.142 288.105 447.143 288.113 cv
447.137 288.06 mo
447.136 288.05 447.135 288.04 447.134 288.029 cv
447.135 288.04 447.136 288.05 447.137 288.06 cv
447.131 288.005 mo
447.129 287.988 447.127 287.969 447.125 287.953 cv
447.127 287.971 447.129 287.986 447.131 288.005 cv
447.122 287.928 mo
447.121 287.918 447.12 287.91 447.119 287.899 cv
447.12 287.91 447.121 287.918 447.122 287.928 cv
447.115 287.869 mo
447.114 287.86 447.113 287.851 447.112 287.842 cv
447.113 287.85 447.114 287.861 447.115 287.869 cv
447.109 287.815 mo
447.108 287.805 447.106 287.794 447.105 287.784 cv
447.106 287.794 447.108 287.805 447.109 287.815 cv
447.102 287.76 mo
447.1 287.741 447.098 287.726 447.096 287.708 cv
447.098 287.726 447.1 287.741 447.102 287.76 cv
447.093 287.685 mo
447.092 287.673 447.091 287.664 447.09 287.652 cv
447.091 287.665 447.092 287.673 447.093 287.685 cv
447.086 287.626 mo
447.085 287.616 447.084 287.606 447.083 287.596 cv
447.084 287.606 447.085 287.616 447.086 287.626 cv
447.08 287.571 mo
447.078 287.558 447.076 287.544 447.075 287.531 cv
447.077 287.545 447.078 287.556 447.08 287.571 cv
447.071 287.5 mo
447.069 287.487 447.068 287.476 447.066 287.463 cv
447.068 287.475 447.07 287.488 447.071 287.5 cv
447.063 287.437 mo
447.062 287.427 447.061 287.418 447.06 287.408 cv
447.061 287.418 447.062 287.427 447.063 287.437 cv
447.056 287.381 mo
447.055 287.37 447.054 287.359 447.052 287.349 cv
447.054 287.359 447.055 287.371 447.056 287.381 cv
447.049 287.326 mo
447.047 287.308 447.045 287.291 447.043 287.273 cv
447.045 287.289 447.047 287.31 447.049 287.326 cv
447.04 287.254 mo
447.039 287.241 447.037 287.229 447.036 287.217 cv
447.037 287.229 447.039 287.241 447.04 287.254 cv
447.033 287.194 mo
447.031 287.183 447.03 287.173 447.028 287.161 cv
447.03 287.173 447.031 287.182 447.033 287.194 cv
447.025 287.135 mo
447.024 287.125 447.022 287.112 447.021 287.102 cv
447.022 287.114 447.024 287.123 447.025 287.135 cv
447.017 287.075 mo
447.015 287.059 447.013 287.044 447.011 287.029 cv
447.013 287.045 447.015 287.059 447.017 287.075 cv
447.008 287.005 mo
447.007 286.993 447.005 286.983 447.004 286.972 cv
447.005 286.982 447.007 286.995 447.008 287.005 cv
447 286.947 mo
446.999 286.937 446.998 286.926 446.996 286.916 cv
446.998 286.926 446.999 286.937 447 286.947 cv
446.993 286.891 mo
446.991 286.876 446.989 286.858 446.987 286.843 cv
446.989 286.859 446.991 286.875 446.993 286.891 cv
446.984 286.821 mo
446.982 286.808 446.98 286.795 446.978 286.782 cv
446.98 286.794 446.982 286.809 446.984 286.821 cv
446.976 286.761 mo
446.974 286.748 446.972 286.738 446.971 286.725 cv
446.972 286.737 446.974 286.749 446.976 286.761 cv
446.968 286.703 mo
446.966 286.689 446.964 286.677 446.962 286.663 cv
446.964 286.677 446.966 286.689 446.968 286.703 cv
446.96 286.647 mo
446.958 286.629 446.955 286.61 446.952 286.592 cv
446.955 286.61 446.958 286.629 446.96 286.647 cv
446.95 286.575 mo
446.948 286.562 446.947 286.55 446.945 286.537 cv
446.947 286.549 446.948 286.563 446.95 286.575 cv
446.942 286.514 mo
446.94 286.502 446.938 286.49 446.937 286.478 cv
446.938 286.488 446.94 286.504 446.942 286.514 cv
446.934 286.457 mo
446.931 286.439 446.928 286.42 446.926 286.402 cv
446.926 286.402 li
446.926 286.402 li
446.928 286.42 446.931 286.439 446.934 286.457 cv
446.914 286.322 mo
446.913 286.313 446.912 286.305 446.911 286.296 cv
446.912 286.306 446.913 286.312 446.914 286.322 cv
446.903 286.239 mo
446.901 286.23 446.9 286.22 446.899 286.211 cv
446.9 286.219 446.901 286.231 446.903 286.239 cv
446.89 286.155 mo
446.889 286.146 446.888 286.139 446.887 286.13 cv
446.888 286.138 446.889 286.146 446.89 286.155 cv
446.876 286.056 mo
446.875 286.053 446.875 286.051 446.875 286.048 cv
446.875 286.052 446.875 286.052 446.876 286.056 cv
446.863 285.968 mo
446.861 285.959 446.861 285.953 446.859 285.944 cv
446.86 285.952 446.862 285.96 446.863 285.968 cv
446.851 285.886 mo
446.849 285.878 446.848 285.867 446.846 285.858 cv
446.848 285.868 446.849 285.876 446.851 285.886 cv
446.838 285.803 mo
446.837 285.794 446.835 285.784 446.834 285.776 cv
446.835 285.786 446.837 285.793 446.838 285.803 cv
446.823 285.707 mo
446.823 285.702 446.822 285.7 446.822 285.695 cv
446.822 285.699 446.823 285.703 446.823 285.707 cv
446.809 285.616 mo
446.808 285.607 446.807 285.6 446.805 285.591 cv
446.807 285.599 446.808 285.608 446.809 285.616 cv
446.797 285.534 mo
446.795 285.524 446.794 285.516 446.792 285.505 cv
446.793 285.513 446.795 285.526 446.797 285.534 cv
446.784 285.451 mo
446.782 285.442 446.781 285.433 446.779 285.424 cv
446.781 285.434 446.782 285.44 446.784 285.451 cv
446.768 285.355 mo
446.768 285.351 446.767 285.348 446.766 285.343 cv
446.767 285.347 446.768 285.351 446.768 285.355 cv
446.754 285.264 mo
446.752 285.255 446.751 285.247 446.75 285.238 cv
446.751 285.248 446.752 285.254 446.754 285.264 cv
446.741 285.184 mo
446.739 285.174 446.737 285.163 446.736 285.152 cv
446.737 285.162 446.739 285.174 446.741 285.184 cv
446.727 285.101 mo
446.726 285.091 446.724 285.082 446.722 285.072 cv
446.724 285.082 446.726 285.091 446.727 285.101 cv
446.713 285.012 mo
446.711 285.005 446.71 284.998 446.709 284.991 cv
446.711 284.999 446.711 285.004 446.713 285.012 cv
446.696 284.914 mo
446.695 284.904 446.693 284.894 446.691 284.884 cv
446.693 284.896 446.694 284.902 446.696 284.914 cv
446.683 284.834 mo
446.681 284.824 446.679 284.811 446.677 284.801 cv
446.679 284.811 446.681 284.824 446.683 284.834 cv
446.669 284.751 mo
446.667 284.742 446.665 284.73 446.664 284.721 cv
446.666 284.731 446.667 284.741 446.669 284.751 cv
446.654 284.661 mo
446.652 284.654 446.651 284.648 446.65 284.641 cv
446.651 284.647 446.653 284.655 446.654 284.661 cv
446.637 284.564 mo
446.635 284.554 446.633 284.545 446.632 284.535 cv
446.633 284.545 446.635 284.554 446.637 284.564 cv
446.623 284.484 mo
446.621 284.474 446.619 284.461 446.617 284.45 cv
446.619 284.462 446.621 284.472 446.623 284.484 cv
446.609 284.404 mo
446.607 284.392 446.605 284.381 446.603 284.369 cv
446.605 284.379 446.607 284.394 446.609 284.404 cv
446.594 284.321 mo
446.592 284.31 446.59 284.3 446.589 284.29 cv
446.59 284.3 446.592 284.311 446.594 284.321 cv
446.575 284.216 mo
446.573 284.204 446.571 284.194 446.569 284.182 cv
446.572 284.194 446.573 284.204 446.575 284.216 cv
446.561 284.136 mo
446.559 284.123 446.557 284.113 446.554 284.099 cv
446.557 284.111 446.559 284.124 446.561 284.136 cv
446.547 284.057 mo
446.544 284.044 446.542 284.032 446.54 284.019 cv
446.542 284.031 446.545 284.045 446.547 284.057 cv
446.532 283.976 mo
446.529 283.961 446.527 283.947 446.524 283.932 cv
446.527 283.948 446.529 283.96 446.532 283.976 cv
446.512 283.868 mo
446.51 283.855 446.507 283.841 446.505 283.828 cv
446.507 283.842 446.509 283.854 446.512 283.868 cv
446.498 283.79 mo
446.495 283.776 446.492 283.763 446.49 283.748 cv
446.492 283.762 446.495 283.776 446.498 283.79 cv
446.483 283.712 mo
446.48 283.699 446.477 283.683 446.475 283.67 cv
446.478 283.684 446.48 283.698 446.483 283.712 cv
446.468 283.632 mo
446.464 283.613 446.46 283.593 446.457 283.574 cv
446.461 283.594 446.464 283.612 446.468 283.632 cv
446.447 283.521 mo
446.444 283.507 446.441 283.493 446.438 283.478 cv
446.442 283.494 446.444 283.505 446.447 283.521 cv
446.432 283.443 mo
446.429 283.429 446.426 283.414 446.423 283.399 cv
446.426 283.413 446.429 283.429 446.432 283.443 cv
446.417 283.366 mo
446.414 283.351 446.411 283.336 446.408 283.321 cv
446.411 283.335 446.414 283.352 446.417 283.366 cv
446.402 283.29 mo
446.391 283.235 446.381 283.183 446.37 283.128 cv
446.381 283.183 446.391 283.235 446.402 283.29 cv
446.364 283.097 mo
446.361 283.083 446.358 283.066 446.355 283.051 cv
446.358 283.065 446.361 283.083 446.364 283.097 cv
446.349 283.02 mo
446.346 283.005 446.342 282.988 446.339 282.973 cv
446.342 282.989 446.345 283.004 446.349 283.02 cv
446.334 282.947 mo
446.323 282.89 446.311 282.833 446.299 282.777 cv
446.311 282.834 446.322 282.889 446.334 282.947 cv
446.294 282.753 mo
446.291 282.736 446.288 282.719 446.284 282.702 cv
446.287 282.718 446.291 282.737 446.294 282.753 cv
446.279 282.678 mo
446.275 282.66 446.272 282.643 446.268 282.625 cv
446.271 282.641 446.276 282.662 446.279 282.678 cv
446.264 282.607 mo
446.252 282.545 446.239 282.485 446.226 282.423 cv
446.239 282.486 446.251 282.544 446.264 282.607 cv
446.223 282.41 mo
446.219 282.392 446.215 282.372 446.211 282.353 cv
446.215 282.371 446.219 282.393 446.223 282.41 cv
446.207 282.336 mo
446.203 282.317 446.199 282.297 446.195 282.278 cv
446.199 282.298 446.203 282.316 446.207 282.336 cv
446.193 282.268 mo
446.179 282.203 446.165 282.137 446.151 282.072 cv
446.165 282.137 446.179 282.203 446.193 282.268 cv
446.15 282.067 mo
446.145 282.046 446.141 282.027 446.136 282.006 cv
446.141 282.025 446.145 282.048 446.15 282.067 cv
446.134 281.994 mo
446.129 281.973 446.125 281.954 446.12 281.933 cv
446.125 281.954 446.129 281.972 446.134 281.994 cv
446.119 281.926 mo
446.099 281.837 446.079 281.747 446.059 281.659 cv
446.079 281.747 446.099 281.838 446.119 281.926 cv
431.499 273.888 mo
430.855 273.377 430.177 272.926 429.256 272.926 cv
429.036 272.926 428.801 272.951 428.55 273.009 cv
428.527 273.014 428.503 273.016 428.478 273.016 cv
427.989 273.016 427.149 272.041 426.725 271.39 cv
426.036 270.331 425.572 269.125 425.169 268.301 cv
424.85 268.08 424.574 267.994 424.326 267.994 cv
423.892 267.994 423.544 268.257 423.199 268.52 cv
422.853 268.783 422.512 269.046 422.093 269.046 cv
421.887 269.046 421.663 268.983 421.411 268.825 cv
421.121 268.645 420.867 268.569 420.641 268.569 cv
419.628 268.569 419.139 270.077 418.222 270.494 cv
416.9 271.094 415.767 271.01 414.228 271.31 cv
414.716 268.997 416.487 268.764 417.664 267.826 cv
415.588 266.25 418.077 265.087 417.993 263.917 cv
417.807 261.303 420.833 263.026 420.906 260.972 cv
422.237 261.994 423.287 263.242 424.61 263.697 cv
426.086 264.204 426.806 265.325 427.823 266.349 cv
427.364 266.58 426.861 266.834 425.913 267.312 cv
426.897 267.859 427.654 268.28 428.902 268.973 cv
428.902 268.973 li
428.902 268.973 li
428.772 266.997 428.677 265.555 428.535 263.394 cv
429.467 264.649 429.99 265.459 430.622 266.173 cv
430.66 266.216 430.699 266.259 430.738 266.301 cv
430.782 266.585 430.825 266.869 430.865 267.155 cv
431.024 268.279 431.147 269.4 431.253 270.52 cv
431.277 270.773 431.301 271.027 431.322 271.28 cv
431.395 272.151 431.456 273.021 431.499 273.888 cv
417.755 251.181 mo
417.392 250.678 415.45 250.73 416.925 249.254 cv
416.25 247.981 415.576 246.709 414.901 245.436 cv
416.581 245.631 416.581 245.631 419.831 249.73 cv
419.14 250.214 418.449 250.697 417.755 251.181 cv
level3{
gsave
clp
[83.4594 0 0 83.4594 355.543 265.422 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~BG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<b
BG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<b
BG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<b
BG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<bBG2<b
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~BG2<bBbVKdC(qTeCD7]fCD7]fC_[lhD&"#jDA=,kD\a;mE#'DnE>BMoEY]VpEu,erF;GnsFVc%uFr)/!
G8M>#GShG$Go.P%Go7Y'H5Rb(HPmk)Hl=%+I2X1-IMs:.IiBI0J/]R1JK#^3Jf>g4K,c!6KH)*7KcD69
L)_?:L)hE;LE.N<L`R]>M&mf?MB=#BM]X,CM]a2DN$';EN?BDFNZfSHO!,\IO!,\IO<PnLOWu(NP9_@Q
PU%LSPpI[UQ6ddVQR3sXQmO'YR3s9\R3s9\ROBH^Rj]Q_S1,`aSLGibSgbudSgl&eT.2/fTIV>hTdqJj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.183003 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[83.4594 0 0 83.4594 355.543 265.422 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~B4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjjBP;'nBk_<sC2.KuC27U#
Ci!p)D/F--DJjB2DfBZ7E,fl;EcQ2AF)uDEFEDYJF`qqOGB\7TG^+IXG^+LZH$O^^H@(!cI!g<hI=6Nm
IXZcrIt*!!J:W9&JqAT+K7ef0KS5&5KnY57Knb>:LPLY?LkpkDM2@+IMMd:KMMmCNN/W^TNK&pXNfK-[
NfT6^O-#HbOcbfjPEV2pPa%GuQ'R`%QC!r)R$a8.R$a8/R@0M4R[]e9S"-"=SXl=BSXl=CSt;RHT:hjM
~>
<~&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfj',)#m',)#m',)#m',2,p
'GM5q'GM5r'bqGu'bqGu'bqGu()@Z$()@Z$()@Z$()Ic'(Ddl((Ddl)(`4),(`4),(`=2/)&X;0)&X;1
)B'M4)B'M4)B'M4)]K_8)]K_8)]K_8)]Kb:*#oq<*??.@*??.A*Zc@D*ZcCF+!2RH+!2RI+<VdL+<VdL
+<_mO+X/*S,9nEX,9nEY,U=W\,UF`_,pai`-71&d-71&e-RU8h-R^Ak-n$Jl-n$Jm.4H\p.4H_r.Olnt
~>
<~)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_9*#oq<*#oq<*#oq<*#oq=*??.@*??.@*??.@*Zc@D*Zc@D
*Zc@D*ZcCF+!2RH+!2RH+!2RI+<VdL+<VdL+<VdL+<VdL+<VdM+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X/*S+sJ3T+sJ3U,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`,pai`,pjrc
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
417.993 263.917 mo
417.807 261.303 420.833 263.026 420.906 260.972 cv
422.237 261.994 423.287 263.242 424.61 263.697 cv
426.086 264.204 426.806 265.325 427.823 266.349 cv
427.364 266.58 426.861 266.834 425.913 267.312 cv
426.897 267.859 427.654 268.28 428.902 268.973 cv
428.772 266.997 428.677 265.555 428.535 263.394 cv
429.467 264.649 429.99 265.459 430.622 266.173 cv
431.243 266.875 431.975 267.478 433.012 268.46 cv
433.355 267.258 433.538 266.617 433.683 266.11 cv
434.859 267.162 436.084 268.258 437.36 269.399 cv
438.065 268.754 438.468 268.385 438.899 267.99 cv
439.61 269.564 440.316 271.124 441.095 272.848 cv
438.164 274.457 436.125 272.502 433.596 272.235 cv
433.585 273.192 433.576 274.031 433.566 274.93 cv
433.349 274.94 433.086 275.034 432.925 274.945 cv
431.54 274.172 430.611 272.54 428.55 273.009 cv
428.076 273.116 427.17 272.074 426.725 271.39 cv
426.036 270.331 425.572 269.125 425.169 268.301 cv
424.292 267.693 423.741 268.106 423.199 268.52 cv
422.684 268.912 422.178 269.304 421.411 268.825 cv
419.827 267.837 419.345 269.984 418.222 270.494 cv
416.9 271.094 415.767 271.01 414.228 271.31 cv
414.716 268.997 416.487 268.764 417.664 267.826 cv
415.588 266.25 418.077 265.087 417.993 263.917 cv
419.831 249.73 mo
419.14 250.214 418.449 250.697 417.755 251.181 cv
417.392 250.678 415.45 250.73 416.925 249.254 cv
416.25 247.981 415.576 246.709 414.901 245.436 cv
416.581 245.631 416.581 245.631 419.831 249.73 cv
404.568 239.331 mo
405.743 239.613 406.455 240.949 406.714 242.236 cv
406.955 243.437 407.072 244.662 407.244 245.876 cv
407.383 245.699 407.521 245.523 407.66 245.347 cv
408.488 246.222 409.316 247.098 410.222 248.055 cv
410.807 247.474 411.203 247.081 411.918 246.371 cv
412.78 248.161 413.571 249.803 414.285 251.285 cv
413.492 253.083 412.694 254.892 411.913 256.663 cv
411.534 256.457 411.22 256.286 410.936 256.132 cv
410.524 256.68 410.196 257.023 409.99 257.427 cv
409.869 257.662 409.944 257.997 409.931 258.286 cv
412.832 259.618 413.346 260.209 413.98 262.933 cv
412.33 262.854 410.656 262.775 408.922 262.692 cv
409.326 266.689 409.721 267.836 411.288 269.912 cv
412.036 269.887 412.749 269.864 413.404 269.842 cv
413.848 271.781 413.625 273.518 412.279 274.404 cv
410.343 275.68 412.414 277.576 410.949 279.159 cv
408.606 281.689 408.075 285.368 406.432 288.647 cv
407.355 288.935 408 289.136 408.918 289.423 cv
408.837 290.501 408.871 291.67 408.636 292.782 cv
408.207 294.814 408.721 296.541 409.979 298.114 cv
410.785 299.121 411.529 300.188 412.412 301.121 cv
413.454 302.221 415.418 302.137 416.026 303.855 cv
416.069 303.976 416.249 304.084 416.387 304.128 cv
416.791 304.258 417.225 304.487 417.616 304.436 cv
418.627 304.305 419.613 304.32 420.47 303.347 cv
420.648 303.146 421.248 303.305 421.84 303.464 cv
422.425 303.621 423.001 303.778 423.152 303.587 cv
424.316 302.114 425.908 302.53 427.311 302.178 cv
427.555 302.117 427.858 302.296 428.267 302.396 cv
428.157 303.975 428.919 303.866 429.769 303.757 cv
430.357 303.682 430.986 303.607 431.4 304.089 cv
431.31 304.717 431.39 305.654 431.025 306.363 cv
430.474 307.439 431.723 308.873 430.265 309.68 cv
432.581 312.326 431.464 315.774 432.352 318.225 cv
431.167 321.346 429.594 323.546 429.649 326.901 cv
429.713 330.745 428.049 334.64 426.614 338.366 cv
426.401 338.919 426.278 339.517 425.927 340.802 cv
441.343 327.729 449.919 307.552 446.926 286.402 cv
443.502 262.206 425.884 243.435 403.422 236.944 cv
403.323 237.962 402.822 238.911 404.568 239.331 cv
.723781 .39707 .314397 .0357977 cmyk
f
325.932 296.374 mo
325.956 296.53 326.324 296.634 326.654 296.837 cv
326.672 295.564 326.688 294.383 326.704 293.202 cv
326.887 293.19 327.071 293.177 327.254 293.165 cv
328.039 295.665 328.824 298.165 329.7 300.954 cv
330.506 301.56 331.581 302.434 332.727 303.202 cv
333.314 303.596 334.008 303.974 334.691 304.06 cv
337.771 304.446 341.43 305.562 342.873 307.759 cv
344.202 309.781 345.957 310.11 347.259 310.574 cv
348.543 310.025 349.321 309.693 350.099 309.36 cv
349.955 309.116 349.823 308.666 349.665 308.657 cv
345.353 308.416 345.354 308.423 344.736 304.382 cv
344.668 303.94 344.572 303.502 344.415 302.667 cv
343.278 302.428 342.032 302.165 340.499 301.842 cv
340.596 300.254 340.697 298.583 340.806 296.789 cv
337.675 296.712 339.086 300.539 336.857 300.989 cv
334.7 299.628 334.7 299.628 333.683 292.094 cv
334.551 288.182 339.126 289.491 340.17 286.414 cv
341.385 286.839 342.326 287.167 343.314 287.512 cv
343.381 289.346 343.771 291.06 345.733 292.182 cv
345.356 289.517 344.996 286.973 344.659 284.59 cv
344.979 284.164 345.133 283.887 345.353 283.678 cv
347.227 281.894 349.928 280.631 349.323 277.303 cv
350.625 275.83 351.012 273.654 352.909 272.641 cv
353.285 272.44 354.013 272.267 354.012 272.085 cv
353.997 269.611 356.198 269.292 357.629 268.038 cv
359.242 270.413 360.129 267.589 361.442 267.671 cv
361.595 267.19 li
360.623 266.746 359.706 266.327 358.884 265.952 cv
359.185 265.151 359.43 264.501 359.691 263.807 cv
358.829 263.534 358.201 263.335 357.572 263.135 cv
358.769 262.679 359.979 262.965 361.053 262.699 cv
362.109 262.437 363.03 261.622 364.001 261.036 cv
365.089 260.38 366.167 259.709 367.406 258.948 cv
366.025 256.133 362.353 255.201 362.263 251.817 cv
361.223 252.73 360.401 253.453 358.735 254.916 cv
359.589 250.449 356.603 250.907 354.799 250.302 cv
354.35 250.835 353.845 251.092 353.103 251.468 cv
353.399 251.772 353.642 252.023 354.201 252.598 cv
353.589 253.036 352.888 253.538 352.181 254.044 cv
354.124 255.477 353.019 257.37 352.64 257.509 cv
350.015 258.475 350.647 261.14 349.529 262.831 cv
349.16 262.554 348.792 262.277 348.223 261.849 cv
347.668 261.307 348.805 261.103 348.779 260.625 cv
348.744 260.015 348.619 259.411 348.524 258.738 cv
347.309 258.383 346.082 258.024 344.593 257.589 cv
344.05 253.15 348.62 252.42 350.462 249.751 cv
351.808 251.081 353.31 249.994 354.799 250.302 cv
354.635 249.266 354.527 248.506 354.4 247.607 cv
356.46 247.591 356.76 243.6 360.012 245.406 cv
359.072 246.882 357.555 247.395 356.449 248.311 cv
357.704 248.931 358.967 249.556 360.248 250.189 cv
361.075 249.66 361.912 249.124 362.754 248.586 cv
362.791 247.753 362.828 246.911 362.868 246.013 cv
363.794 246.333 364.725 246.056 366.476 244.955 cv
365.573 244.483 364.792 244.075 364.062 243.694 cv
364.388 243.142 364.587 242.805 364.779 242.48 cv
364.068 241.944 363.454 241.483 362.945 241.1 cv
363.115 240.373 363.589 239.537 363.348 239.064 cv
363.29 238.95 363.202 238.84 363.101 238.736 cv
342.588 246.638 327.849 264.684 324.362 285.767 cv
325.052 289.268 325.402 292.839 325.932 296.374 cv
cp
f
379.443 354.496 mo
378.076 354.566 380.549 352.808 378.696 352.367 cv
377.703 352.13 380.048 350.273 378.161 349.639 cv
378.248 349.516 378.334 349.395 378.426 349.266 cv
379.225 349.018 380.028 348.77 380.98 348.474 cv
380.495 347.231 380.11 346.245 379.717 345.237 cv
380.421 345.138 381.024 345.052 381.544 344.979 cv
382.111 343.898 382.67 342.893 383.168 341.86 cv
383.541 341.087 384.273 340.153 384.091 339.503 cv
383.28 336.617 385.504 335.607 387.227 334.978 cv
388.929 334.357 389.611 333.564 389.841 331.943 cv
390.081 330.255 390.602 328.598 390.727 326.908 cv
390.843 325.34 390.88 323.922 392.361 322.885 cv
392.831 322.556 392.952 321.666 393.141 321.006 cv
393.982 318.061 393.423 317.337 390.182 316.678 cv
389.651 316.571 389.256 315.796 388.499 315.025 cv
387.167 315.363 385.546 315.775 383.88 316.197 cv
383.371 314.671 381.725 314.671 380.217 314.393 cv
379.927 314.751 379.643 315.103 379.454 315.336 cv
377.698 313.114 375.916 310.859 374.533 309.108 cv
372.358 308.982 370.87 308.677 369.449 308.868 cv
367.733 309.099 367.741 306.917 366.019 306.889 cv
365.012 306.873 363.356 306.211 362.928 304.786 cv
361.697 305.29 360.644 306.05 359.581 306.066 cv
358.453 306.082 357.315 305.391 356.231 305.026 cv
355.968 305.318 355.779 305.529 355.525 305.811 cv
355.245 305.273 354.983 304.771 354.721 304.269 cv
354.609 304.248 354.435 304.169 354.392 304.214 cv
351.048 307.775 351.054 307.775 351.525 312.958 cv
351.549 313.218 351.346 313.493 351.275 313.767 cv
350.781 315.689 350.293 317.613 349.824 319.454 cv
350.342 320.789 350.863 322.133 351.336 323.353 cv
352.753 324.898 354.078 326.466 355.535 327.898 cv
357.174 329.51 357.691 332.661 361.024 332.03 cv
362.483 333.216 364.486 333.669 365.11 335.939 cv
365.671 337.973 367.143 339.767 367.635 341.806 cv
368.078 343.648 369.592 344.743 370.105 346.28 cv
370.719 348.116 371.656 349.652 372.487 351.311 cv
373.152 352.639 374.741 352.101 375.141 353.674 cv
375.266 354.164 375.585 354.609 375.986 355.032 cv
377.572 355.263 379.173 355.435 380.79 355.545 cv
380.655 354.971 380.566 354.438 379.443 354.496 cv
f
370.94 237.825 mo
370.681 238.852 370.507 239.539 370.349 240.165 cv
371.018 240.292 371.502 240.384 372.36 240.546 cv
371.466 241.038 370.97 241.311 370.475 241.583 cv
371.938 242.759 369.632 244.683 371.45 246.008 cv
372.199 246.553 372.2 248.123 372.487 249.053 cv
373.912 249.303 375.172 249.524 376.65 249.783 cv
376.974 249.071 377.316 248.298 377.676 247.533 cv
378.496 245.788 378.448 243.268 381.362 243.381 cv
382.169 241.677 383.577 241.11 385.386 240.954 cv
385.916 240.909 386.366 239.939 386.967 239.265 cv
385.983 237.797 385.331 235.926 384.019 235.081 cv
383.727 234.893 383.427 234.717 383.12 234.552 cv
381.112 234.644 379.089 234.829 377.056 235.117 cv
373.933 235.559 370.898 236.222 367.963 237.086 cv
367.992 237.295 368.021 237.501 368.05 237.704 cv
369.048 237.745 369.897 237.781 370.94 237.825 cv
cp
f
409.195 256.284 mo
409.789 254.88 411.133 255.159 412.25 254.927 cv
412.42 253.188 410.987 252.418 409.878 252.037 cv
408.288 251.491 407.136 250.802 406.317 249.305 cv
405.92 248.579 405.005 248.136 404.324 247.566 cv
403.846 248.202 403.483 248.684 403.142 249.137 cv
403.835 249.85 404.524 250.558 405.213 251.266 cv
405.56 251.527 405.908 251.789 406.255 252.05 cv
408.032 252.908 407.656 255.258 409.195 256.284 cv
cp
f
388.031 242.928 mo
389.027 243.955 389.038 243.896 390.142 244.104 cv
390.953 244.257 391.729 244.592 392.561 244.858 cv
393.092 243.991 393.529 243.279 393.964 242.568 cv
393.788 242.279 393.611 241.991 393.435 241.702 cv
391.7 242.184 389.809 241.899 388.031 242.928 cv
cp
f
342 295.124 mo
342.814 295.65 343.631 296.325 343.741 296.225 cv
344.583 295.456 345.161 295.376 346.186 296.124 cv
347.171 296.843 348.52 297.063 349.984 297.604 cv
350.018 296.779 350.041 296.251 350.061 295.768 cv
348.885 295.538 347.701 295.634 346.991 295.1 cv
345.413 293.912 344.021 294.189 342 295.124 cv
cp
f
355.883 297.315 mo
354.676 297.24 353.516 296.073 351.795 297.699 cv
352.58 298.422 353.189 298.983 353.813 299.558 cv
355.109 297.309 357.913 298.833 360.271 296.744 cv
358.186 297.039 357.022 297.386 355.883 297.315 cv
cp
f
403.646 253.79 mo
403.871 254.133 403.921 254.59 404.106 255.186 cv
405.018 254.982 405.831 254.8 406.619 254.624 cv
406.469 253.566 406.362 252.808 406.255 252.05 cv
405.908 251.789 405.56 251.527 405.213 251.266 cv
404.331 251.699 403.449 252.132 402.351 252.671 cv
403.026 253.238 403.425 253.455 403.646 253.79 cv
cp
f
366.114 261.632 mo
365.496 262.394 364.827 263.218 364.093 264.123 cv
365.708 264.263 367.208 264.393 368.716 264.524 cv
368.737 264.251 368.804 263.959 368.772 263.678 cv
368.722 263.239 368.605 262.807 368.526 262.415 cv
367.679 262.141 366.87 261.878 366.114 261.632 cv
cp
f
394.094 355.051 mo
394.1 355.05 394.103 355.05 394.109 355.049 cv
394.104 355.05 394.099 355.051 394.094 355.051 cv
394.168 355.041 mo
394.17 355.04 394.172 355.04 394.174 355.04 cv
394.172 355.04 394.171 355.04 394.168 355.041 cv
394.242 355.03 mo
394.244 355.03 394.247 355.029 394.249 355.029 cv
394.246 355.029 394.244 355.03 394.242 355.03 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(
.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(
.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(
.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(.lL3(
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.lL3(.lL3(.lU<*/N6Q-/N6T./N?W./iQ`0/iQf2/iQf20/ur30/ur300*&500</600<5800<890KND<
0K`J<0g/_@0g/_@0g/bA0g8kC0g8qE1I#7I1-o7I1I5FL1.#@K1IPXO1IY^P1IYaQ2+1sT2+2$V2FV6Y
2FV<[2b%N^2b.Q^2b@`a2b@`a3(drd3(n&f3D+/h3D+2i3_OAk3_aPn4&0bq4&'br4&9qu4AL#!4AU,#
4\p5$4]$;%4]6J(4]?V+5#Q_.5#Zh05#m"35$*+45?<465Z`F95Z`L;5urO;6!/dA6Wo-F6X,6G6<o6H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnu/1`>'
/1`A)/M/P+/hSb//hSb//hSb//hSe10/#"50JG170JG170JP=<1,:U?1,:U?1,:U?1GgpF2)R6K2)[?N
2E!HO2E!KQ2`E]U3&ioY3B9)\3]];_3]fDb4$,Pe4?P_g4?Pbi4Ztqk4Ztql5!M7r5<hCu5X7V%6:+"*
~>
<~2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K
2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)R6K2)[?N2E!HO
2`EZS2E!HO2`EZS2`NcW3]];_3]];_3]fGd4?P_g4Ztqk4[)%o5X7S#5s[h)6psF26psC06psF26q'O6
7Rp!?84Z<D8kM]J8P)NH91qrQ9he>V:/4PZ:/4PZ:JXea;GpCj;GpCk<)lt"<`W7%<`W7%<``C*=^#$6
~>
<~:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^
:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:Jakb;,L4h
;GpCk<)lpu<E3$u<)lpu<E3($='&O.>$5!3>$>-7>[1N>?=.&H?XI2K?smAM?smDO@Uiq[AnGXfBPD0p
Bk_9qBk_<sCMRa'DJj?0Df9Q5E,fo>F*)MHF`hhLF`hkNGBeCZH[C*eI!g<hI=?WpJ:N0#JqJ`1KnY57
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
385.151 355.684 mo
383.687 355.684 382.232 355.634 380.788 355.536 cv
380.661 354.994 380.57 354.491 379.604 354.491 cv
379.553 354.491 379.499 354.493 379.443 354.496 cv
379.417 354.497 379.391 354.498 379.367 354.498 cv
378.17 354.498 380.513 352.799 378.696 352.367 cv
377.703 352.13 380.048 350.273 378.161 349.639 cv
378.248 349.516 378.334 349.395 378.426 349.266 cv
379.225 349.018 380.028 348.77 380.98 348.474 cv
380.84 348.117 380.709 347.78 380.584 347.459 cv
389.806 344.307 398.139 339.493 405.274 333.438 cv
405.266 333.47 li
405.524 333.25 405.775 333.024 406.03 332.801 cv
406.159 332.689 406.289 332.577 406.417 332.465 cv
406.417 352.02 li
402.546 353.397 398.477 354.416 394.249 355.029 cv
394.247 355.029 394.244 355.03 394.242 355.03 cv
394.22 355.033 394.197 355.036 394.174 355.04 cv
394.172 355.04 394.17 355.04 394.168 355.041 cv
394.149 355.043 394.129 355.046 394.109 355.049 cv
394.103 355.05 394.1 355.05 394.094 355.051 cv
394.072 355.054 394.051 355.057 394.029 355.06 cv
394.029 355.06 li
394.029 355.06 li
391.043 355.483 388.079 355.684 385.151 355.684 cv
375.978 355.024 mo
371.178 354.322 366.535 353.068 362.125 351.332 cv
363.539 351.211 364.958 351.053 366.382 350.852 cv
368.197 350.595 369.988 350.277 371.754 349.9 cv
372 350.366 372.248 350.833 372.487 351.311 cv
373.152 352.639 374.741 352.101 375.141 353.674 cv
375.265 354.161 375.581 354.603 375.978 355.024 cv
level3{
gsave
clp
[83.4594 0 0 83.4594 355.543 265.422 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~HRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,Y
HRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,Y
HRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,Y
HRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,YHRV,Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~HRV,YHmq5ZI4@G]I4@G]Ik*\_J1<eaJL`qbJL`qbJh91eKIoIiKe>XkL+YalLG(soLbD'pM(V*pMD.Bt
M_@HuM_RR!N%dU!NA*d$N\Em%O"j$&O"j''O>B9)OYT<)P;>W-PVY`.PVY`.PVbc.Pqtl0Q8M)2QS_,2
Qo7D6R5RM7R5[S8Rl<h;S2`t<SMs%=SMs%=SiB7@SiB7@T/]@ATJoICTfG[EU,Y^EU,kgFUH1sHUcV*I
V)q3JVE@EMV`[NNV`[NNW'*`QW'*`QW]iuTW]j&VX$92WX$92WX?fDYX[#M[Y!P_]Y<bb]YX(q`YX(q`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.183003 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[83.4594 0 0 83.4594 355.543 265.422 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?smaH[C*eI!g<hI!pElIXcis
J:N0#J:N0$JUrE)K7no2KS>,6L5(G<LPLY@LkpnEM2I1JMMd:KMi3LPN/WaUNK&sYNfK-[O,o?_OH>Qd
OckolPEV2oPEV2oPa%DsQ'IW#QBml(Q^=),R$a8.R@0M4S"#n;S=H+>S=H.@SXl=BSt;OGT:_aKTV/!P
TqS0RTq\9UUSFT[Unjf_V5:&dVP^5fVPg>iVl-GkW2ZbqWMuntWiE)!WiN2$XK8M*Xf\_.Y-+t3YHP.5
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jm.4H\p.4Qes.Olnt
.Olnt.Olnu/1`>'/1iG*/M/P+/hSb//hSb//hSb00/"t30/#"50JG160/"t30/#"50JG170ekF=1,:U?
1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G2)R6K2)[?N2E!HO2`EZS2`EWQ2E!KQ2`EZS2`EZS2`EZS3&ilW
3&ilX3B9)[3]];_3]];`4$,Mc4$,Mc4$5Vf4?P_h4Ztqk4Zttm5!D.o5!M:t5X7S"5X@\%5s[b$5X7S"
~>
<~4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztql5!D.o5!D.o5!D1q
5<h@r5!D.o5!D1q5X7S"5X7S"5s[e&5s[e&5s[h(6:4+-6UO4.6:+"+6UX=16psF26psF26psF26UO4/
6psF26psF26psF26psI477BX56psI477BX677BX67Rfj:7Rfj:7Rfj:7Rfm<7n6'>7n6'?84cBE8P)HD
84Z9B84Z9B84Z9A7n6'?84Z9B84Z9B84cBE8P)KF8P)KF8kM]J8kDTG8P)KF8P)NH8kM]I8P)NH91qoN
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
380.79 355.545 mo
380.305 355.512 379.825 355.462 379.343 355.418 cv
378.763 355.365 378.185 355.306 377.609 355.237 cv
377.067 355.172 376.524 355.111 375.986 355.032 cv
375.986 355.032 li
375.986 355.032 li
375.979 355.024 li
375.979 355.024 375.978 355.024 375.978 355.024 cv
375.581 354.603 375.265 354.161 375.141 353.674 cv
374.741 352.101 373.152 352.639 372.487 351.311 cv
372.248 350.833 372 350.366 371.754 349.9 cv
374.777 349.254 377.723 348.436 380.584 347.459 cv
380.709 347.78 380.84 348.117 380.98 348.474 cv
380.028 348.77 379.225 349.018 378.426 349.266 cv
378.334 349.395 378.248 349.516 378.161 349.639 cv
380.048 350.273 377.703 352.13 378.696 352.367 cv
380.513 352.799 378.17 354.498 379.367 354.498 cv
379.391 354.498 379.417 354.497 379.443 354.496 cv
379.499 354.493 379.553 354.491 379.604 354.491 cv
380.57 354.491 380.661 354.994 380.788 355.536 cv
380.788 355.536 380.788 355.536 380.788 355.536 cv
380.79 355.545 li
.747158 .436011 .407294 .104677 cmyk
f
431.996 316.45 mo
420.118 316.45 li
420.177 316.358 420.236 316.265 420.295 316.172 cv
420.384 316.031 420.468 315.886 420.556 315.744 cv
421.03 314.981 421.488 314.208 421.934 313.428 cv
422.074 313.184 422.214 312.942 422.35 312.697 cv
422.84 311.818 423.313 310.931 423.766 310.033 cv
423.871 309.825 423.97 309.614 424.073 309.406 cv
424.461 308.62 424.834 307.827 425.193 307.028 cv
425.289 306.814 425.389 306.601 425.483 306.386 cv
425.89 305.456 426.277 304.516 426.646 303.569 cv
426.74 303.326 426.83 303.082 426.922 302.839 cv
427.001 302.631 427.078 302.423 427.155 302.214 cv
427.207 302.203 427.259 302.191 427.311 302.178 cv
427.345 302.17 427.381 302.166 427.418 302.166 cv
427.642 302.166 427.915 302.31 428.267 302.396 cv
428.185 303.574 428.589 303.813 429.152 303.813 cv
429.343 303.813 429.553 303.785 429.769 303.757 cv
429.985 303.73 430.206 303.702 430.421 303.702 cv
430.79 303.702 431.138 303.784 431.4 304.089 cv
431.31 304.717 431.39 305.654 431.025 306.363 cv
430.474 307.439 431.723 308.873 430.265 309.68 cv
432.063 311.734 431.792 314.271 431.996 316.45 cv
level3{
gsave
clp
[83.4594 0 0 83.4594 355.543 265.422 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[83.4594 0 0 83.4594 355.543 265.422 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
446.926 286.402 mo
446.924 286.386 446.922 286.371 446.919 286.355 cv
446.921 286.371 446.924 286.387 446.926 286.402 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~0fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi86
0fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi86
0fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi86
0fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi860fi86
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~0fi860fi860g&G91-AP:1-8P;1-JY<1H\b>1Heh?1Heh?1d5(C1d5(C2*b@G2F1LH2F1RJ2FCaM2aUgN
2agpO3(%$Q3(%*S3(73T3CR?V3CREX3_!W[3_3`\4@`r_4@s,b4@s/c4A08d4A0>f4\TSj4\]Yk4\]_m
4\]eo5#,qp5#6%r5YuA!5>Z>"5uDY&5Z2Y'5uVk+5uVk+6<&(.6</106rnO56rnR679=g:7TY!=7Tb$>
7p16A7pCED86gWG7pU]K8R-lM87$lM87-uO87@/R8RR8U8n!JX8n*SZ94E\\8n3b_94Wtc94a(e9P0=j
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG17
0JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG170JG180ekC;
0ekF=1,:U?1G^gC1GgpG2)R6K2)R9M2E!KQ2`EZS3&ilW3&ruZ3BB5`4$,Mc4$,Mc4?P_g4?P_g4?Yhj
4[)(p5<h@t5X7S"5X7V$5s[e'6UO4/6q'O577B[87Rfm<7n6'?84Z9A7n6'?84cBE8P)NH8kM]J8kM`L
~>
<~3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3BB5`4$,Mc
4$5Vf4?P_g4Ztqk4[)(q5X7S#6:+"*6:4+-6:+%-6psF26q'O67n6'>84Z9B8P2TI91qrP9MA,R9MJ5V
:/=Y]:JXe`;,L4h;GpFl<)cgs<E3%"<`W7&='&L+=^#$6>[1N=>[1Q@?=.)J?smAN@:<SQ@U`hWA7T7_
~>
<~;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;cH^q<)cju
<`W7&='&I)=BJ^/=^#!4>$>-8>[1Q??!U`B?XR8L?smAN@UinX@q0%\AS#IcAnGXfBPD0pC2.O#D/F-,
D/O60E,]f:EcQ5BF)uGFF`hhMGBe@XH@($eI!g<hI=6QnIt3-&JqAT+JqJ]/Knb>;LPLY?M2I4LN/WaV
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!WiE)!WiE)!
WiE*!s8W-!s8Z/"9\l3"U,)7~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
433.104 274.983 mo
433.037 274.983 432.976 274.973 432.925 274.945 cv
432.414 274.66 431.965 274.258 431.499 273.888 cv
431.456 273.021 431.395 272.151 431.322 271.28 cv
431.301 271.027 431.277 270.773 431.253 270.52 cv
431.147 269.4 431.024 268.279 430.865 267.155 cv
430.825 266.869 430.782 266.585 430.738 266.301 cv
431.334 266.95 432.038 267.538 433.012 268.46 cv
433.355 267.258 433.538 266.617 433.683 266.11 cv
434.859 267.162 436.084 268.258 437.36 269.399 cv
438.065 268.754 438.468 268.385 438.899 267.99 cv
439.61 269.564 440.316 271.124 441.095 272.848 cv
440.257 273.308 439.491 273.477 438.767 273.477 cv
436.958 273.477 435.402 272.426 433.596 272.235 cv
433.585 273.192 433.576 274.031 433.566 274.93 cv
433.418 274.937 433.248 274.983 433.104 274.983 cv
level3{
gsave
clp
[83.4594 0 0 83.4594 355.543 265.422 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[83.4594 0 0 83.4594 355.543 265.422 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
443.396 316.45 mo
431.996 316.45 li
431.792 314.271 432.063 311.734 430.265 309.68 cv
431.723 308.873 430.474 307.439 431.025 306.363 cv
431.39 305.654 431.31 304.717 431.4 304.089 cv
431.138 303.784 430.79 303.702 430.421 303.702 cv
430.206 303.702 429.985 303.73 429.769 303.757 cv
429.553 303.785 429.343 303.813 429.152 303.813 cv
428.589 303.813 428.185 303.574 428.267 302.396 cv
427.915 302.31 427.642 302.166 427.418 302.166 cv
427.381 302.166 427.345 302.17 427.311 302.178 cv
427.259 302.191 427.207 302.203 427.155 302.214 cv
427.398 301.551 427.633 300.885 427.857 300.214 cv
427.904 300.073 427.956 299.934 428.002 299.792 cv
428.324 298.807 428.62 297.812 428.901 296.812 cv
428.972 296.557 429.041 296.302 429.11 296.046 cv
429.383 295.031 429.641 294.01 429.87 292.981 cv
429.917 292.754 li
430.131 291.773 430.321 290.786 430.495 289.793 cv
430.538 289.545 430.583 289.296 430.624 289.047 cv
430.795 288.008 430.947 286.964 431.072 285.914 cv
431.094 285.736 431.11 285.556 431.13 285.378 cv
431.236 284.434 431.321 283.485 431.39 282.532 cv
431.406 282.313 431.425 282.094 431.439 281.874 cv
431.506 280.81 431.548 279.742 431.568 278.668 cv
431.572 278.439 431.572 278.21 431.573 277.98 cv
431.582 276.996 431.572 276.009 431.54 275.018 cv
431.535 274.867 431.535 274.716 431.529 274.565 cv
431.52 274.339 431.51 274.113 431.499 273.888 cv
431.965 274.258 432.414 274.66 432.925 274.945 cv
432.976 274.973 433.037 274.983 433.104 274.983 cv
433.248 274.983 433.418 274.937 433.566 274.93 cv
433.576 274.031 433.585 273.192 433.596 272.235 cv
435.402 272.426 436.958 273.477 438.767 273.477 cv
439.491 273.477 440.257 273.308 441.095 272.848 cv
440.316 271.124 439.61 269.564 438.899 267.99 cv
438.468 268.385 438.065 268.754 437.36 269.399 cv
436.084 268.258 434.859 267.162 433.683 266.11 cv
433.538 266.617 433.355 267.258 433.012 268.46 cv
432.038 267.538 431.334 266.95 430.738 266.301 cv
430.606 265.46 430.458 264.625 430.3 263.794 cv
430.24 263.474 430.174 263.157 430.109 262.84 cv
429.937 261.991 429.75 261.148 429.549 260.311 cv
429.48 260.027 429.416 259.74 429.344 259.457 cv
429.071 258.381 428.779 257.314 428.46 256.259 cv
428.404 256.077 428.342 255.898 428.285 255.717 cv
428.01 254.832 427.717 253.956 427.41 253.088 cv
427.3 252.776 427.187 252.467 427.073 252.157 cv
426.768 251.335 426.45 250.52 426.117 249.713 cv
426.027 249.494 425.943 249.273 425.851 249.055 cv
425.797 248.93 425.737 248.808 425.683 248.683 cv
426.149 249.068 426.608 249.459 427.062 249.857 cv
427.26 250.03 427.461 250.199 427.656 250.375 cv
428.278 250.933 428.888 251.505 429.486 252.089 cv
429.677 252.275 429.863 252.467 430.052 252.656 cv
430.491 253.096 430.923 253.542 431.349 253.995 cv
431.554 254.214 431.759 254.433 431.962 254.656 cv
432.445 255.185 432.918 255.724 433.382 256.271 cv
433.484 256.39 433.589 256.506 433.69 256.627 cv
434.237 257.282 434.766 257.952 435.286 258.631 cv
435.452 258.848 435.613 259.068 435.776 259.288 cv
436.157 259.799 436.529 260.317 436.893 260.841 cv
437.048 261.063 437.204 261.284 437.355 261.509 cv
437.839 262.226 438.313 262.952 438.766 263.691 cv
438.827 263.789 438.882 263.891 438.942 263.989 cv
439.341 264.649 439.727 265.317 440.101 265.994 cv
440.234 266.234 440.364 266.476 440.493 266.718 cv
440.812 267.314 441.121 267.917 441.42 268.525 cv
441.521 268.73 441.625 268.933 441.724 269.139 cv
442.103 269.934 442.467 270.739 442.813 271.555 cv
442.888 271.733 442.958 271.915 443.031 272.095 cv
443.304 272.757 443.565 273.425 443.815 274.1 cv
443.909 274.353 444.001 274.607 444.092 274.863 cv
444.344 275.575 444.584 276.294 444.81 277.02 cv
444.856 277.169 444.907 277.315 444.953 277.464 cv
445.215 278.329 445.455 279.205 445.678 280.088 cv
445.737 280.32 445.79 280.555 445.846 280.789 cv
446.011 281.475 446.165 282.166 446.306 282.863 cv
446.359 283.123 446.413 283.383 446.463 283.645 cv
446.632 284.542 446.789 285.443 446.919 286.355 cv
446.922 286.371 446.924 286.386 446.926 286.402 cv
446.926 286.402 li
447.056 287.325 447.157 288.244 447.244 289.163 cv
447.264 289.371 447.283 289.579 447.301 289.787 cv
447.377 290.687 447.436 291.586 447.47 292.481 cv
447.475 292.605 447.476 292.729 447.48 292.853 cv
447.506 293.665 447.514 294.475 447.507 295.283 cv
447.506 295.471 447.506 295.659 447.502 295.847 cv
447.487 296.728 447.452 297.604 447.397 298.477 cv
447.385 298.657 447.37 298.837 447.357 299.017 cv
447.3 299.798 447.23 300.576 447.143 301.351 cv
447.127 301.498 447.113 301.645 447.096 301.791 cv
446.993 302.653 446.868 303.509 446.728 304.361 cv
446.694 304.565 446.658 304.769 446.622 304.973 cv
446.479 305.787 446.324 306.598 446.148 307.402 cv
446.11 307.588 li
445.922 308.433 445.71 309.269 445.486 310.103 cv
445.43 310.312 445.373 310.522 445.315 310.731 cv
445.084 311.551 444.842 312.368 444.577 313.176 cv
444.539 313.291 444.497 313.406 444.459 313.521 cv
444.217 314.245 443.96 314.962 443.692 315.675 cv
443.616 315.874 443.542 316.075 443.465 316.274 cv
443.442 316.333 443.419 316.392 443.396 316.45 cv
.747158 .436011 .407294 .104677 cmyk
f
385.54 368.528 mo
362.127 368.528 340.653 357.741 326.626 338.933 cv
325.966 338.049 326.148 336.796 327.034 336.134 cv
327.92 335.473 329.174 335.656 329.833 336.543 cv
343.098 354.328 363.402 364.528 385.54 364.528 cv
423.829 364.528 454.98 333.378 454.98 295.089 cv
454.98 272.934 444.779 252.626 426.994 239.372 cv
426.109 238.712 425.926 237.459 426.586 236.573 cv
427.245 235.688 428.497 235.504 429.385 236.165 cv
447.916 249.975 458.98 272.003 458.98 295.089 cv
458.98 335.584 426.035 368.528 385.54 368.528 cv
.779202 .591241 .502647 .329534 cmyk
f
391.543 386.072 mo
379.543 386.072 li
379.543 366.525 li
391.543 366.525 li
391.543 386.072 li
cp
f
419.138 395.002 mo
351.947 395.002 li
347.016 395.002 343.018 399 343.018 403.931 cv
428.068 403.931 li
428.068 399 424.07 395.002 419.138 395.002 cv
cp
.79498 .633936 .556786 .48838 cmyk
f
404.632 395.002 mo
366.453 395.002 li
366.453 386.072 li
404.632 386.072 li
404.632 395.002 li
cp
.779202 .591241 .502647 .329534 cmyk
f
gsave
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
clp
569.585 316.45 mo
406.417 316.45 li
406.417 403.931 li
569.585 403.931 li
569.585 316.45 li
.387762 .582269 .771511 .252171 cmyk
f
500 350.924 mo
411.11 350.924 li
409.246 349.061 407.904 347.718 406.417 346.232 cv
406.417 320.346 li
500 320.346 li
500 350.924 li
.416693 .598444 .775967 .315618 cmyk
f
572.358 316.45 mo
403.645 316.45 li
403.645 339.563 li
406.56 342.479 408.195 344.113 411.11 347.029 cv
564.893 347.029 li
567.808 344.113 569.442 342.479 572.358 339.563 cv
572.358 316.45 li
cp
.387762 .582269 .771511 .252171 cmyk
f
435.781 347.029 mo
443.449 347.029 li
443.449 316.45 li
435.781 316.45 li
435.781 347.029 li
cp
.428901 .632013 .768063 .374548 cmyk
f
432.831 353.813 mo
446.399 353.813 li
446.399 340.245 li
432.831 340.245 li
432.831 353.813 li
cp
.200626 .342412 .848539 .00741588 cmyk
f
434.685 350.924 mo
444.546 350.924 li
444.546 343.133 li
434.685 343.133 li
434.685 350.924 li
cp
.265537 .464759 1 .0629587 cmyk
f
435.781 403.931 mo
443.449 403.931 li
443.449 347.029 li
435.781 347.029 li
435.781 403.931 li
cp
.428901 .632013 .768063 .374548 cmyk
f
513.911 392.174 mo
462.092 392.174 li
460.267 392.174 458.788 390.695 458.788 388.87 cv
458.788 366.665 li
458.788 364.84 460.267 363.36 462.092 363.36 cv
513.911 363.36 li
515.735 363.36 517.215 364.84 517.215 366.665 cv
517.215 388.87 li
517.215 390.695 515.735 392.174 513.911 392.174 cv
cp
.331548 .56289 .729366 .154788 cmyk
f
517.763 366.537 mo
458.24 366.537 li
457.363 366.537 456.652 365.826 456.652 364.949 cv
456.652 364.072 457.363 363.36 458.24 363.36 cv
517.763 363.36 li
518.64 363.36 519.351 364.072 519.351 364.949 cv
519.351 365.826 518.64 366.537 517.763 366.537 cv
cp
.428901 .632013 .768063 .374548 cmyk
f
517.023 316.45 mo
512.156 316.45 li
512.156 305.743 li
512.156 305.156 511.488 304.66 510.695 304.66 cv
465.307 304.66 li
464.515 304.66 463.846 305.156 463.846 305.743 cv
463.846 316.45 li
458.98 316.45 li
458.98 305.743 li
458.98 302.463 461.818 299.793 465.307 299.793 cv
510.695 299.793 li
514.185 299.793 517.023 302.463 517.023 305.743 cv
517.023 316.45 li
cp
.331548 .56289 .729366 .154788 cmyk
f
grestore
233.596 388.194 mo
289.529 394.133 li
288.86 390.238 li
236.464 382.582 li
233.596 382.582 li
233.596 388.194 li
f
334.517 388.194 mo
278.584 394.133 li
279.253 390.238 li
331.649 382.582 li
334.517 382.582 li
334.517 388.194 li
f
284.057 380.858 mo
284.057 386.223 li
281.81 386.223 279.982 385.972 279.253 390.238 cv
280.854 380.858 li
284.057 380.858 li
cp
f
266.969 399.152 mo
256.103 399.152 li
263.849 391.406 li
274.016 392.486 li
273.873 393.323 li
273.296 396.703 270.393 399.152 266.969 399.152 cv
247.853 399.152 mo
244.628 399.152 li
243.934 399.152 243.28 398.881 242.787 398.388 cv
242.005 397.607 li
242.72 398.321 li
249.5 391.541 li
249.5 397.504 li
247.853 399.152 li
250.5 396.504 mo
250.5 390.541 li
250.999 390.042 li
256.39 390.615 li
250.5 396.504 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh
%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh
%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh
%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh%i?Dh
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%i?Dh%i?Dh%iHJi&/cVk&/ZSk&/l\l&/l_m&/l_m&/l_m&fDtq&fDtq&fW+s&KE%r&KE%r&KN.t&fi>"
&fi>"&frA"&frG$&frJ%'-AY''-A\('cnn+'Hen+'d,(.'Ho"-'Ho"-'I#+/'I#.0(*P=2(*bI4(F1[7
(F1[7(aCd9(aUs<(FCp<(FCp<(FCp<(FM$>)(.<B)(.<B)CRNE)CIKE)C[TF)(ITG)Cd`I)_!iK)_3rL
*%EuL*%X/O)_F/P*%a;R*@sDT*A0MU*%sMV*A9\Y*\KbZ+>6%]+>H7a+>H7a+>H:b+YlLe+Z)[h+Z2^h
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY
%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsZ%hB0]
%hB0]%hB0]&.fEc&J5Te&J,Kb&.fEc&J5Te&J5Te&eYfi&ebrn'GM5q'GM2o',)#m'GV>t()@Z$()Ic'
(Ddl'()@Z$()@]'(`4,.)&X;0)&X;0)&aD3)B'P6)]K_8)]Kb:*#oq<*#oq=*?H:E+!2RH+!2UJ+<VdL
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Dmu+(`4),
(`=2/)&X;0)&X;/(`=52)]K_9*#oq<*#ot>*??.@*Zc@D*Zc@D+!2RI+<VdL+X&!P+X&!Q,9nEX,9nEX
,UF`_,pai`-71&d-71)f-RU8h-n-So.4H\p.Olnt.P!&$/1`>'/1`A*/hSb//hSb00JG170JG491,CaD
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RI+<VgN
+X&!P+X&!P+sS?Y,U=W\,U4NZ,U=Z_-71&d-7:2i-n$Jm.4Qhu.k</%/1`;%/1`A)/hSb/0/"t30/,+9
1,:U?1,:U?1G^jF2)R9M2`EZS2`EZT3&s#\3]]8]3]]>a4?Pbj5!D.o5!M:u5s[e'6UO4.6psI47Rfj:
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
249.5 397.504 mo
249.5 391.541 li
250.5 390.541 li
250.5 396.504 li
249.5 397.504 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'
(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'
(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'
(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'(EOn'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(EOn'(EOn'(EOn'(`at((`b")(`t.+(`k++(Eb++(Eb++(a(:.(a(=/(`t=0)'CI1)'CI1)'CI1)B^X4
)Bg[4)Bp^4)Bpd6)Bpd6)C-p8)C.!:)^R-;)^R-;*$d6=*$m??*$mB@*%*KA*%*KA*@<TC*%3ZE*%<]E
*%<cG*[irI*@`uJ+"9/L+"95N+"B;O+"B;O+=fJQ+=fJQ+=fMR+>#\U+>,_U+>,eW+YGtZ+YGtZ+YQ(\
,;;C`,;;Ib,r%^d,r7mg,r7si,W%mh,rA'k,rA*l-8e6m-T4Eo-T4Hp-oFTs-oX`u-oaj"-oaj"-oap$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z%(Ddl(
(Ddl((Ddi&(Ddl((Ddl)(`4),(`4,.)&X;0)&X;0)&X;0)&aD3)B0V7)]K_8)]K_8*#oq<)]K_8)]Tk=
*??1B*Zc@D*ZcCF+!2RH+!2RH+!2RI+<VdL+<VgO+sJ6W,U=W\,U=W\,U=W],pjrc-71)f-RU8h-RU8h
~>
<~*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??+>
*?H7C*ZlIG+!2RH+!2RH+!2RH+!2RH+<VgN+X&!P+sJ6V,:"N[,U=W\,U=W\,pjrc-71&e-n$Jl-n$Jl
.4H\o-n$Mn.4H_r.Olnt.k</&/M/P+/M/P,/hSe10/#"50etL>1G^gC1G^gD1c7-J2)R6K2)[BP2`EZS
~>
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,paia-71)f
-RU;j-n$Gj-n$Mo.P!&$/1W5$.k</&/M/M)/1iG*/M/P,0/"t2/h\n50ekF=1,:R=1,CaD1c.$G2)[?N
2E*QS3B9)[3B9)[3B9,]4$,Mc4$,Pf5!D.p5<hCu5sdn)6:+%-6psF277Ka97R]a87Rfp?8P)NH8kM`M
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
241.995 397.597 mo
241.994 397.596 241.992 397.594 241.991 397.593 cv
241.992 397.594 241.994 397.596 241.995 397.597 cv
241.987 397.589 mo
241.515 397.109 241.243 396.445 241.243 395.768 cv
241.243 389.006 li
247.958 389.719 li
241.319 396.358 li
241.427 396.819 241.654 397.25 241.987 397.589 cv
274.753 388.177 mo
268.057 387.198 li
274.538 380.717 li
275.122 381.476 li
275.769 382.242 li
274.753 388.177 li
260.858 386.146 mo
255.655 385.386 li
260.391 380.65 li
266.347 380.657 li
260.858 386.146 li
252.72 384.957 mo
250.5 384.633 li
250.5 380.638 li
257.031 380.646 li
252.72 384.957 li
249.5 384.486 mo
241.243 383.28 li
241.243 382.838 li
243.451 380.63 li
249.5 380.637 li
249.5 384.486 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
250.5 384.633 mo
249.5 384.486 li
249.5 380.637 li
250.5 380.638 li
250.5 384.633 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
274.016 392.486 mo
263.849 391.406 li
268.057 387.198 li
274.753 388.177 li
274.016 392.486 li
256.39 390.615 mo
250.999 390.042 li
255.655 385.386 li
260.858 386.146 li
256.39 390.615 li
247.958 389.719 mo
241.243 389.006 li
241.243 383.28 li
249.5 384.486 li
250.5 384.633 li
252.72 384.957 li
247.958 389.719 li
.579004 .416907 .395666 .0631723 cmyk
f
273.873 393.323 mo
273.296 396.703 270.393 399.152 266.969 399.152 cv
244.628 399.152 li
243.934 399.152 243.28 398.881 242.787 398.388 cv
242.005 397.607 li
241.522 397.126 241.243 396.454 241.243 395.768 cv
241.243 382.838 li
243.451 380.63 li
274.499 380.667 li
275.122 381.476 li
275.769 382.242 li
273.873 393.323 li
278.061 377.545 mo
277.176 376.495 275.872 375.887 274.5 375.887 cv
243.362 375.887 li
242.128 375.887 240.944 376.377 240.071 377.25 cv
236.464 380.858 li
236.464 388.194 li
236.464 395.768 li
236.464 397.729 237.245 399.61 238.633 400.995 cv
238.894 401.255 239.15 401.51 239.41 401.77 cv
240.794 403.153 242.672 403.931 244.628 403.931 cv
266.97 403.931 li
272.717 403.931 277.616 399.797 278.584 394.133 cv
279.253 390.238 li
280.854 380.858 li
279.619 379.401 278.946 378.596 278.061 377.545 cv
.779293 .535119 .446448 .209201 cmyk
f
236.464 380.858 mo
236.464 388.194 li
233.596 388.194 li
233.596 380.858 li
236.464 380.858 li
cp
.779202 .591241 .502647 .329534 cmyk
f
284.057 380.858 mo
284.057 386.223 li
286.303 386.223 288.131 385.972 288.86 390.238 cv
287.259 380.858 li
284.057 380.858 li
cp
f
322.654 399.152 mo
306.157 399.152 li
315.047 390.262 li
322.654 389.454 li
322.654 399.152 li
323.654 399.146 mo
323.654 389.348 li
326.87 389.006 li
326.87 395.768 li
326.87 396.454 326.591 397.126 326.108 397.607 cv
325.326 398.388 li
324.873 398.84 324.285 399.106 323.654 399.146 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
323.485 399.152 mo
322.654 399.152 li
322.654 389.454 li
323.654 389.348 li
323.654 399.146 li
323.598 399.15 323.542 399.152 323.485 399.152 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
301.143 399.152 mo
301.136 399.152 301.129 399.152 301.122 399.152 cv
301.129 399.152 301.136 399.152 301.143 399.152 cv
301.118 399.152 mo
301.112 399.152 301.106 399.152 301.1 399.152 cv
301.106 399.152 301.112 399.152 301.118 399.152 cv
301.097 399.152 mo
297.694 399.129 294.814 396.687 294.24 393.323 cv
294.24 393.323 li
294.097 392.486 li
295.381 392.35 li
294.27 393.46 li
294.438 394.341 294.766 395.154 295.219 395.876 cv
299.145 391.95 li
305.817 391.242 li
298.449 398.61 li
299.268 398.951 300.161 399.145 301.097 399.152 cv
293.36 388.177 mo
292.344 382.242 li
292.991 381.476 li
293.614 380.667 li
316.419 380.64 li
311.538 385.52 li
304.554 386.541 li
310.448 380.647 li
307.08 380.651 li
300.614 387.117 li
293.36 388.177 li
321.2 384.108 mo
322.654 382.654 li
322.654 383.896 li
321.2 384.108 li
323.654 383.75 mo
323.654 381.654 li
324.671 380.638 li
324.662 380.63 li
324.663 380.63 li
326.87 382.838 li
326.87 383.28 li
323.654 383.75 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
322.654 383.896 mo
322.654 382.654 li
323.654 381.654 li
323.654 383.75 li
322.654 383.896 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
294.097 392.486 mo
293.36 388.177 li
300.614 387.117 li
295.381 392.35 li
294.097 392.486 li
299.145 391.95 mo
304.554 386.541 li
311.538 385.52 li
305.817 391.242 li
299.145 391.95 li
315.047 390.262 mo
321.2 384.108 li
322.654 383.896 li
323.654 383.75 li
326.87 383.28 li
326.87 389.006 li
323.654 389.348 li
322.654 389.454 li
315.047 390.262 li
.579004 .416907 .395666 .0631723 cmyk
f
326.87 395.768 mo
326.87 396.454 326.591 397.126 326.108 397.607 cv
325.327 398.388 li
324.833 398.881 324.179 399.152 323.485 399.152 cv
301.144 399.152 li
297.72 399.152 294.817 396.703 294.24 393.323 cv
292.344 382.242 li
292.991 381.476 li
293.614 380.667 li
324.663 380.63 li
326.87 382.838 li
326.87 395.768 li
328.042 377.25 mo
327.169 376.377 325.985 375.887 324.751 375.887 cv
293.614 375.887 li
292.241 375.887 290.937 376.495 290.053 377.545 cv
289.167 378.596 288.494 379.401 287.259 380.858 cv
288.86 390.238 li
289.529 394.133 li
290.497 399.797 295.396 403.931 301.144 403.931 cv
323.485 403.931 li
325.442 403.931 327.319 403.153 328.703 401.77 cv
328.963 401.51 329.22 401.255 329.48 400.995 cv
330.868 399.61 331.649 397.729 331.649 395.768 cv
331.649 388.194 li
331.649 380.858 li
328.042 377.25 li
.779293 .535119 .446448 .209201 cmyk
f
331.649 380.858 mo
331.649 388.194 li
334.517 388.194 li
334.517 380.858 li
331.649 380.858 li
cp
.779202 .591241 .502647 .329534 cmyk
f
256.103 399.152 mo
250.5 399.152 li
250.5 396.504 li
256.39 390.615 li
263.849 391.406 li
256.103 399.152 li
249.5 399.152 mo
247.853 399.152 li
249.5 397.504 li
249.5 399.152 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^
%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^
%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^
%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^%MKf^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%MKf^%MKf^%2Bi_%2Bi_%2Boa%2Kra%2Kub%2Kub%2Kub%M^)d%M^)d%Mp2e%N-;f%N-;f%2p;g%iHJi
%iHJi%N?Mj%N?Pk%iZ\m&0)ko&/uho&fW+s&KE%r&KE+t&KE+t&KE+t&KN.t&KN5!&fi>"&frG$'-AY'
'-AY''-A\('-Je*'-Sn,'-Sn,'-Sn,'-f(/'I#+/'I#+/'dG=2(*bI4(*bI4'dPI5(*kX8(F1d:(F:g:
(aUs<(FCp<(FM$>(FM$>)(.<B(aq6A(b.BC(b%BD)C[WG)(ITG)Cd`I)Cd`I)CdfK)_*rM)_=&N)D4&N
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaT$k*OQ
$k*OQ$k*OQ%1NaU%1NaU%1NaU%1NaV%LrsY%1NdW%hB0]%hK<b&J,Kb&.fBa&.fBa&J5Te&eYfi&eYfi
&eYfi&eYfi&eYik',)&o'bqGu'bqGu'c%Q#()@]&(Ddi&()@]'(`4)+(Ddl))&X;0)&X;0)&X>2)B'M4
~>
<~&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&ebrn'GM5q
'bqGu'bqGu'bqGt'GVB"(`4)-)&X;0(`4,/)B'M4)]K_8)]BV6)]K_8)]K_8*#oq<*#ot>*Zc@D*Zc@E
+!;[K+<VdL+X/*S+X&$R+sJ3T+sS<W,9nEY,U=W\,palb-71&d-RU8i.4H\o-n-So.4H\p.4H\p.P!&%
~>
<~)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]Kb;
*??.@*??.@*ZcCF+!2RG*ZZ7B*ZcCF+!2RH+<VgN+X&!Q+sS?Y,U=Z^,pai`,paia-71)f-n$Jl-n-Sp
.P!#".k<,#/1`>'/1`A)/hSb//h\k30etL>1,:U?1,:XA1G^jF2)R6J1c70M2`EZT3&ilW3BB5`4$,Ja
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
250.5 399.152 mo
249.5 399.152 li
249.5 397.504 li
250.5 396.504 li
250.5 399.152 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn
',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn
',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn
',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn',htn
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~',htn',htn',htn',htn',i"o',r(p',r+q',r+q',r+q',r1s',r4t',r7u'HAG"'HAG"'HAG"()nS#
'ceS#'d"_%'cn\%'cn\%'d+k('d+q*(*P(+(*P(+(a(:.(Ek7.(a1F1(Et=/(Et=/)'LR3)'LR3(aCO2
)'^^5)Bpg7)C-p8)C.!:)C.'<)C7-=)C7-=)^[9>)^[9>)^[?@)^dHB)_!QC)_!QC)^mQD)^mQD)_!WE
*%<fH*%<iI*@a#K*@j)L*\08O*@s2N*\9AQ*\9AQ+"]MR+>,\T+>,_U+YGnX+YQ"Z+u):^+u):^+u)@`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi&eYfi&eYfi&eYfj',)#m',)&p'bqDs'GM5q'GM5q'GV>t'c%T%(Ddl((Ddi&(Dmu+(`4),(`=2/
)&X;0)&X;0)&X>2)B'M4)B'M4)B'M4)B'M4)B'P6)]Kb:*#ot>*??.@*??.A*ZlIG+!2UJ+<VgN+X&!P
~>
<~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)B'M4)B'M4)B'M4)B'M5)]K_8)]K_8)]Tk>*Zc=B*ZcCF+!;[K+<VdL+<VdL+X&!P+X%sN+X&$R+sJ3T
,9nEX,9nHZ,U=Z^,pai`-71&e-n$Jl-mpAj-n$Jl-n$Mn.Olnt.k<,#.k<,$/1iG*/M/P+/hSe20JG17
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2UJ
+<VgN+X&!P+sJ6W,UF`_,pai`,pai`,paf^,pai`-71&e-n$Jk-R^Dm.4H_s.k2ts.P!&$/1`;%/1iJ,
/hSe20ekC;0ekC;0JG4:1G^gC1GU^A1c.$G1c.'J2`EZS2`E]V3B9)[3]];_3]T2]3]]>b4Zttm5!D1r
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
268.057 387.198 mo
260.858 386.146 li
266.348 380.657 li
274.499 380.667 li
274.538 380.717 li
268.057 387.198 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
263.849 391.406 mo
256.39 390.615 li
260.858 386.146 li
268.057 387.198 li
263.849 391.406 li
.503685 .36939 .346624 .0197757 cmyk
f
256.103 399.152 mo
247.853 399.152 li
256.103 399.152 li
274.538 380.717 mo
274.499 380.667 li
274.538 380.717 li
274.499 380.667 mo
266.347 380.657 li
266.348 380.657 li
274.499 380.667 li
.686366 .466651 .402228 .109194 cmyk
f
242.72 398.321 mo
242.005 397.607 li
242.002 397.604 241.998 397.6 241.995 397.597 cv
241.994 397.596 241.992 397.594 241.991 397.593 cv
241.99 397.591 241.988 397.59 241.987 397.589 cv
241.654 397.25 241.427 396.819 241.319 396.358 cv
247.958 389.719 li
249.5 389.883 li
249.5 391.541 li
242.72 398.321 li
250.5 390.541 mo
250.5 389.989 li
250.999 390.042 li
250.5 390.541 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
249.5 391.541 mo
249.5 389.883 li
250.5 389.989 li
250.5 390.541 li
249.5 391.541 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
255.655 385.386 mo
252.72 384.957 li
257.031 380.646 li
260.391 380.65 li
255.655 385.386 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
250.999 390.042 mo
250.5 389.989 li
249.5 389.883 li
247.958 389.719 li
252.72 384.957 li
255.655 385.386 li
250.999 390.042 li
.503685 .36939 .346624 .0197757 cmyk
f
242.005 397.607 mo
242.005 397.607 li
242.002 397.604 241.998 397.6 241.995 397.597 cv
241.998 397.6 242.002 397.604 242.005 397.607 cv
242.005 397.607 li
241.991 397.593 mo
241.99 397.591 241.988 397.59 241.987 397.589 cv
241.988 397.59 241.99 397.591 241.991 397.593 cv
260.391 380.65 mo
257.031 380.646 li
257.031 380.646 li
260.391 380.65 li
.686366 .466651 .402228 .109194 cmyk
f
306.157 399.152 mo
301.144 399.152 li
301.143 399.152 301.143 399.152 301.143 399.152 cv
301.136 399.152 301.129 399.152 301.122 399.152 cv
301.121 399.152 301.119 399.152 301.118 399.152 cv
301.112 399.152 301.106 399.152 301.1 399.152 cv
301.099 399.152 301.098 399.152 301.097 399.152 cv
300.161 399.145 299.268 398.951 298.449 398.61 cv
305.817 391.242 li
315.047 390.262 li
306.157 399.152 li
311.538 385.52 mo
316.419 380.64 li
322.654 380.632 li
322.654 382.654 li
321.2 384.108 li
311.538 385.52 li
323.654 381.654 mo
323.654 380.631 li
324.663 380.63 li
324.671 380.638 li
323.654 381.654 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
322.654 382.654 mo
322.654 380.632 li
323.654 380.631 li
323.654 381.654 li
322.654 382.654 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
305.817 391.242 mo
311.538 385.52 li
321.2 384.108 li
315.047 390.262 li
305.817 391.242 li
.503685 .36939 .346624 .0197757 cmyk
f
306.157 399.152 mo
301.144 399.152 li
301.143 399.152 301.143 399.152 301.143 399.152 cv
301.143 399.152 301.143 399.152 301.144 399.152 cv
301.144 399.152 li
306.157 399.152 li
301.122 399.152 mo
301.121 399.152 301.119 399.152 301.118 399.152 cv
301.119 399.152 301.121 399.152 301.122 399.152 cv
301.1 399.152 mo
301.099 399.152 301.098 399.152 301.097 399.152 cv
301.098 399.152 301.099 399.152 301.1 399.152 cv
316.419 380.64 mo
316.419 380.64 li
324.662 380.63 li
323.654 380.631 li
322.654 380.632 li
316.419 380.64 li
.686366 .466651 .402228 .109194 cmyk
f
295.219 395.876 mo
294.766 395.154 294.438 394.341 294.27 393.46 cv
295.381 392.35 li
299.145 391.95 li
295.219 395.876 li
300.614 387.117 mo
307.08 380.651 li
310.448 380.647 li
304.554 386.541 li
300.614 387.117 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
295.381 392.35 mo
300.614 387.117 li
304.554 386.541 li
299.145 391.95 li
295.381 392.35 li
.503685 .36939 .346624 .0197757 cmyk
f
252.322 34.4046 mo
247.678 34.4046 li
247.678 0 li
252.322 0 li
252.322 34.4046 li
.779202 .591241 .502647 .329534 cmyk
f
254.075 34.4046 mo
245.925 34.4046 li
245.925 7.22766 li
254.075 7.22766 li
254.075 34.4046 li
f
265.23 69.5094 mo
265.23 77.9206 258.411 84.7392 250 84.7392 cv
241.589 84.7392 234.77 77.9206 234.77 69.5094 cv
234.77 61.0982 241.589 54.2797 250 54.2797 cv
258.411 54.2797 265.23 61.0982 265.23 69.5094 cv
cp
.0153201 .0126345 .0151369 0 cmyk
f
256.652 34.4046 mo
243.348 34.4046 li
243.348 17.7299 li
243.348 16.3788 244.443 15.2832 245.794 15.2832 cv
254.206 15.2832 li
255.557 15.2832 256.652 16.3788 256.652 17.7299 cv
256.652 34.4046 li
.200626 .342412 .848539 .00741588 cmyk
f
266.496 39.1345 mo
233.504 39.1345 li
233.504 20.0132 li
266.496 20.0132 li
266.496 39.1345 li
.235325 .417395 .990997 .0303349 cmyk
f
310.004 75.413 mo
189.996 75.413 li
199.831 55.9073 li
207.685 40.3302 223.643 30.5047 241.088 30.5047 cv
258.912 30.5047 li
276.357 30.5047 292.315 40.3302 300.169 55.9073 cv
310.004 75.413 li
f
278.304 34.7713 mo
278.304 32.6643 li
278.304 28.3453 274.802 24.8438 270.483 24.8438 cv
229.517 24.8438 li
225.198 24.8438 221.696 28.3453 221.696 32.6643 cv
221.696 34.7713 li
278.304 34.7713 li
.200626 .342412 .848539 .00741588 cmyk
f
243.348 17.7042 mo
243.348 15.2832 li
243.417 15.2832 li
243.417 17.148 li
243.374 17.3265 243.35 17.5128 243.348 17.7042 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
243.417 20.0132 mo
243.348 20.0132 li
243.348 17.7042 li
243.35 17.5128 243.374 17.3265 243.417 17.148 cv
243.417 20.0132 li
.264286 .402533 .908232 .0384527 cmyk
f
310.004 75.4128 mo
310.004 75.4128 li
300.169 55.9073 li
310.004 75.4128 li
300.143 55.8555 mo
300.14 55.8507 300.138 55.8466 300.136 55.8419 cv
300.138 55.8465 300.14 55.8508 300.143 55.8555 cv
300.116 55.8026 mo
300.113 55.7979 300.111 55.7936 300.109 55.7888 cv
300.111 55.7934 300.113 55.798 300.116 55.8026 cv
300.087 55.7466 mo
300.085 55.7428 300.085 55.7411 300.083 55.7373 cv
300.084 55.7402 300.086 55.7437 300.087 55.7466 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
310.004 75.4128 mo
272.972 75.4128 li
268.611 55.9073 li
266.488 46.4105 263.026 39.0692 258.896 34.7713 cv
258.917 34.7713 li
278.304 34.7713 li
278.304 34.7713 li
278.258 34.7713 li
287.515 39.0435 295.287 46.3229 300.083 55.7373 cv
300.085 55.7411 300.085 55.7428 300.087 55.7466 cv
300.095 55.7611 300.101 55.7744 300.109 55.7888 cv
300.111 55.7936 300.113 55.7979 300.116 55.8026 cv
300.122 55.8154 300.129 55.8291 300.136 55.8419 cv
300.138 55.8466 300.14 55.8507 300.143 55.8555 cv
300.151 55.8728 300.16 55.8899 300.169 55.9073 cv
300.169 55.9073 li
310.004 75.413 li
.281498 .462989 1 .0747082 cmyk
f
276.013 27.1344 mo
274.598 25.7192 272.643 24.8438 270.483 24.8438 cv
270.483 24.8438 li
272.643 24.8438 274.598 25.7192 276.013 27.1344 cv
256.652 17.7299 mo
256.652 16.4157 255.616 15.3433 254.316 15.2857 cv
255.616 15.3433 256.652 16.4156 256.652 17.7299 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
256.652 20.0132 mo
249.316 20.0132 li
249.316 15.2832 li
254.206 15.2832 li
254.242 15.2832 254.279 15.284 254.316 15.2857 cv
255.616 15.3433 256.652 16.4157 256.652 17.7299 cv
256.652 17.7299 li
256.652 20.0132 li
.264286 .402533 .908232 .0384527 cmyk
f
266.496 24.8438 mo
253.681 24.8438 li
253.681 20.0132 li
249.316 20.0132 li
256.652 20.0132 li
266.496 20.0132 li
266.496 24.8438 li
.281498 .462989 1 .0747082 cmyk
f
278.304 34.7713 mo
258.917 34.7713 li
258.917 32.6643 li
258.917 28.3453 257.364 24.8438 255.449 24.8438 cv
253.681 24.8438 li
266.496 24.8438 li
270.483 24.8438 li
272.643 24.8438 274.598 25.7192 276.013 27.1344 cv
277.428 28.5497 278.304 30.5048 278.304 32.6643 cv
278.304 34.7713 li
.264286 .402533 .908232 .0384527 cmyk
f
309.441 69.5094 mo
190.559 69.5094 li
188.929 69.5094 187.608 70.831 187.608 72.4612 cv
187.608 74.0914 188.929 75.413 190.559 75.413 cv
309.441 75.413 li
311.071 75.413 312.392 74.0914 312.392 72.4612 cv
312.392 70.831 311.071 69.5094 309.441 69.5094 cv
cp
.235325 .417395 .990997 .0303349 cmyk
f
255 9.3976 mo
245 9.3976 li
245 7.2277 li
255 7.2277 li
255 9.3976 li
cp
.779202 .591241 .502647 .329534 cmyk
f
255 13.5016 mo
245 13.5016 li
245 11.3317 li
255 11.3317 li
255 13.5016 li
cp
f
255 72.6665 mo
192 72.6665 li
191.447 72.6665 191 72.2188 191 71.6665 cv
191 71.1143 191.447 70.6665 192 70.6665 cv
255 70.6665 li
255.553 70.6665 256 71.1143 256 71.6665 cv
256 72.2188 255.553 72.6665 255 72.6665 cv
cp
.200626 .342412 .848539 .00741588 cmyk
f
95.7233 298.815 mo
105.058 391.064 li
113.037 390.257 li
103.702 298.008 li
103.599 296.983 102.685 296.238 101.661 296.341 cv
97.3897 296.773 li
96.3658 296.877 95.6197 297.791 95.7233 298.815 cv
.742672 .396307 .297887 .0291752 cmyk
f
104.099 301.93 mo
96.1204 302.738 li
95.7233 298.815 li
95.6197 297.791 96.3658 296.877 97.3897 296.773 cv
101.661 296.341 li
102.685 296.238 103.599 296.983 103.702 298.008 cv
104.099 301.93 li
0 .756069 .53933 0 cmyk
f
104.276 303.678 mo
96.2972 304.486 li
96.1202 302.738 li
104.099 301.93 li
104.276 303.678 li
.235325 .417395 .990997 .0303349 cmyk
f
104.673 307.602 mo
96.6942 308.409 li
96.5174 306.661 li
104.496 305.854 li
104.673 307.602 li
f
110.138 401.441 mo
109.047 390.661 li
112.761 390.285 li
112.906 390.762 li
110.138 401.441 li
.101656 .282567 .653437 0 cmyk
f
109.047 390.661 mo
100.684 308.005 li
104.673 307.602 li
110.797 368.121 li
110.797 383.744 li
112.378 383.744 li
112.384 383.802 li
110.797 383.802 li
112.761 390.285 li
109.047 390.661 li
100.507 306.258 mo
100.287 304.082 li
104.276 303.678 li
104.496 305.854 li
100.507 306.258 li
101.682 296.339 mo
101.738 296.334 101.794 296.332 101.85 296.332 cv
101.794 296.332 101.738 296.334 101.682 296.339 cv
101.856 296.332 mo
101.854 296.332 101.852 296.332 101.851 296.332 cv
101.851 296.332 li
101.852 296.332 101.854 296.332 101.856 296.332 cv
.775296 .449622 .339361 .0697642 cmyk
f
100.11 302.334 mo
99.5252 296.557 li
101.661 296.341 li
101.668 296.34 101.675 296.34 101.682 296.339 cv
101.738 296.334 101.794 296.332 101.85 296.332 cv
101.85 296.332 101.85 296.332 101.851 296.332 cv
101.852 296.332 101.854 296.332 101.856 296.332 cv
102.798 296.334 103.605 297.049 103.702 298.008 cv
104.099 301.93 li
100.11 302.334 li
.0715648 .787442 .611444 .00274662 cmyk
f
100.287 304.082 mo
100.11 302.334 li
104.099 301.93 li
104.276 303.678 li
100.287 304.082 li
.29041 .452888 1 .0762646 cmyk
f
100.684 308.005 mo
100.507 306.258 li
104.496 305.854 li
104.673 307.602 li
100.684 308.005 li
f
120.162 383.744 mo
110.797 383.744 li
110.797 298.08 li
120.162 298.08 li
120.162 383.744 li
0 .756069 .53933 0 cmyk
f
118.075 291.985 mo
112.884 291.985 li
112.884 298.08 li
118.075 298.08 li
118.075 291.985 li
.00708019 .278782 .682246 0 cmyk
f
117.308 393.223 mo
113.652 393.223 li
110.797 383.802 li
120.162 383.802 li
117.308 393.223 li
.129427 .131044 0 0 cmyk
f
116.49 396.614 mo
115.48 400.048 li
114.469 396.614 li
114.469 393.223 li
116.49 393.223 li
116.49 396.614 li
.275059 .239384 .108766 0 cmyk
f
125.173 325.024 mo
123.077 325.024 li
123.077 305.084 li
123.077 303.477 121.769 302.17 120.162 302.17 cv
120.162 300.074 li
122.924 300.074 125.173 302.322 125.173 305.084 cv
125.173 325.024 li
.00708019 .278782 .682246 0 cmyk
f
117.308 393.223 mo
115.48 393.223 li
115.48 383.802 li
120.162 383.802 li
117.308 393.223 li
.123873 .814115 .578882 .00921645 cmyk
f
115.48 400.048 mo
115.48 393.223 li
116.49 393.223 li
116.49 396.614 li
115.48 400.048 li
.228428 .836332 .646754 .0906081 cmyk
f
115.48 400.048 mo
114.469 396.614 li
114.469 393.223 li
115.48 393.223 li
115.48 400.048 li
f
115.48 393.223 mo
113.652 393.223 li
112.761 390.285 li
110.797 383.802 li
115.48 383.802 li
115.48 393.223 li
.123873 .814115 .578882 .00921645 cmyk
f
120.162 383.744 mo
115.48 383.744 li
120.162 383.744 li
120.162 302.17 li
120.162 302.17 li
120.162 383.744 li
120.169 300.074 mo
120.167 300.074 120.164 300.074 120.162 300.074 cv
120.162 298.08 li
118.075 298.08 li
118.075 291.985 li
118.075 298.08 li
120.162 298.08 li
120.162 300.074 li
120.164 300.074 120.166 300.074 120.169 300.074 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m
/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m
/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m
/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m/i,`m
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/i,`m/i,`m/i5io0/Prp0/Q#r0/c)r0Ju5u0Jl2u0Jl2u0K)B#0K)B#0K2K%0KDT&0K;Q&0KMZ'0f_f*
0fqo+1-A,.1-A//1-A511HS>31HSA42*=\82*F_82*Fe:2*Xn;2F(+>2F14@2F1:B2aLCC2aUID3($^H
3($aI3^d'M3^m0O3_*?R3_*?R4%<HT4%EQV4%ETW4%EZY4@ii[4A'#^4\K2`4\T;b4\fJe5>>\h5>Gej
5Ybnk5Yl"m5u;4p5uDCt6;_Lu6;_S"6;h\$5uV\&6W7q)6r\.,6re:/79"=/794R479Fa779Oj979b!<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+
/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P+/M/P,/hSb/
/hSe10/"t30/"t30/"t30/"t30/#"50JG490ekC;1,:U?1,CaD1c.$G1c.'I2)R6K2E!HO2`EZS2`NfX
3B9)[3B9,]3]];_3]]>a4$,Md4?P_g4?Ykl5!D1q5<hCu5X7V$5s[e&5s[e&6:4+-6UO706psF26psF2
~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,C^B1G^gC
1c7-J1c.!E1c.'I2)[?O3&ilW3B9)[3BB5`4$,Mc4$,Mb3]fDc4?P_h5!D1q5X7S"5X7V$6:+"*6:4+.
6q'R77Rfj:7Rfj:7Rfm<84Z<E8kVfN9he>V9he>V:/4S\:f'tb:f'tc;,U:i;H$Ln<)cgr<)lt#=BJ^0
~>
<~5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s
5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<h@s5<qJ!5X7V%
6:!n)6psF277BX677Ka97Rfj:7Rfm=84Z9B8P)NI9MA/U:/=Y]:JXe`:f'tb;,L4i;c?Un<)cju<``@)
=BSd0=]np4>[1Q??=.&H?smAM?t!JQ@Uiq[AS#FaAnG[gBPD3rCMRa'D/O60DfBZ8EcQ2@FEMbMGB\7T
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
120.162 383.744 mo
115.48 383.744 li
115.48 298.08 li
118.075 298.08 li
120.162 298.08 li
120.162 300.074 li
120.162 300.074 120.162 300.074 120.162 300.074 cv
120.162 302.17 li
120.162 302.17 120.162 302.17 120.162 302.17 cv
120.162 383.744 li
.0715648 .787442 .611444 .00274662 cmyk
f
118.075 298.08 mo
115.48 298.08 li
115.48 291.985 li
118.075 291.985 li
118.075 298.08 li
.111269 .332403 .727382 0 cmyk
f
123.077 305.084 mo
123.077 305.049 123.076 305.014 123.075 304.98 cv
123.076 305.014 123.077 305.049 123.077 305.084 cv
123.077 305.084 li
123.074 304.953 mo
123.073 304.936 123.072 304.919 123.071 304.902 cv
123.072 304.919 123.073 304.936 123.074 304.953 cv
123.071 304.898 mo
122.974 303.379 121.71 302.173 120.167 302.17 cv
121.71 302.173 122.974 303.379 123.071 304.898 cv
125.168 304.858 mo
125.051 302.238 122.91 300.134 120.275 300.075 cv
122.91 300.134 125.051 302.238 125.168 304.858 cv
120.272 300.075 mo
120.267 300.075 120.263 300.075 120.259 300.075 cv
120.263 300.075 120.267 300.075 120.272 300.075 cv
120.258 300.075 mo
120.253 300.075 120.248 300.075 120.243 300.075 cv
120.248 300.075 120.253 300.075 120.258 300.075 cv
120.237 300.074 mo
120.234 300.074 120.23 300.074 120.227 300.074 cv
120.23 300.074 120.234 300.074 120.237 300.074 cv
120.224 300.074 mo
120.214 300.074 120.204 300.074 120.194 300.074 cv
120.204 300.074 120.215 300.074 120.224 300.074 cv
120.186 300.074 mo
120.183 300.074 120.181 300.074 120.178 300.074 cv
120.181 300.074 120.183 300.074 120.186 300.074 cv
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
125.173 325.024 mo
123.077 325.024 li
123.077 305.084 li
123.077 305.084 li
123.077 305.049 123.076 305.014 123.075 304.98 cv
123.074 304.971 123.074 304.962 123.074 304.953 cv
123.073 304.936 123.072 304.919 123.071 304.902 cv
123.071 304.9 123.071 304.899 123.071 304.898 cv
122.974 303.379 121.71 302.173 120.167 302.17 cv
120.166 302.17 120.164 302.17 120.162 302.17 cv
120.162 302.17 li
120.162 302.17 li
120.162 302.17 120.162 302.17 120.162 302.17 cv
120.162 300.074 li
120.162 300.074 120.162 300.074 120.162 300.074 cv
120.164 300.074 120.167 300.074 120.169 300.074 cv
120.172 300.074 120.175 300.074 120.178 300.074 cv
120.181 300.074 120.183 300.074 120.186 300.074 cv
120.189 300.074 120.191 300.074 120.194 300.074 cv
120.204 300.074 120.214 300.074 120.224 300.074 cv
120.225 300.074 120.226 300.074 120.227 300.074 cv
120.23 300.074 120.234 300.074 120.237 300.074 cv
120.239 300.075 120.241 300.075 120.243 300.075 cv
120.248 300.075 120.253 300.075 120.258 300.075 cv
120.259 300.075 li
120.263 300.075 120.267 300.075 120.272 300.075 cv
120.273 300.075 120.274 300.075 120.275 300.075 cv
122.91 300.134 125.051 302.238 125.168 304.858 cv
125.171 304.933 125.173 305.009 125.173 305.084 cv
125.173 325.024 li
.111269 .332403 .727382 0 cmyk
f
134.517 387.063 mo
125.197 386.147 li
133.573 300.893 li
142.894 301.809 li
134.517 387.063 li
.235325 .417395 .990997 .0303349 cmyk
f
141.413 295.54 mo
136.246 295.032 li
135.65 301.097 li
140.817 301.605 li
141.413 295.54 li
.22919 .609857 .772549 .0715038 cmyk
f
130.749 396.217 mo
127.11 395.859 li
125.191 386.204 li
134.511 387.12 li
130.749 396.217 li
.129427 .131044 0 0 cmyk
f
129.603 399.511 mo
128.262 402.83 li
127.593 399.314 li
127.924 395.939 li
129.935 396.137 li
129.603 399.511 li
.275059 .239384 .108766 0 cmyk
f
145.245 329.114 mo
143.159 328.909 li
145.109 309.065 li
145.266 307.466 144.093 306.037 142.493 305.879 cv
142.698 303.793 li
145.448 304.064 147.465 306.521 147.195 309.27 cv
145.245 329.114 li
.22919 .609857 .772549 .0715038 cmyk
f
128.262 402.83 mo
128.262 402.83 li
128.262 402.83 li
128.262 402.83 li
130.749 396.217 mo
129.935 396.137 li
129.348 396.079 li
130.749 396.217 li
134.511 387.12 li
130.749 396.217 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT
7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT
7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT
7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT7Y1RT
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~7Y1RT7Y1RT7Y:XV7Y:XV7Y:XV7Y:XV7tL[V7tL[V7tL[V7tUaX7tUaX7tgm[7tgm[7tgm[7Y^p\7tps\
7tps\7u.*_7u%$^7u%$^8;@-_8;@-_8Vd<b8;R9c8;R9c8;R9c8W!Hf8W!Hf8W!Hf8W!Hf8;mKg8W*Nh
8W*Nh8rN]k8WE`l8WE`l8WE`l8rioo8rioo8r`io8r`io8rruq8rruq8s'&s8s0,u8s0,u99B/u8s93"
99K6"99K6"99]B%99fH&99fH'99fH'99oN)99oN)9U5W*9pP`,9pP`,9pP`,9UGc.9pkr19pkr19pu#2
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.462989 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77B[87Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:7n6'>7n?0A84Q0?7n6*@84Z9B84Z9B84Z9B84cBE
8OuBC84Z<D8P)KF8P)KF8P)KF8P)KF8P2TI8kM]J8kM]J8kM]J8kM]J8kM]K92&#Q9MA,R9MA,R9MA,R
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:W9&JUrB'
JUrB'J:N0#JUrB'JV&N,K7ef0KnY57KS5&6L5(D9KnY57Knb>;LPLY?LPL\ALkpkCLkpnFMMd:JM2I1K
N/W^SN/WaUNK&pWN/WaVNfK-\O-#HbOH>QcOcbcgOH>TfPEV2oPEV2pPa%DsPa%DsPa%DsQ'Rc'Q^=),
~>
255 <~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'c%Q#()@Z$
()@Z$()@Z$(Ddl((Dmu+(`4),(`4),(`4,.)&X;0)&X;0)&aD4)]K_8)]Kb:*#oq<*#oq<*??.@*?H7C
*Zc@D*ZcCF+!2UJ+<VdL+<VdM+X/*S+sJ3U,9nEX,9nHZ,U=Z^,paia-71&d-7:/g-RU8h-n$Mn.4H\p
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
130.749 396.217 mo
129.348 396.079 li
128.93 396.038 li
129.851 386.662 li
134.511 387.12 li
130.749 396.217 li
.318486 .481971 1 .11313 cmyk
f
128.262 402.83 mo
128.262 402.83 li
128.93 396.038 li
129.348 396.079 li
129.935 396.137 li
129.603 399.511 li
128.262 402.83 li
.378424 .526787 1 .207858 cmyk
f
128.262 402.83 mo
127.593 399.314 li
128.262 402.83 li
128.262 402.83 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
128.93 396.038 mo
127.924 395.939 li
127.11 395.859 li
125.191 386.204 li
129.851 386.662 li
128.93 396.038 li
.318486 .481971 1 .11313 cmyk
f
128.262 402.83 mo
127.593 399.314 li
127.924 395.939 li
128.93 396.038 li
128.262 402.83 li
.378424 .526787 1 .207858 cmyk
f
145.245 329.114 mo
143.159 328.909 li
145.245 329.114 li
147.195 309.27 li
147.465 306.521 145.448 304.064 142.699 303.793 cv
142.71 303.675 li
142.699 303.793 li
145.448 304.064 147.465 306.521 147.195 309.27 cv
145.245 329.114 li
145.101 308.421 mo
145.101 308.419 145.101 308.417 145.101 308.415 cv
145.101 308.417 145.101 308.419 145.101 308.421 cv
145.099 308.403 mo
145.099 308.401 145.098 308.398 145.098 308.395 cv
145.098 308.398 145.099 308.401 145.099 308.403 cv
145.097 308.385 mo
144.918 307.079 143.862 306.014 142.494 305.88 cv
142.494 305.879 li
143.862 306.014 144.918 307.079 145.097 308.385 cv
142.894 301.809 mo
138.234 301.351 li
140.817 301.605 li
141.413 295.54 li
140.817 301.605 li
142.894 301.809 li
142.894 301.809 li
141.413 295.54 mo
138.83 295.286 li
138.83 295.286 li
141.413 295.54 li
level3{
gsave
clp
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.06162e-14 -500 500 3.06162e-14 250 500 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
134.517 387.063 mo
134.517 387.063 li
129.857 386.605 li
138.234 301.351 li
142.894 301.809 li
142.71 303.675 li
142.699 303.793 li
142.698 303.793 142.699 303.793 142.698 303.793 cv
142.493 305.879 li
142.494 305.879 142.494 305.879 142.494 305.879 cv
142.494 305.88 li
142.494 305.88 142.494 305.88 142.494 305.88 cv
134.517 387.063 li
.29041 .452888 1 .0762646 cmyk
f
140.817 301.605 mo
138.234 301.351 li
138.83 295.286 li
141.413 295.54 li
140.817 301.605 li
.276951 .633356 .78732 .135988 cmyk
f
145.245 329.114 mo
143.159 328.909 li
145.109 309.065 li
145.131 308.846 145.127 308.631 145.101 308.421 cv
145.101 308.419 145.101 308.417 145.101 308.415 cv
145.1 308.411 145.1 308.407 145.099 308.403 cv
145.099 308.401 145.098 308.398 145.098 308.395 cv
145.098 308.392 145.097 308.389 145.097 308.385 cv
144.918 307.079 143.862 306.014 142.494 305.879 cv
142.494 305.879 142.494 305.879 142.493 305.879 cv
142.698 303.793 li
142.699 303.793 142.698 303.793 142.699 303.793 cv
145.448 304.064 147.465 306.521 147.195 309.27 cv
145.245 329.114 li
f
150.306 403.931 mo
95.7509 403.931 li
95.7509 383.612 li
150.306 383.612 li
150.306 403.931 li
cp
.779202 .591241 .502647 .329534 cmyk
f
150.306 336.791 mo
95.7509 336.791 li
95.7509 326.798 li
150.306 326.798 li
150.306 336.791 li
cp
f
150.306 344.156 mo
95.7509 344.156 li
95.7509 340.912 li
150.306 340.912 li
150.306 344.156 li
cp
f
138.874 387.812 mo
141.682 387.812 li
141.682 330.362 li
138.874 330.362 li
138.874 387.812 li
cp
130.249 387.812 mo
133.057 387.812 li
133.057 330.362 li
130.249 330.362 li
130.249 387.812 li
cp
147.498 330.362 mo
147.498 387.812 li
150.306 387.812 li
150.306 330.362 li
147.498 330.362 li
cp
95.751 387.812 mo
98.5589 387.812 li
98.5589 330.362 li
95.751 330.362 li
95.751 387.812 li
cp
121.625 387.812 mo
124.433 387.812 li
124.433 330.362 li
121.625 330.362 li
121.625 387.812 li
cp
104.375 387.812 mo
107.184 387.812 li
107.184 330.362 li
104.375 330.362 li
104.375 387.812 li
cp
113 387.812 mo
115.808 387.812 li
115.808 330.362 li
113 330.362 li
113 387.812 li
cp
f
215.338 401.43 mo
109.12 401.43 li
109.12 382.338 li
215.338 382.338 li
218.966 382.338 221.908 385.279 221.908 388.908 cv
221.908 394.859 li
221.908 398.488 218.966 401.43 215.338 401.43 cv
cp
.0779431 .0682383 .132265 0 cmyk
f
220.128 383.82 mo
109.12 383.82 li
109.12 383.32 li
220.128 383.32 li
220.128 383.82 li
cp
.148653 .13901 .253941 0 cmyk
f
220.128 386.195 mo
109.12 386.195 li
109.12 385.695 li
220.128 385.695 li
220.128 386.195 li
cp
f
221.908 388.57 mo
109.12 388.57 li
109.12 388.07 li
221.908 388.07 li
221.908 388.57 li
cp
f
221.908 390.946 mo
109.12 390.946 li
109.12 390.446 li
221.908 390.446 li
221.908 390.946 li
cp
f
221.908 393.321 mo
109.12 393.321 li
109.12 392.821 li
221.908 392.821 li
221.908 393.321 li
cp
f
221.908 395.696 mo
109.12 395.696 li
109.12 395.196 li
221.908 395.196 li
221.908 395.696 li
cp
f
220.128 398.072 mo
109.12 398.072 li
109.12 397.572 li
220.128 397.572 li
220.128 398.072 li
cp
f
220.128 400.447 mo
109.12 400.447 li
109.12 399.947 li
220.128 399.947 li
220.128 400.447 li
cp
f
212.362 403.931 mo
106.41 403.931 li
106.41 401.43 li
212.362 401.43 li
217.626 401.43 221.908 397.148 221.908 391.884 cv
221.908 386.621 217.626 382.338 212.362 382.338 cv
106.41 382.338 li
106.41 379.836 li
212.362 379.836 li
219.005 379.836 224.41 385.241 224.41 391.884 cv
224.41 398.527 219.005 403.931 212.362 403.931 cv
cp
0 .756069 .53933 0 cmyk
f
287.742 133.089 mo
285.86 127.043 li
288.065 119.959 li
285.86 112.876 li
287.742 106.829 li
210.174 106.829 li
212.056 112.876 li
209.851 119.959 li
212.056 127.043 li
210.174 133.089 li
287.742 133.089 li
cp
.779202 .591241 .502647 .329534 cmyk
f
.779202 .591241 .502647 .329534 cmyk
%%IncludeResource: font BebasNeue
/NDPWEO+BebasNeue /BebasNeue findfont ct_VMDictPut/NDPWEO+BebasNeue*1 [68{/.notdef}rp /D 15{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h 9{/.notdef}rp /r /s 5{/.notdef}rp /y 91{/.notdef}rp /quoteright 42{/.notdef}rp]NDPWEO+BebasNeue nfNDPWEO+BebasNeue*1 [52.6838 0 0 -52.6838 0 0 ]msf163.916 208.499 mo(Teachers\325)[18.7549 19.3877 21.3906 20.334 22.4961 19.3867 21.1797 19.4395 0 ]xsh219.417 254.066 mo(Day)[21.4424 18.8604 0 ]xsh%%IncludeResource: font BebasNeueBook
/NDPWEP+BebasNeueBook /BebasNeueBook findfont ct_VMDictPut/NDPWEP+BebasNeueBook*1 [87{/.notdef}rp /W 12{/.notdef}rp /d 7{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 141{/.notdef}rp]NDPWEP+BebasNeueBook nfNDPWEP+BebasNeueBook*1 [35.0514 0 0 -35.0514 0 0 ]msf206.624 163.204 mo(World)[23.835 16.0527 16.2285 14.4414 0 ]xsh.104433 .153933 .196323 0 cmyk
%%IncludeResource: font Milkshake
/NDPWEQ+Milkshake /Milkshake findfont ct_VMDictPut/NDPWEQ+Milkshake*1 [72{/.notdef}rp /H 24{/.notdef}rp /a 14{/.notdef}rp /p 14{/.notdef}rp /y.end 128{/.notdef}rp]NDPWEQ+Milkshake nfNDPWEQ+Milkshake*1 [20.5371 0 0 -20.5371 0 0 ]msf219.108 124.315 mo(Happ\177)[19.6953 9.75488 9.5498 9.5498 0 ]xsh289.573 117.561 mo
290.363 119.959 li
289.573 122.357 li
314.311 122.357 li
314.311 166.715 li
319.107 166.715 li
319.107 117.561 li
289.573 117.561 li
cp
.235325 .417395 .990997 .0303349 cmyk
f
183.605 122.357 mo
208.343 122.357 li
207.553 119.959 li
208.343 117.561 li
178.809 117.561 li
178.809 166.715 li
183.605 166.715 li
183.605 122.357 li
cp
f
214.083 241.511 mo
183.605 241.511 li
183.605 213.032 li
178.809 213.032 li
178.809 246.307 li
214.083 246.307 li
214.083 241.511 li
cp
f
314.311 241.511 mo
283.833 241.511 li
283.833 246.307 li
319.107 246.307 li
319.107 213.032 li
314.311 213.032 li
314.311 241.511 li
cp
f
260.104 467.949 mo
259.672 468.392 259.301 468.88 258.996 469.402 cv
258.53 469.161 li
258.463 468.863 258.181 468.658 257.872 468.695 cv
257.541 468.734 257.304 469.033 257.343 469.364 cv
257.382 469.695 257.682 469.932 258.012 469.893 cv
258.196 469.841 li
258.647 470.075 li
258.396 470.629 258.215 471.214 258.108 471.819 cv
258.855 471.951 li
259.085 470.645 259.704 469.444 260.647 468.478 cv
260.104 467.949 li
cp
.35877 .201297 .147463 0 cmyk
f
265.592 465.647 mo
265.421 465.647 265.251 465.653 265.082 465.664 cv
265.008 465.038 li
265.196 464.888 265.304 464.648 265.274 464.393 cv
265.228 464 264.872 463.719 264.479 463.765 cv
264.086 463.811 263.805 464.167 263.851 464.56 cv
263.881 464.814 264.04 465.022 264.255 465.124 cv
264.329 465.748 li
263.615 465.864 262.926 466.08 262.269 466.394 cv
262.596 467.078 li
263.53 466.631 264.538 466.405 265.592 466.405 cv
266.088 466.405 266.584 466.458 267.067 466.562 cv
267.227 465.822 li
266.692 465.706 266.142 465.647 265.592 465.647 cv
cp
f
272.194 468.194 mo
272.525 468.153 272.76 467.852 272.72 467.522 cv
272.679 467.191 272.378 466.956 272.047 466.996 cv
271.738 467.034 271.512 467.3 271.517 467.605 cv
271.101 467.968 li
270.684 467.538 270.212 467.155 269.694 466.829 cv
269.29 467.47 li
270.424 468.185 271.31 469.196 271.853 470.395 cv
272.544 470.083 li
272.293 469.529 271.976 469.011 271.601 468.538 cv
272.004 468.187 li
272.194 468.194 li
cp
f
265.044 475.855 mo
264.658 475.878 264.269 475.89 263.887 475.89 cv
263.007 475.89 262.154 475.829 261.409 475.711 cv
261.018 475.649 260.563 475.556 260.138 475.419 cv
261.185 477.28 263.208 478.544 265.527 478.544 cv
268.382 478.544 270.789 476.628 271.476 474.04 cv
270.795 474.489 269.971 474.865 269.018 475.163 cv
267.839 475.53 266.463 475.77 265.044 475.855 cv
cp
f
268.17 472.769 mo
267.42 472.769 266.809 472.159 266.809 471.409 cv
266.809 470.659 267.42 470.049 268.17 470.049 cv
268.92 470.049 269.53 470.659 269.53 471.409 cv
269.53 472.159 268.92 472.769 268.17 472.769 cv
cp
263.432 473.678 mo
262.412 473.678 261.583 472.848 261.583 471.828 cv
261.583 470.808 262.412 469.978 263.432 469.978 cv
264.452 469.978 265.282 470.808 265.282 471.828 cv
265.282 472.848 264.452 473.678 263.432 473.678 cv
cp
265.592 467.163 mo
262.239 467.163 259.512 469.829 259.512 473.106 cv
259.512 473.532 259.558 473.955 259.649 474.368 cv
260.323 474.85 262.355 475.258 264.997 475.099 cv
267.876 474.925 270.294 474.141 271.669 472.94 cv
271.663 472.745 271.648 472.55 271.624 472.358 cv
271.244 469.396 268.65 467.163 265.592 467.163 cv
cp
f
281.595 469.03 mo
281.3 468.914 280.79 468.721 280.213 468.793 cv
279.662 468.861 279.369 469.133 279.369 469.799 cv
279.369 470.665 li
281.597 470.665 li
281.597 472.382 li
279.369 472.382 li
279.369 477.837 li
277.437 477.837 li
277.437 472.382 li
276.098 472.382 li
276.098 470.665 li
277.437 470.665 li
277.437 469.777 li
277.437 468.097 278.333 466.994 280.006 466.994 cv
280.648 466.994 281.163 467.116 281.595 467.302 cv
281.595 469.03 li
cp
f
286.298 472.362 mo
286.121 472.332 285.94 472.316 285.772 472.316 cv
284.876 472.316 284.262 472.864 284.262 473.929 cv
284.262 477.837 li
282.33 477.837 li
282.33 470.665 li
284.203 470.665 li
284.203 471.45 li
284.654 470.776 285.342 470.473 286.223 470.473 cv
286.638 470.473 287.071 470.6 287.317 470.81 cv
286.298 472.362 li
cp
f
288.851 473.574 mo
292.026 473.574 li
291.848 472.656 291.293 472.138 290.464 472.138 cv
289.554 472.138 289.021 472.686 288.851 473.574 cv
cp
293.965 474.24 mo
293.965 474.462 293.95 474.729 293.928 474.892 cv
288.843 474.892 li
289.05 475.928 289.776 476.379 290.686 476.379 cv
291.308 476.379 291.981 476.128 292.499 475.691 cv
293.632 476.934 li
292.818 477.682 291.782 478.022 290.575 478.022 cv
288.377 478.022 286.852 476.527 286.852 474.27 cv
286.852 472.012 288.333 470.473 290.479 470.473 cv
292.544 470.473 293.958 472.005 293.965 474.24 cv
cp
f
296.504 473.574 mo
299.679 473.574 li
299.501 472.656 298.946 472.138 298.117 472.138 cv
297.207 472.138 296.674 472.686 296.504 473.574 cv
cp
301.618 474.24 mo
301.618 474.462 301.603 474.729 301.581 474.892 cv
296.497 474.892 li
296.704 475.928 297.429 476.379 298.339 476.379 cv
298.961 476.379 299.635 476.128 300.153 475.691 cv
301.285 476.934 li
300.471 477.682 299.435 478.022 298.228 478.022 cv
296.03 478.022 294.506 476.527 294.506 474.27 cv
294.506 472.012 295.986 470.473 298.132 470.473 cv
300.197 470.473 301.611 472.005 301.618 474.24 cv
cp
f
304.287 474.248 mo
304.287 475.38 305.035 476.224 306.13 476.224 cv
307.27 476.224 307.98 475.343 307.98 474.248 cv
307.98 473.152 307.27 472.271 306.13 472.271 cv
305.035 472.271 304.287 473.115 304.287 474.248 cv
cp
309.964 474.248 mo
309.964 476.401 308.469 478.022 306.493 478.022 cv
305.53 478.022 304.85 477.645 304.383 477.09 cv
304.383 480.798 li
302.459 480.798 li
302.459 470.665 li
304.346 470.665 li
304.346 471.457 li
304.813 470.872 305.501 470.473 306.485 470.473 cv
308.469 470.473 309.964 472.094 309.964 474.248 cv
cp
f
312.808 477.837 mo
310.877 477.837 li
310.877 470.665 li
312.808 470.665 li
312.808 477.837 li
cp
313.067 468.319 mo
313.067 469.015 312.527 469.548 311.831 469.548 cv
311.136 469.548 310.603 469.015 310.603 468.319 cv
310.603 467.623 311.136 467.076 311.831 467.076 cv
312.527 467.076 313.067 467.623 313.067 468.319 cv
cp
f
316.032 473.219 mo
318.734 470.665 li
321.102 470.665 li
317.623 474.04 li
321.124 477.837 li
318.748 477.837 li
316.032 474.936 li
316.032 477.837 li
314.1 477.837 li
314.1 467.179 li
316.032 467.179 li
316.032 473.219 li
cp
f
184.412 475.853 mo
184.412 472.646 li
184.017 472.03 183.168 471.503 182.288 471.503 cv
180.868 471.503 180.018 472.675 180.018 474.242 cv
180.018 475.81 180.868 476.967 182.288 476.967 cv
183.168 476.967 184.017 476.469 184.412 475.853 cv
cp
184.412 477.772 mo
184.412 476.717 li
183.885 477.435 183.021 477.948 182.025 477.948 cv
180.179 477.948 178.876 476.542 178.876 474.242 cv
178.876 471.986 180.165 470.522 182.025 470.522 cv
182.977 470.522 183.841 470.99 184.412 471.767 cv
184.412 468.002 li
185.511 468.002 li
185.511 477.772 li
184.412 477.772 li
cp
f
190.403 471.43 mo
188.894 471.43 188.148 472.704 188.089 473.788 cv
192.732 473.788 li
192.718 472.733 192.015 471.43 190.403 471.43 cv
cp
186.932 474.228 mo
186.932 472.177 188.397 470.522 190.418 470.522 cv
192.557 470.522 193.816 472.192 193.816 474.315 cv
193.816 474.594 li
188.089 474.594 li
188.177 475.927 189.114 477.04 190.638 477.04 cv
191.443 477.04 192.264 476.717 192.82 476.146 cv
193.347 476.864 li
192.644 477.567 191.693 477.948 190.535 477.948 cv
188.44 477.948 186.932 476.439 186.932 474.228 cv
cp
f
194.607 476.835 mo
195.178 476.044 li
195.647 476.586 196.541 477.055 197.507 477.055 cv
198.591 477.055 199.177 476.542 199.177 475.839 cv
199.177 474.125 194.798 475.18 194.798 472.557 cv
194.798 471.459 195.749 470.522 197.434 470.522 cv
198.635 470.522 199.485 470.976 200.056 471.547 cv
199.543 472.309 li
199.119 471.796 198.342 471.415 197.434 471.415 cv
196.467 471.415 195.867 471.899 195.867 472.528 cv
195.867 474.081 200.246 473.056 200.246 475.81 cv
200.246 476.996 199.294 477.948 197.463 477.948 cv
196.306 477.948 195.325 477.596 194.607 476.835 cv
cp
f
201.667 477.772 mo
201.667 470.697 li
202.766 470.697 li
202.766 477.772 li
201.667 477.772 li
cp
201.477 468.954 mo
201.477 468.544 201.814 468.207 202.209 468.207 cv
202.619 468.207 202.956 468.544 202.956 468.954 cv
202.956 469.365 202.619 469.687 202.209 469.687 cv
201.814 469.687 201.477 469.365 201.477 468.954 cv
cp
f
209.709 475.736 mo
209.709 472.646 li
209.328 472.03 208.478 471.503 207.599 471.503 cv
206.178 471.503 205.329 472.631 205.329 474.198 cv
205.329 475.751 206.178 476.893 207.599 476.893 cv
208.478 476.893 209.328 476.352 209.709 475.736 cv
cp
204.582 479.589 mo
205.138 478.768 li
205.724 479.471 206.428 479.735 207.438 479.735 cv
208.61 479.735 209.709 479.164 209.709 477.611 cv
209.709 476.6 li
209.196 477.318 208.332 477.86 207.335 477.86 cv
205.49 477.86 204.186 476.483 204.186 474.198 cv
204.186 471.928 205.475 470.522 207.335 470.522 cv
208.288 470.522 209.137 470.99 209.709 471.767 cv
209.709 470.697 li
210.807 470.697 li
210.807 477.567 li
210.807 479.911 209.167 480.643 207.438 480.643 cv
206.237 480.643 205.417 480.409 204.582 479.589 cv
cp
f
217.413 477.772 mo
217.413 473.143 li
217.413 471.899 216.783 471.503 215.831 471.503 cv
214.967 471.503 214.147 472.03 213.737 472.602 cv
213.737 477.772 li
212.638 477.772 li
212.638 470.697 li
213.737 470.697 li
213.737 471.723 li
214.235 471.137 215.201 470.522 216.256 470.522 cv
217.735 470.522 218.512 471.269 218.512 472.807 cv
218.512 477.772 li
217.413 477.772 li
cp
f
223.404 471.43 mo
221.895 471.43 221.148 472.704 221.09 473.788 cv
225.733 473.788 li
225.718 472.733 225.015 471.43 223.404 471.43 cv
cp
219.932 474.228 mo
219.932 472.177 221.397 470.522 223.419 470.522 cv
225.557 470.522 226.817 472.192 226.817 474.315 cv
226.817 474.594 li
221.09 474.594 li
221.178 475.927 222.115 477.04 223.638 477.04 cv
224.444 477.04 225.264 476.717 225.821 476.146 cv
226.348 476.864 li
225.645 477.567 224.693 477.948 223.536 477.948 cv
221.441 477.948 219.932 476.439 219.932 474.228 cv
cp
f
233.35 475.853 mo
233.35 472.646 li
232.954 472.03 232.105 471.503 231.226 471.503 cv
229.805 471.503 228.956 472.675 228.956 474.242 cv
228.956 475.81 229.805 476.967 231.226 476.967 cv
232.105 476.967 232.954 476.469 233.35 475.853 cv
cp
233.35 477.772 mo
233.35 476.717 li
232.823 477.435 231.958 477.948 230.962 477.948 cv
229.117 477.948 227.813 476.542 227.813 474.242 cv
227.813 471.986 229.102 470.522 230.962 470.522 cv
231.914 470.522 232.779 470.99 233.35 471.767 cv
233.35 468.002 li
234.448 468.002 li
234.448 477.772 li
233.35 477.772 li
cp
f
242.9 476.967 mo
244.335 476.967 245.185 475.81 245.185 474.242 cv
245.185 472.675 244.335 471.503 242.9 471.503 cv
242.036 471.503 241.171 472.03 240.79 472.646 cv
240.79 475.853 li
241.171 476.469 242.036 476.967 242.9 476.967 cv
cp
239.692 477.772 mo
239.692 468.002 li
240.79 468.002 li
240.79 471.767 li
241.362 470.99 242.211 470.522 243.178 470.522 cv
245.024 470.522 246.328 471.986 246.328 474.242 cv
246.328 476.542 245.024 477.948 243.178 477.948 cv
242.182 477.948 241.318 477.435 240.79 476.717 cv
240.79 477.772 li
239.692 477.772 li
cp
f
247.528 479.545 mo
247.69 479.618 247.953 479.662 248.129 479.662 cv
248.612 479.662 248.935 479.501 249.184 478.915 cv
249.653 477.846 li
246.694 470.697 li
247.88 470.697 li
250.238 476.498 li
252.582 470.697 li
253.783 470.697 li
250.238 479.208 li
249.814 480.233 249.096 480.629 248.158 480.643 cv
247.924 480.643 247.558 480.599 247.353 480.541 cv
247.528 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 ]]
] del_res
/NDPWEP+BebasNeueBook*1 uf/NDPWEQ+Milkshake*1 uf/NDPWEO+BebasNeue*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (World Teachers Day-3 up-02.eps)%%CreationDate: 08/08/18 2.47 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kl$B)HoC.)/hLeHX)P[?Xi"G'f9M@:jlmjP8&]FaqS2h\jfD\f0/neL/cL4F`a5NF(Uq<\=Wb_!>)Q,A;%se\if1O/77B?nj%=FEl!Y`^9C,=@.'kr]Q]"EejpN*IHHKq;=GjLV"aBj$T62.B;[id96t^',gqoj3_*q56(rnb%p98P\\f:c0QKGkFB?#Z0TQr(>(O%#<t3bV2j9l4+a0jKci4*`qf[uL!XU1P_>R.FEu,';LS[1,cTDF5a30'K5OC[,$'l'dGs.8-KeP93e/JtNukX2Ke>Ke#att!JIWed%UsJMUN')WgI[1JM'F?],)^`HZ^*2DPgk5us%^B(/j-@t(<DDF0;=6SoL0,2$hrU,`3hPT68lb*K-!h8S^i1RX%p=<;Jc7J)(tJkB%o`:k.&^)>:i@s$lobs#['RkkTc\V6^i#@9Bo.-eR(%H3M!(d8hrEm8!C*3i*F\bDX^n=2+SRL]%6]du?\:%-30q[r(:B&co<-b;d%BHV/t1dGjWJjpSb5`5Im!D-6e7o8IY]rHI4HPn#0?jTP38O(6t8WMi4,XJ1eN5A(hKA7:m3Vca3N?BB(,6TP*.%FicfodPf`*O]W%d(l_:UQ9\,&K?oWB.5@/s+:XJF,%Hgd9jT-5eNs#]cfU*eC*Lad38GN'gS8U2:?L]NI_GO;BQZ:O=!P:l"/n%>QW.TIESB3(_1p%%A5,l$Q6]SM9VA6O56MO5/s'n*Jc[65+K7VG+C,d%U*T8[/70K46Jt04Go$OY;)M#)HJF,(X7-s0J?Ok<LdtAVrX/.Y3dQ,o"0[c9%$b3#Z+QuN'6W7FK<7JaBH6(C07i^.F@ITS5XOia1]!A$44K^4#>oDj+#C=q:UoG^p(tWWoXd5U_)ULc9#h4F_!EBdI#uRB'FX2Ee%g-Cf(/^WYq`.<A!!%kd0Y>LL69+'6OJCY"Ujo-opPdV>-rG;g2@fq$!`p!=`=_e;f5Va9,W=lDC/`T?LBqTXghI'5qo`$S<([)?@%+'UqZ)uVE?NMZ]K`1DMI]=_;h8Ee*m!Y<V4fKTRlMMQ)i5C3FiYI_YrnL[:u=Q^uD0Q,DD9br)J]?p[Q.1'9_PD#ekq5&-6/A9\+%PcK5H/d.@6?mLNE2Z,3IOHGLo)UP=2d)H#n5mA*7TVESi9`/\s>^tB;Iu$W\`_7?Cr-j%F<-WgZZNEY94iNjFmPk-!_-$h6&I9G8%#@J&6!KZ#$!eSI=U1`CiKQ.7e&#cM9jada_@L4:h,+:CE-[!PPN]WTX=]<\>(Q@?W(fr3NPtHA!OoaEqmZLo:>-Dp_"EU[]2:+mn%WYdFsed%qmf+fS"@.eLs^5`pp=(ts8/V3VgfA`&]=5jH'kb6cF3e9=&m4?d=2Pd%qf;]2G,@\?:6J\>C1R7@XAJ@6pXKQ-3CiIsd%J]ZrfUk3KdWt.66Y^I`Memq.N$.WC2@=>L2(79peN9JZA^i\]<AN.U0L`mH5o]%$E8Hgn`+%_2,=tkb3JcUr9iFBYrn:M%']d?h_%m?bZ'T[Cdp^c_rcP%XF)6?4>,1LT?%Od?tqZP`a0\i:</oG+nkW.PZr!MY=m3Ip;0JPoQ_nQ$#8%L'Z1+d6=\_eakl6\E..]a/\1%N$(FA8!3F?:VjdC/bE4uQ(eRa=TZirXo.J8AEbtEs$(VT3p@fYLTeMB15I/qQBmFm.cF^WdK#0qMEL)=H;3)P`gj:L_;\Vj1+P!L%=P``id.^I>3q0K&&GSihkNBguB.:no8'pPg=eN[1^CU#Br!\tD^P.EM<-sBB#R6/7X]7&W5Uu[Qf3&Qc/Fbl0)0^#;%>Y,/4Kr_U%I4.Ar"mp1b`/N%G;C2kGVqKo;6'D,^jLJT82*?\F'LO\SF7d3RqB.ib,M2kRe+g)I?mmd]LtC@BUjufMa0>6/PJ/9UlH`MK9Cq'M%E<IH9XXRhS[]NP4QH$/lP`P>ObA\&.BgQ:p.+VA[@@Jkf,8rc&0H=ZZTNCFCA+CMdYehq<a>NTJ)iAFdAf`!Ag_Lm@aVNFpAEXIu%b/gF/-)'l;,%VG]@DlOZNkjj1;"CH*.R/3_a[NJC<%S]Ei#NuI[8mL+-;66nme5%%LUGRmqZ<X&<3n=a(ddZCk`L6V$Y<'*%/q`;%Hm45?&Zbf?fAjJNiEO2i<\!=<b^Bgn&&:"ET8QjneC9a)?5\.Pcp\QA6@XU^U@AtMMkO7_34QhE-.-:t;K-4*b/0E2=-.rjKPU3-%";_.V$Q"TuU+6XR'!ASf%fO8+_dh=[F9FW6(BU5(Z9\PB,Hqjd9+QS/6]g87$A$)r`Y-M4Q(pp>JDNY!R\iGk0f2OEE/!O%SUr@d%BCV5pObc?f.NJl4?RE_NIUO#U6j/9U9^j2,;S`e""'!)f+<pn!6Dl%pIj^%-#`U,u?n<#3_h>Nr30XiJ6^^b/PRHRiJfu!=E'P#Q%0OZ:7=,P*R=XM0%^nW#Fj*hU?j$3P`+Gou\`H%%dLDQXkR2irHpsT2<iC`&ZM6AU<*55ObJDs6.?'Yog/H\+)18%9SL<'qj**cXV%&01<i"]l>>0O,U3=L]3X6F^COc'JL!1kp!A_n^gg+Yb7k7%-[.;H^Lb(0!M`8gWF'V`;3='F[qj"Chlr!Kp*QL_Puq-*ruQ1fQkm%_FZB%_SmenIMm*`Y`K^F&._6n_FVO"815Jb7Ze^bYS])?Bi$K58LB:5/t>?M#54k0a`'5`L"S-n%Y\VY@Ob'+#qj80Jbs.6"oY0t%cI\9^#(uDD8C<#i_B5S1?kCR6JoCrD$>p-R'-s#gA6BIV1a*#(:P@((82h.C_!I.``el)Z#m,[Z=IcSp99:S;H:S[U%ZUsK7cKmk%"'Va$RrMiC6Kj.*V$g'A&)jbl&4m#,1ukKa-^-an07cGC6"!.dIUp;i>4j!oc`4l]5W-"8%#7PG$KQVG.L;>.`e"Z)%*Ppr)[;^$%JQQR;/4XZ@RXqFIJgFqeQ:$-eC-[[*+9G[uB*f4o',3tB%8t%C&a3"'.2U'%2OmDQ8R:5icA04%Jb=\d&cH93(B7qH"\XU/?[tNk%iGT)&eU:2-k]>0[,*:Eu_P$4DLU9l'G!-M*_gkD,?,P;Hka4m0N%g611Y;h=pi,?72uj?#W$*Y_5>=ujm-n]`)]E4a!W/f3+k.%<%9E=M,8d!iV!uG+uB*c!c"R_Em_<0B$E'+T":VmBV0G5NGP9:]_OsQJ8N)^)%/7jCK$c=*m@.Q_o%JHCq:(lIsZ=!d`TbR9XY\l*&%L2EODR'Ia#Tog7]WKEkm=V7k_QEe,t0IM"42)6W%W.8$u/a18J)st"MWJ@o#Rqgb]lfS&M`RSfX[^qcuiRLZ+DL?U(D6VsI[YRC>%NQhS6rXkP):f@u`$n3J.3mFD,&=0)DfS4@<Op#@#(n<f]J6n8$r-nh[>9O3)4K(<_E&<1V#Da+Q5m;6i]JpSa3"1rM$!L^Xs"U=7%p1DUO#>+,JQ(*.rPTUOG"NIq%La@"a?G)@=!kQX4Gg;LSIP!(+>2=[NV&g?H+L"nbg-?;olTMTXP)@-&e>TiFWM'S\<)-Qu"gDt+%1A$Y$$O+e1(,q?<oN24I4g>KX.iOjJS?D^@QNhclT410'0<^>9.]Nk^):h",A;](BRS#J4d]!!aVb+ml:55TNZNN1k]\s#Ydo9)M%q;\7t$a3.$hr\9;ZS[OKW4@L,<9K=+@U9OGN2M5g^G_O@?`*)_254`/G;mK7C'1:jOG$qG0Zsg:WC^udnGH^pH?)Ff[JC6"5+tQe%[F++>o@@HPbo`jF1.tehcn3d*rl5qA)4UPLSb*R=Za?DPcQ$+T!r4^WTeihM3/'obbYkAFl9I,na%+\)=J,h'-^Sq'^,If,AYEke%S4rdlK`)iP/n/aQ!ZG?$Wr'i5X<J1>\rbO1D9S3O#$#"qe>iLB.$=CY_J?GdR\!*'02ioSormAo!409.DtF-%a_&-ra9YLUFI*&H%*_![TE"8-POoj(D'Q=O*]+ja-bTu&6a@d>TW:#haX\&XhS!!)2!_lIRm;fu[dWRY//dL1nJ@ce?QNQ6+M>hZYi#3;H9+D5a;+gU,%8<l*jOFM_3'f$m(>nWrU./C;#P3G59eJ]=aLPT;B=X/bW2Ys-r!DcC:QPcDC%9@_Wm1$8jr'47N^6`"pj!Fu_VDY>]hCLS!_Ch9)%`4T)dHpoNrNim30hTO0@.VPk?@sbVuKIP\?]pDQ+M-a/\itEkj[TB=c7]6)U1-aMQXSq>BEms+AL&+'oQ*f=F283^0pc^Y7Jd&)q%WQb@lQ[?Sf:cW7"1Pu-^(=Saee:H'/lU%GnYG5o4NW(nW86/?8'sdL&N;]X+=^Qt-9^CnsB:^BR"taWQSprq^?A"QY:"/\-(PX,F%=mTkAFXELTS[h@d1@uF&@>qI>dEum/i1%IWYblEsF@Z1_ef?YqOL?`HqMjU$9sG#%o8/KQ6dYW94(-e0F]Q_c(^ZlpRZJ7oB-`/c%I&5_J=(>Q<K'#QMp]Z=ub8#A1&[cd`d*,Fq9cd7H212pac@rEEU"bc$Y<S5`[MF>>Gb,:890f$&^6!#6<Vsd'o'c6]\+/[3'9\Hh%NCTJQn`[a\nk!#NV3E/0J"'bjgY<6=+k*a,iNq<TB[sTJ?Y+];ZXM^cIt_!R_nB"Y&UiHn4(`B-LZl3G[Qj/QrMGX05Y!sHbe(#T%oreacAYn9R+.b0'"#hTE1&j_bL0M-X:"so^p@#ar[^0[0Rg*oAhE)VpCt*jiB.*.l1!f!9CYL2b[rqT9mYl\Tb3@KJ&R]qbkI-on%:bs+.Cq9jT_j>8Ni?lbRCYO,PK6a0F2UAbTV`%eJSdJ6%q-HjY.Y<=<C1Vj+pf#'p5C[TtQM>Z\r7pe&'=hS!Nkl=2pR8r8]q8+W%:!^iV..c;=j*-E0++J'4^:)9,AONpZnT=k\LA7;-DkBhjnc6i)Eq2-L9""=e/_jlHB&5(W\,d_RUW`MuQCPND9/4.:T)t%QDm2'9%S*AD:>AqB+CnfT=rtb5BSs3,/4diVG(=9]Ghf&s:ISB_CDuV`Ig>(3m-#&ppCXO"-DboehVMDA,#Mm5]Q!FJl`[6372&t'lcp6Us%r<4Ob/=Fthrqn&6ML`RJ`b,3H,JEL]]^O5]GggR7e9S$B/t:bOD.rFZ.8pA>Eg[]^7RKRN1H-t@is)"MJlks6]B3rSY5IIliCH3/%?`#[fr0YJSC\^-,rgutu9[crS>&2&&_qLTloVTamF+=#/1)%ALG1Z5cs3`tYgO9!*rVLE#iHEsf2CoRu03m6i-*l8`ZcF0R[a"_C%!Melcdr!hu;u\cQB%Cpu)fE4$s$n`e9AR&PVVT7[h8Ykd-dm)n^)\/*lJH46bSonmj#>82+,=W<^:)9,m5E7+>ddW32B-;[0ZtDQ%!*8HPq8O@dbY.!)RD.LsR3e%G?b16SrbXR=XC9:2g]EodPARW.s5PE"mFhKFL754pS6n+;>C9Q3)OgnSK<`*;QYauMr-SD;g-0nR%,9rD+f*jj1k&nAj02ll=p3<i\Gm=!:4`SR@9\P!SGb1IS1M,I2SUK8G[k4k'VIam_hfe]FX2'?nq"F+!Rt/NO4'K+!oX;)DCKe2Q%n@#Z@>@QE3Z.mR8RC7"QAY[lM[VU=I,A3J?s2eI:<im#&P\:LP@fOVDA=E:a'((q)psq--%@Q'pVNZG9`kF5rMa&8CrO9ML<>PTI%Up@r=H<p!9hf!*3'qm.]3[A0Y-I&EX8Rp2AD#8c?V"q>D2ZH/`Z.BPU@W1?UHAt#_q?!j3etC76ifDQdp<f9iAng"j\?cbpmd(F_%foAF781PRS#V-dEIgIY'NP[jV+,'d^^]*Z=Q_Z3K+(V],U"#]/.KB$hflb$:^>Wu:I)F9\Xtr3?nJ;D<@nCFa?T)66*c/@WXQn\d%Y--=:DI6Efm3iEE./W_,L@g;AmB[1tB:V*G9gRqm/:m'=d*@N&.jH507ME(:m#6UZgCiC[]#-8+0.SqT)+Q'a-$FR_4XdLi>.Z:u%js-C5oq^L=&BFgI/)?fYO5Cl0h-5]Md?!,[o5=MP\,JL.rHZ'i5BlG>]Ck@CqX\V'H+3c8Ui6"HQehN0-ZRqD5Q;839sasr&^e!Q%ceY&]DU&!L'";(dhWRPGh4!r4>(q^`C_"[=dq$pMk<#e'Rm)!j*@OVfr[R4S#X?jQF4Y)IrEbPnWA]6rZsSD1aZn%u-]+t6#3EQ[%3qUu[M6kJ+30e7tNo.;1RjsalqU9Hq&r<-)b!*5f9u64oi;TkC%eHQ/lf[6@e!Go8o5M<e\D9:&DBA3fKV-YX+pbk1j?l6Jb_au8%UH_.L'""S]1nq:mpK"E&mj@8tZjYnf:RUd'MqrrmiiAV>ZSAK[a/+nQ9p6^9O1"*i%5#;1p*V*E0YW?0XY8NmPL21Ei\9ZP63T%p%.r&Fi6WC1hSUGp(p]ZfF\l<;Al9gm.)cTQNmO$rmb_U,p9H:tQhgMYBU^rsbHHW1QgYHDcDDGi`RBrC,fhLVq-?F?o3L`$s1Ru&(%-Zb"u4*XM52jq#*\ZE/a6=>.`<U==pFu*(sUaq^=rjBF<;r@./l/,$i2gq^gH_/Qg=n<I0MM^!Fj#P=*#-g7]A&C3ED>NcBlgE'S%GaDoH`&@O,Nc4ahR.#G]LEpVG?<jms[WA-LZ1>MJTc<,\^Wd'd^Qmkr\f:T+-X<chPBS'i'0PLHA?0WkZIR[H\i\I-2u<'PIJ>^u%>5bpjI]BdNLA^YXrS8XGLL+iX_$.H;rO47Af^>+)9n*Y[Z,3LZ2c]hL"X7QM&C[9%`Dnj#=#O@Qj^qF+1o)"HcreJcD4;7g@7pPu%3Pt4qmPdlV2J$k,b[SNaN6<i1g[HJKU^<r%3W1Bbf%<bVXSq<pA:s"nC('@oaVn7\o+(`6QtlX/7kF[K>'sl%Zm_B(o=lKn?\]9c%Jc;k?Rf6]<di\T@DV<s4DVGerm@O=8^<?/(GsZ]'+'XgMDjqKo9n2N,5;pWdn"r<mdiVdOrUCt&X>PHdrD;Bk"hUc'FcD_?AC:<]%I_E#.0cjd"j6(8Y1f:<WR%6$FW2Ol>Ph('[H)f,]T@Pg3&%4F\Q=,f(X?i;[aWIF^^>;8E8Pf-so3M$=Dr99@hK8-DIF;)S=,!.g%Hjk[7h0bAEdqXMhDKl*.B@jm[J*@?e?WohU[f,uth<@SEe!Gfbm7q$b@R&aLjK<d7O":8+QX7Dl@8_R'hb;L0o=:<+/kl'WAl.&B%:$H#Q8ZE8bg->]u]!YIrhs;>M2,_7":S@^6nLn6+(&T"hVsU?iQVQsr]3T)c:peu22D9[YlH/URF*q9`lLl"[6o-KTS%T?W4<<=&%(ReqkB\P+HCt8ZBl)d;,[XLO;M/PR\N`9luVTX0Di-umT>Y!Fi=l:n?ggu&;Kk6SSm]sWXS->>kEctUD`mF6mZbYBd[Va7k9qRfX%I<hK"dWT?_$u*=1E0gdsd_K-,\4ZqO2[@*')Rou?]/4I:Q!^*ehTBl6V=<UVfuE0)54Z<rJa6/'D=^$A+nmmd8[6i>ko9V>bd[LD%amOhAfuS'sm)#WlYT]Jqia@,7_!\_^%CBTVo0P@kRPcCI^O:6-P*JR4ip3/6<IZ:gq7<O'MQAQ,W+s'mo@)X8g4+Q!326)X=M;+u%ff#DD+[OmIPu@,qMs9[UB)gq*TM;$g?I'[/\AS9:hZj)KKFqGdID^3Bj1=1rmlQ6^VYA]@"/X,kKh@nC-]jg4o]MP@f!>PGd5KP;%O-B:D]uE/4&mDGgEh<YnAtX+OfcMS^9tTrM(4B-#E_([`m\q,>l78":abe\ogGHI$V=**.c9qk2>?LlCYrc&t@<GiTNt]L"4r-hR%i5]$%+,1P<(2@DKX>e+@(5;dbdfM;9.Mml;Gl(r7e&H:tV;enbh<0N"YiU7<.^OWtjdtr\<)+A"indtrq]?:XJ)e`7s++,AUt%YE%(Hh):VuK6U<#M-\m>[^OjY#lVYhY]h:41C0p!%N^]34gkd4t#Y3p$l<k:>nMGsYQu2_Yk2Imq"ZRZJ7ANJ*C#5fgME2B2+*b_t,2%A#G81'Dqnu^?(AU?4jSg='4K=);F4@,uH2aii8uLSI=97aiU(]h)I_ZgkG`.P-aCje@`M3\/S`*-LX(\c@^"i#MkuNlJ4rV2`NSh%f+$g7%*?99O6mU=h$HWik\f]]5l/3eo)#OHP0FL"^A[$)AktVEhO&2McZ\UE!6Xre,26M_f9`s@2\DjN(gch%`_XgAMsnk/r)*,O%:3I\IWiPl'D6Md20*e)<:r#d^*8gU#P]%COr"n4Zg[6:TI,F'[&YJ<LG12N2p`i^<J!d+]J*&oJD*<p>pIAogf9OpIl8Dq=^?9r1%Zqc/TYkj@*ADZJ)%-G=*]T)IUmmu?5gBf*!VVc[T2O3"a#lNHQ-7!YV9gQmXasP?,Cs"_QI*MR+Do8(mAMq0^K5&)'D[LH`c.<s=%2X&\p[a1n"4(7`e<l4^j&@_R4gqI+MaT%-;97?>"'q>f.!sbh5hc$$,^NQkBdf5g*9PjR$am[/fRi\&Jhg#l@#WF$khT_Qa%hRTW%Q^"9T(n+0-am[@<DB%eXo]'`an2m8HE[D/>nXAi&`h0P'O$`'Pl\4+E!sj94N)+qn&mAbj=CA]'UCp<T.8'd<[tMM5A8rt9E_Wd8%P_%PsT(>+Z,q.?-dXXM60=0qtBjQt@QL='o264#6"lS9(]fi8Qi3E.Oc9Uir](/'4BgL(<l\i@:dC8pJ[$;mBr"iY'^:39Tg?l+N%P#Sdq3dY/?"O;>acQ<&d3p9?4jIVX48;[RB\H$V7)Hm`bI7Y:++flstiFggt76hC^TeK'c,e>-IL5,'A+/HcI+:U7D`R5o/'I:aR%K5YFdA/X\RDjbEN]))Xq:>t=U*rQ6,Xln9UB>WAQa*1Upia'G7^q8)^,fa7nS($n8OPj13Rj;Z.(kf&RTjV!;#r=jsLq;U/3/1m0%k_9G!W3@#!8VQBt^X;"1GfkZJG[B7cnW#8EiGJW"5830-!qD^fBpq?#AqD!iTWYW;0HEPMA.\TtT"o<"QnZ7jZm<oF68"o79+m';%7#k:TA!rYd9bT3LjVj:)3m:JIVBJWf0b#Z7cep-DOE?:!G1$85"mo;a_<V]K0$N7g/[NbTjn`V5\Sq!M=h*gjEK*Kc!VgsG_]l4#%]RS+n=6)[)$:76db:SD(:OtV?***Ip9QF7<_XN@McTl287$sTY3BF,5nEL8j=S#$RSPhs'7?&_cdib:tmO$3,<(I85+;mW+3@(Ck%Vt?H%.+#d-&K)bm<&d!p"9:tl2afB"OOJCb!dLN,kXLp4;.i3$!hb1kJ3"-Ba-%-h3tPpn-5ab3'Tdj5#"+5a!DB(l%080tJeKIC%*"M@4*&?qu+Gng.@/qNGdYQ.):r+7q0iWtJ'G<^#_,&_2R"U(T&#r;+_per(a`.SbOMO'i%XT2V=I-c-MPDRhf4?^*,/U;j7C(QV%JMGSIeqgA+L^8&=DYaX;4?j1,XnP=:CHVd>$u%s8j+)>UIOKe9*F]nH@*hUZ9HMGeV@JS-'aCFgSq-1DTT;-.KV?jGic6G,###2/%,]qKAWds%_'Z'"'B2N;5b`<nd?m$k\)*n[@2K13V"#GL"dMrq;L+]EKRKCZ&PIeT*@E9!u3"U7nRIGMN$NM.Q-ATW\,RXb-IMr54%(_01P5R%u7jV'-UJf*X++9ju@.0,$="$dF+'EDc9!5TGGOWm'1YiC6==Ki@L&^b%C&s"nX,k$PK'TIDEZ9M,FWNiQ';kF6g6AWZ5%@PPo`[>PJK"I?9c90o+:`$86tOm30oeK64XJ]<S_b!?RP_'2F9d#AMMdT$r_VJ@,,1+^d<`)3<Z\?Eg/a'Bq-"<N#$*[cOD1DOB7%`%i/\_,/U/%ZM#.4$V9Y?l8X+SB0<$nGOMr$fZ./X/[[(_/WQkF>65N`qBE^-^YBi/7gZH3!_42*Pj$-(6_Cr*/bbeZr&Y9lmcmk%i!!ss/df*Djon%HCenB')?t`m],/E&8sA056J,0LiNR3IL`eUZ8H&nMq2kZ?3hLL=6%R'=U'WLd?qSb*7NtP=^f:S3%nIUm<K.Ap%I/pilbRI<+@Uh9M<dO\;6\ZuO8&3IJ,G>&&-o>BlBFfl`/kcgB4G#E7%V9/j^l3+6NAsZD6.,`FfQMb_&-.i^-R88N3WIamO-u"D%<[V;TTbC0C+c[e%,8rgm`ZC#rBFKp^BO/eAi&(-C+XVjg.5^BJ2&$tOa;cGWn/*WG.Q3ll&;U[i]246tQ@]9a7,oF3WQPj#&D>Li%*3e3(/GLJcpNg8p0e@ka6p,->_-@5e.0kH-Np4oYru!FNL.bBGj(RX%9jtHf(^A/>\5h?*NpI\L1aXKD1\ih/AcrnG&]CgsaFJU#%UiO$S!r#1f0t<@aKgrWkRTPVb\=jL>&1jB+'F-pSY3a5i@<4@G/-_S(?!rE<DAjKX!XH.rKLmE+@2_Wo5UoLoNbKJ$N(jKq6EYSD%^u,J@ab9>;PQW(a`rc&G<pq.iZH(a6TK%@m4p.TM!"!VSGh`V`3*(<H6P!JYBOnt)1E"c!BV*k;!.q.JGT=LMO;K_VhG&ba+uDFC%V#LCanJGtT:(`/nfWe%h9-,U"0EdLP)B*S@3\u9j7X&pt."5PoOjqbI%"/b@@nA;/$pp>N\9f,%-UEi!=MFmFOu*)d,Y$bWp_Nc(%&2GsO`aO\be2[=B,oQ%0^dZ<fN9Sumj9A]\SRe38oV0L3DG?E.R/^fd;42mC!;Ne%)7_rp$9]uYCV7X^)ArF-/.qh9c4\"_aTUVd%_M.T#:j"T.p[<b0+2D5;7HSu'2V[JDFh;tblOR<!URi2VAl':,<u9@*c'=98U/([@;XX2<Sm[.)P$IG]X$4C[HSMOGppG4o`#ec<%3ba1(&<;X@?!njWdq>c\58sNNaGFJl`6MF_oS[B_gl10p*7\n(oZ.QlWfF*.Ys]i-l2t%M]3f?qr]N9#W'$LY76V5]bcEf'lZuFE%09p?G=2'<QWm..Tm#Ab^%9,p#Dn@S2YnWuGO>d?G"C>8*lVFd:O7lp@_S_7<CP"nVZ&53_0K^A*,t4St?V;$LXsE6b;]>G]K_Uq]%8kOQ#U#ag,;ZcY;--Js&W6#q\!C`]]Pn^KW2eK.el>rF(E;8)6l!%"_nt=V0EfU`[l)VGC'f<W*!RO'u8,+2"_pK=H31,g\6fl5]%l8"sWJ<Bp/dZoDCi[.Y?,+:;rW-#t^dq(g2VlXXm%jA-4NE7C7AVoj^2kheQ6qPmW<A\"qQFB2Q&m#i-j&h>KEbP"^RuO^)p,'^V%:N3IuTt]K4U=of0i-NQY?O\8HdIjTfCC#FO6q&+SiR"q]8(6U^im+I+l5J#i"9U?0,dRitQu-P'P-TROirLpkM_Tl\SM3]`7B"DC%L&ikF?AJ<Ugc$?e3Qg-=Tmk<,1"/9&'0b6'Z#)soHIeqr<`A2gMRBVnWhB8$XRZlfl(\QuTc)rY[(3H1O?>U,ChUoT)4V&;C4bIB%!C127>2u;nIFa+r1oX,Whcc@DP4b/A&R(j&l=`/*j61)H-NsJR5Hnb%V%I5&k,KUcVD)iJ's/hS9#E^hr"oW"VMDO=N/b6oPNs67%TNPK4-0nL[YdMgOJSJ3O%]&X,XV:GeC1q;LH_4BdBk[Q:Cd@C&Kr%m?<<d,g(!IJc@[_6,kTLS3@RrnK(icJ$(]?-<GY(kI`_PpE%g.\V$YBGZ9Qr1*:k8TDc+\ifSaakdCYHVg[.FBZD,XH,-atYgIdtJq5$d49ZE*O;"Q0'A1jR5_)%jZ;AAtopCf#jYHPXMq=rAiHW%85Fu%\1gE*1&e.,c61(]lnX3C24Aog-3<(A`=j,6,POqA+ZL?C<#Oq1)T%\8<u43BkY$?<%`5@"V%&TRe$T`Id`VZP'YmldIL+AB%N<SR4`1C@:2+?qlA$aiND^neg#gs$_J\qZ@Jl9[g\9)%V2m-;Jlb%nJ1lZX;'ro>X,HSfHJ>E-sT.kp&SR`m&OJJ#.^B)nN#GLdr%.PV.upmrg9JJl*]dZJ+9:mnAQo@TlGIqc6dKqr$*TMkV@>]N2624QX.Sf5k-,(^OSa4H#UY9fSJ<*VYk#btdEE@5_MWEuZ*J;LF^%\>@+]S]k!L4b:\-6G_$SWY=c(:oe?PF&mVGnRjam/Wh*7(erCe;K9I1[*jluhMB$EOD"MbG9_$@3a+ik%A_j65J6E@g4Z4o%,Z`1%%,*SF\=u9X(<\/,3$Y;BLgq7;`StD.]Ya4KO5D\?SQ=g#;A&[LY5<J_DT7cX6th$oAr%q7&\ps1-2uLVY7)GH4#r0?_On<O:KD>R%0e(5Fi=hB.+D<lqJ8mrh;jFP.]_[GZf3h'89MMB\I,l45a;L1K:e,pT/kKDt:@^k3%//BQGV1hk6.^E/5X[@EmZj=h)94Aie`2O[%%Jh;N"ST-[i`=<=i60%Q+fBH8W9nRYJVDj/bn/H">*K4p+!S#PD2=$Grm\J&heN\rQ=);frD?B-U1fEg(aE35LrJLZW&[jL#^[L;%CJKD_`'4I;Z=[mH:+JD6W&kc\O[^(3-VuZP.ui5l&MpgW8k>u?$*Dm8#jF7-\qcQ=+;Z#m*fWFRn,;1pM3jc5cS::b+))!@afmX`%U^74Df+;k&90FfHX#1@BS;__-8P's!.l9El[g"HqD5rs[MFb0\R7*"oN5ZW3TGgB99I*Ih0ojD9\W[Lm(X0[SSi*@'=jmG+RaNGa%@YspunPN>C`g<?f*\[^VNRG0*0Km$'VJ!o[(iF%)kZ!L\+ZY1&Q=Z[Cc36QdXB$?s<Q(UA<K3-mFHsi+9ogSm@Qk;KBh[l>ng)\m%MERKY%c:)>2j1[<9*R/5&kA+QXJ?4-/sHs0=[e$&Rk6]-QVUP`[ek;3QjK!P_U0@l</skAk..6(N*b.Qat7%Cd3i"P81C6d`SC:<%hd#Dpd*B2m`W"bEs)#)fhD."D_7n`;F._/<:+fMiQN!KR!A$,YTj/@(\Cjg-cYAVkDFng-]S(e$>X"Dao!goe2C]4`DOs'TE3m<?%IqIU'Ki@V"MLVLT>kAm3/ErG#&+p5)=iWajgh!]#2f:^/*D:G7pEn[@NmQ+P`L5WX-P,28!*-=3jdhs#+P[uDT[qf'W)a#a-gkXr%j1k/aE8r0_BeCtc+6_lFqWZ2;`BW/AL518qTbQ%[.JP9f,n)qH6JY4Y0&:n=qO;b<qX&+$9%\3ibTQ-\(68uXWIV1BXF@+n>W-^i%!O(>*g"Kcn1"4oBEG!K#_&(<Nbfla!M4*g,3c&X_;[AsnRD$WHnTI9+rVa4+^S`=ok#?.O<T!`WQ*pEcJTa!?*K>inM>kI]N!Aa^%3?5\ac@c,C:qEP)CE.N9BC@@"#d*(U.?M)ip&^::ii'"CJju[1$71D,8T.`_/ZHq90c,5Kn<<[trPMY+Wc@AtAHND\ouHH<ICse\%n]k"_-/Ta(;btVAWY9(d-9gk:PX1N\:eMpD#d/aVL9'p.m)lFr/s\#P)!7oKP893S,2V[3O\C-Bf3*%#R(HaXH\;1PIg8$4B/X[5%;qN7KHDcm9jY5(TMld3%C2EVnm`u1(0q3T)k#.&W`HrtOf(@C,pQ<+[l-4L\TUqCR2<&S:4M,eo@3jaD.:;l@0iMa"p+=RSP`UJG%.HIS8Cd;hAP=iMRH9:(uU`T6Q;nuY&PEg^$m7h/kAj/d95&VXY?V>E'^HL'<4U!X@oCMbDOQp?O2jWF;D%7*@ZT/*[Y0Gf_H+2H^%[ku1-P.'&(:GpWtqf&W!#L@R_kMkpIFq=s%?l@#F$8mPVl[D=<*'(LP&UuUG5099j4Y7-Yq2fFI>W04[3F[%LAhInHPdb7GZCne3%UJ_A.Im69\D=1oudH8POAD=q'e8Oqbg/GGtS!P(`mj\-Oo@J@2>G*8`fnaPAdRL7<?jf$&4^2lEc.G@cfVsijFM-7.nl;r7M=[Al%S>/krO_`^0/Qt[5&DE.L\#_/&5:tQKDiS#07$$uo;NZTj/cFmX[:NXdSh4%C8D$\-r?kgCe9BQjI"S5sa?*aG(WTjCXmBL([`_iP%ZrIIr[-a<l]=-N(hX.a5q(QT2GWfdDQD_?1f(O,54k\\lTgN&Ok,Mm+h"CDXbso?ZCWjA&laV`a>;pU&@?X@`]^;JCqdIq`W=unG%^^odlId5_V8i^."GPgg^mS+c:G+\&IZP2MLe/fm]],%;-oH$$#Eu4^kHSj/tZH)_8Qp%.uJ(W6;X,9(7E^ndkcNVEsHo`_099"#H%IO/:nm+9rceUC9oS>W/n\%bs[YP)-90K5a1at@!&J?G[ID"!_$!asFLY8N,/U?jmFoPrXE&Snic?\LL[OMQ:h&TS&g%^+!UNn@RC%kt#'m5<(D7V^9ATKuc93\"+a6q<=&c<8WaaNdHOohsh]SgDt[0<uaQ-dWN3$BC?V6UN_u@4&f:e[:_-52u!"Ve#be%9>8)07*j`a%6FQ4J?MNdX@kW;^\*^"JjSn"-0^7=RpYLYuXq'!W]j#t3^\8GP.IZd=a5^Ltr2dT`GuFrpI4ao3g7j3EMppq%]-o_RKDd/FH,96F%N0a)s@i);X1IX,Nc@#Mpm6!Tpni//$5N08aCNn&?WUo(b]Sha?rUm;Zlo469Q`\*QY5M,UdcG[qq_">F7pV64q<1G,8[l\'atkth%Y4K8#cW,*.*k<=Eo/.=[LpX3/KH=F4bcTb[n9JpG?0\P1h^8Qpp?A&Zs*jSqqQukUPNi$4WRBEP5K/]XDael"s(0P@het:EhYh>s%n@GfG'$"D[p>\Y$\%`fpF#.5Oi]_\O1j:ho]lTfu<HM;h'png^M6FN1Vu<>o8eI"d9:aa!q^J6,$)G7G%pLU)4i]4Uhin)]W1L<0%e*u.`VJeV9ZL,j\`iFX/o-&+I")$c6Hf0*23Y%P?bf@Qi$/IU$$18*)QS+[j\<ho9K:9_C*H]6_`rf%bIIqhJX_0<+afjRbM7r&r%]Fdm,`F27,hO`UR?J_hG^$k-ShlGG6=GudtrTZoo;RsZ`@E^)`*bNrmGZ^uHNl1bWEq$=4(<dhCCRn\%]iXUrI*T7Ra$tGJ?h34:%eorGuA`$5G.Hl,*\ioe1r)[amT_1SF]rB%n5NAb8r^=@/=SuejmT]]c0t-9.c`U(AdV2JafM@.)JFDd'(>p*k:`qn\GmT]Z=toGb%IJOQV5n!o\atGWhm7tZWi3f=I*/F;/EN59E`(_b'9@PSH+ef3d8S>kFZoCYJ_@n&Q.\8P$i/)OG>%T4h7]'b&G>c/KS0)4'U5nr\%<*[^@e62Y0T"7#Qk:&r*=mDdGfFN9`Q!TQG4`A/Ykj:E5AlGVDkO;e%pg.cV[/IF$=IaIu97,ou)!dnln%Eo@mU/hcL&4#u<eGa6%aP/`%6K)/"*m1D0cHp^,j9a@b/L'h,Gec'>#H;3f,Mu7`>UiQYW`PHeVC&i"js,9B@Lo&DL(/JJ3Ug\WQa8dI-;J^9L*@_DC'49t%o?o3,4#uPHBB^,T4iF*3S9U?E%m*Ai.SL.]j`&@bdgoetgTg7;YQt$M`==*tir*F6P-`oYAf^%ZpHlJ6&Z\D>M_hqg-HT+GS^0_\%R=-qrbrcf;NSDq\W5]L[0uE;``=hEZ0ii2D$Se6"o#*_\%rXtPj88IGr1N"/]&;?9UXu!KZ_RM6-l>1mT.0<*9^OihEHY07^HS1*%kf<R0hf\;WV)u`f$g%2oe1[,Kq:oE@=R#G97%fbT,a)t_5>cD^D2C`kdne\(Sib%:s!T5#NVccI[WU=u^@1[\e:+LjSdJg7\uE#"%Tql!mGt4m<e@cW1g4+)R9IHfK4C-@Adr_p^^WGiu%2p+mFJ3;A97DBQq6lj<o\[qEfmkS*AlIK9-[Yf&94l.qmX9!Qp0Gp3"7:'q%6Kh\;C*cU!gEN5aI)s@Aj9qOe^lj1jf$Eq0?B9+nK[8'oRBk7$\SGj<-f"m(<B.(O`=#7ukIkj5=AKai_g1@n1S??qj+>0q>,es&%:YRfpr6/Gm<6pRG?>e&k"?m7f;UgSA::W#!]i$;;ZWPmV*Yd?fO726QdWT[Q(K9SilEs0R^Sdg7$SU7L?R2'+j2GlVEH0Bc4_77b%o3AYeGp0-7UO@)`qT*jRb>asTPRGN-KCZ):U0ZKERtF?d-eg:I@CO_F]PMm3c]pRg-E`A]n*JR6(HB.o?<j+'!eTaLOq1gJ.PE)D%^M:)>H)k3C3*%V$gneaYCY#X!l8OaheDj]mqOs(^]N2&[c;!NaLqG`da3S[mY3c%f-WQilcJ)m1H%#S*3UO:J1S29i:7gA38mZ`6%Y15P9hg=8Sf_`naFm]2(Ol@Eu]\%Uf[#;s8e\d4@d*6loO(;0PGWZAB?61%=[J5sKW,?rS42luQVcl=aCjYlf/C*GB7ATX)I9A!_%b>jCITm=ZJ;R/GB?UXVGqUL(DSUE*"8bTQ@fClq(kec70h'5""099;-h^d3JpuB<;/cUn\=85(THs)A6Q-6S)`_F"@*7V.VgkBo]%ERlWiq,j!0$@IIdCqVb[l\*^MhE6)eqNM6ljeITq+Jki7c/?]6]ihq[)`0Y$7'IE%Jq[7)id,Ha<8#h4?M:,\EhId.Q9'mIdSHI5%G^1<T'RLWbLd'^aEkUsKH1H.9qlR_4-g[!7SXW<9mATK%?A`;I3U(uX$=3O72r79I.c'M#PrnC#]>ONZlot6pWs=G*q2k8bo'&a8%<c6OKYs(U@*;sp>orTloD5S04#PSuEIG>T_]4)0E"XW,W^/82IfY$Kh2T,P2+4%5hPF8_^+u_q^Y\*Ao&NgFkd^1b+s&=-WXNp!c%(\_E*Op:\5HWdTlc7G?N=:@lH$jGq%,RG=O,_M[>G8b7k.>;dhpNeIdjEb$m]0]!dg!f]ocH[&co@m3B]fs\s<k*J0O@4c5/5'IN%fBVK5NUJ`LV(jd04g1dD-.A\eBiGh7Nb_EdEmDR0<VV#m77E.UY?%KE79tck=.NJl>ujt'8aLS#G9Fr,g9"1=$R<R"Q"jN""Y6b^%<imrU)nLQ%<C&u*0r``rD4tTBq&`-upn$"a9NVjO'g:+Y:&tLXF`kIl>/_WChe?K5jFO]l5pNpQ'cJ8G_5MKq/RIe;.3J_e6Rs8u%2sgXJ<_Z%+l@N$So0p;lid[Ym"#(-+1&<H/MU#sfmM1&0^l#8N"H8AC#9kpRhT="KH;V'[H6%+QLOZjlN(+jRf+kPT2&EtnpoY%+%e4W6,Mc\PpMRIh5YCmZp1JuEj6!nRe>IuBZ=*L@^[tI)O.BfmW<Q)&6\%reQJC0mUlX!I0]r=+K5\K(iV\6PiGZ=r*OO0NQe#nen%N4'ZZ.hJBb6r#=B0/O34$2CVfBJH+Y>cOUr6tXuRRDf<r_`@U/HdJnfGYoBbG81u?3<KSZ0Pj&DQEBg5Pmp-pTV+S0/f68((q,WB%\bAJKG[U.GbVF1g(G0^dLd5g+b"?;Ul.tJ9H?^d]YDMEufao\8Qnj-ECG)C0d(i2E8T_Pa";Wj_KCSJ1Tk3R.C#5t#V[OSLjk(q!%<To$t-Yr:6jlB-@h-=M"/[.43egJ]oP:k64[)3>+%noH,R>MD!EK6'@9,T[*MG2#Vju2u4SqIdri0D9Y-n)j*8#Dj.1q/3DUP:+\%$CPMYXJF7@K$X8Q[+$eol`/(<,1h(AaSukeolp0eG*0t)S5G/H.b>Tl:XS`JP;B:Fkg^idR^"q$6uq_`[091,HlL[Xmu"Y4m9\B`%%:aXh.UH4&XbMfHZY%A0VMJf.kG:g`%Ej\9Xb1dBm=s7SWs@Qs^9;H'&4aX\/eDNV>F$GQ"cU$d9omcFjh%J`>t'!Bn`j+YqRGU4%oYtd0p7qQAiG$Y=ntcsk^>"[THFD:mmEiP=(4![+a'>6I)+PrlSWBDla-#B1rcpgJeCe)m3p3#pB0-Acc+I[mLW!LCqVj_1`")ZZ%69V(F(2"gpZmhbBVcp*CE`l)SBVCS)O5fhkhnS(FKW<\7#CL>7kDZVUGqJXeS>%*QLWQ](<0N#nf(R*$`up_BpMNpudf-AfR;!;3%[CO*HfPm%f\U8cs<n%&;`CQ!],0u*J-hj-eW;`qYF6FV)h"aFgil''`]n,jt1nS\hZl"!'Br9Tf]$3F#;s\aMAa3gr,8!#o^X_:.%Qdt_$lU?Oif*>L*Z_`')qd-SfF7f)gh!pAT`>O,KHgB@2kgH#>e$%/$dM[.P;\t4-BHch*QPKc1nXEHI4'JiZ*HWZTZcur`a%R*H%SlN_B[tsg"g.4f\j*dQZI2XAh("W]U^F'UVD$MXf-@59R8G;?G?160d1r+:,Nl7nS`<\JY=O3M;2o%=p?XRf)6mEnQ"$DMqH%+iJ%*==6P/U)=EmYf@Y\e&r<Ae2d&'um*>a>i0q>(6"]DAnQJWoeQG@,jBt&/8ae*,%kaR9SgZL\MQZFZbV$.%3)S,!eCSc8,Jbk/uAi%%gp1jTRmsg"]qrgM42+Cj*P],(E;5MDR3u%p%2\d9a=/D;[!`g42MqtB+LucEU.9DkOp;>D7j5gi/o"'(uUZWTck2MPWBh/i-E`O%dX?4k.L@q\(:'blYF*jRfp?:lR.kp4RX+X>RXqf+/C3eRV3p!0A[q*>]2"[?WH+k=&O-mMc]OO4RA0/NY<"H]R)VMeQ1Wq/kdt@S%Q[->o9oJI6+PQ0C>IekIJ-6(rhcTTP+]%TIQ&k?9Z;`qGb@Neq1S$HL7dI>jUTa@hQepaAr^/%]c>\.T>1Mu]lDZ]:9\Knf%=B!%%`1:?VJZ=7_PgZ#>R=/a.>LZmD3()bu&j\&MZ+!gf"4D1.kY91XQeAX4k,`Q17g#GXc>d&/?nMI37R!@Yo?#T_&kbpBgQ0)1gs%X)%P)**[.*paC9^g%Z4.*ia=NJ$YI8@H!>]m@/U-CT!<)A*l)-N>![Xf\\!D:mb!GN$>]%,*+Cp\Y>Q"1u8gY";0T1Cn>YjM7fn$!S!%2^I@BE0dplPL]8Z(G&6BS4OIa47dcVCDuL"n(B$99pR!%4FR33EjTl4;jO/g9^%&u`q++4MfV3$:fVGrZC)8n@XP!kCiK=5aittu%RL-Y"%oVk"URREm2fc4X^=r`$BAP@nIeHUPTQ2Y,qj>$2[eHKKZRa">Mf%9RHI0A>#'qf/FXrim\N:[sE'SC9>Rfg.XeRsgi86:I%\p^'\G1P4.HEQ=/ohj`*-!q'b[#$"-/<b,MP_c.sm_5'Hj[lqt[Qe";n4'""0/4;ZP,Jhqm\>itM5Qaj"\ElQC^[g%<'HRgDr,.n%D1]a04$kB:+?_&%Dl;i.BfPpSLn1@?;!%'KX?b0u+s.#mai^8K:J,V<Y[d0qRo&A^QTeSBr=%K%N_AUXHdurCakFp\1?c%2AW]Za%aaC[e5^.5-1f#/)67m4O*kKh@j(ImR$]B(('0eoM;ofZMEC9YfW>)=)<-k@L*[+(LB.4j'1?Qcb+^aAhH@>!i;3`!$N.,@ic>iSV%W7&WfNfF;%Rg+ulG<S3.&]IaHDp#R_@rddC,8MXR;^WE)MCkHj=4+?&"ua;L6-QWJeE'i/pu`K#AVapQ)RkQtE_OLCKU'&.m[h_C%?7U=^AjHUlF,VD'1NY>IdfVI?BRaM7Aqj`M7;mgG21^b/^jMS_`t>1`ne2*EA'WEb6XhZ"n^U"$G8]:t+mMUrJ*LJDQ@G$)///Ik%\N$I$+t@Z%KaU//5;VUrV\O!mL`Ju!RSi1p4JpD;lBm,m3lbjR`&rlMK/fIj9mVb$Qg#B`\FN&R5a!Li2)VE(M:CPML_IljWY-?H%YWOfb\rbp'U$cEpla(oJ]O7%8/n2mh)4P7=0kk.J>Ybe$+W9U-DCoiMY8E;lPjk6hIRFD.4Sn5L3qPL)<c?90\\u3YKh/sM)')1+%f`PU7.d#U5misjIJKMNAU5Kt9Hf#l4/t#JoeoBM<M_D8jCq]H!dTr7aS-Wij`T`=9m-rlkF9Zcjl%B7b1t2#@NqLc&>jsjMI,%]0%75to=qsJF74h,gZS=P)(N!,t`L#c5e;bC"qPT&DRfHmH#G]E-_\KI^"R-uUSc^"e%Sju=<Du//`@5X-U%On"nD^88h<^o'iSkNTD%'IfR__@sotUTc,KA4YO85m4!\.(9XY3Ou,EB:f1ZdEp)b#L9NEP,M_!.7(<^HMAl0M2B^b78!S63AHYb%&:PAK_c6oHHJ@8qn@/!%)%%beQ':/D>WY$bpuq-&Ku;OLT-g5F=([!sktsWenru.-1&HL:;bLCC*Y2/8c=[TA_oPf]F80:i7BkFbR59>inBUS<[R"MV(cPuT%Z?O1B8B#>LFF=AQ%bdlikG0>\Op[bPEJ?Ij.mQ9E0s*qcrEGeUq#>D*Ki08TE=/@FQSC=r;2;bN/`4%h_I7AI^6f+/>`bc"p2pb,%:KF9E(L":3aSOG,M+V%-_S]'TH6<3o3qS<*T6f]\dd8Dd"?QJW3Z@s05EP19h+r1=]o\&7S+KfK+t,0j8TgsVgSA4.lpRYsPmB3?%Vc,T2PKLkM:]<'_2YZcii5fJV"40Z_)=DOVA0((A*]^Z84AB+I'AtJ1],/AF%don0bDXLPb-a_C\*q-VO(B-DFp>?0;=+1V]NPr4%)9bIMSAG0=`b]XT75C3+PkHsT3PR_s#bo7WoF5AUBqcJ?(C[N@rR=Dr*i')4n634oNPXXJ1)rIKN=2cYLL3a7>V(5h;!b)-\HC/$%%HcpknsdNd&%p@k0)+Y9[1T7O7'-+19AEj"?'2S),(fCo^LK8_=Q`Hn(am&AWH.L*bLgHaZ";sAc*@7C!AgXe'U*WI%uB@V<p=OA%1?l;RHOUu]g'amQge<X+aIlZ>hr>GkRf,e'5W"Vb)o,e6^iPRD2[JBcR=qV/8BqDoJ'N+Berj\?A4%HYUU,kJVU5hpNeG_qLHPO&%aJ;TO\hip![^]\:#gd51DN@*riQWYWq/fLEUa5sT#s^"(*-PGS3l[(nmQ(1@id?F)[qpn^e;J\?Z.`]u"09W33Iqk&!qJ@RCb>-!%:<,'@@R&l-IH[km/VoYDg[fl*g3;j?fiTpYA7%s:=,9SFaP\m<ft*Mp9%*.s-()GO:6,R5k_"m`m.f;".<NPL<9WJiT=d97[usfm%04YiDBE";nFi];H$rqD)EYQS/*fC7OfXSdu^cKLco/b2t?$hjlX2B(PB`c%I'"<(P3H]](34Kjl5)pmlc47o`fH+nt<SDMUdbmNs%e?&CpBc>eH)QWjQl6UGVVeKYb72Y$MNR<Wo/!/ggeaJtWg:%ZJa*_\/@dIIl%.3k;ZPaAL0@(f;4&"clpEp4;8=QUqnlhR2BDM(3%=f%Sip7`T[buBN,0:iZF7uLWZU13gmINZH^L<*mOP^C]"[=`m,msS_T5"Ul("^c<,ecV=Mjt<:?8DbE5aMr2l6Er[?f_f^mK:M]j%7#+-+KHJingUB04!m$ldn:Q1]1!EM_j!9qQMP3TQ4<29ULFpuV]ZFm8^)$jeVG#$;]HGOa+Z(fBkXom/+$OTIaCH`_4\J1AI:M>$%lrhQ':jh4&ZH7qKqqS^&1rF6_m":tAB)!6m=8&]QpL!?PEk?Dn*1I_0EO^[O5#"'KSN8A?Ua1E-"Qp(^\<G-;PAL"$LQ/L*k+rD+%=Z7)5hOZ]Il/Zn9QVOoj:A0^h68BPE,j/6#*kWk<WWbR&b@lXeJ0fBk'9QLmQ/MM]/"W+*N!0j*"$BU,7HLs\9(alV)G2P6SThbe%2Lbf-jl7M159?aG(s8q;VWfa"3o4/!Rq?eNJ/r8t#9!PA_h[.91'He0:R/3JHKjD:b?/%7OskZOFi!rLZ%$*f["XjU&ZZ)haGuJ4%+ER+JWgUb./fXEK3Nk^amls_+;EXSS?7tX'^,ccQ;MpWTY]I/b6FCPNe#Y$\lk.LF5m%M[o3:(>Z^iBVa,?6tb)1\/^kT[@[QJ5?%k:W*=*X=(X1X'3&E583)=?XUFmG5I6";U4/1\nOZJ.NsLk]=!$Rg4'E2O\\')Rh-*HpTaN/gJ;@:oZ5=:(k@i.SoQLmGUB(oG40q%r-P_;VLjnA+*S@&Gi)rZ`DIHTGE%-(MhHEO^r3G@Cbk'5]0qC*r/:e\_B"'H;:W3@adt$VZLq$)0`1d>3R$2QZBb#$N59p&.4:VQ%q,i1=BA=[BDMXm?<oi$T"A`3Dfh?,FPh><^Z:OK*POF//8mLa0$0jKo#t";SAF&t^.$HXTIuGj!as`omF@"(,-R??D3/fK&8#Hlq%#4@#nGtpqI@Lo@L_hCbg/M=74"(X'f,/.Y_),k:?JiH!b&1L39^We%n',`U9m96qf`:f0&r"('I(F1;55cYM-Zrf[@YN2FD3@oS8%7ZgS]0^c?r^L/UqCu*B!6RH;AE`qhqA2`*834UNu6oiuf\m1?*^GD'UBMJ\L%Mh.la+Fh'QGaKbgT7lkmf`p0pm0HgT7\&Rm/c@>%Ii`3[F,]uS&X.5V@gkO/XKkssO:$K50='Oqlqk?7ocZFPNaOFN8Or2AcTTEI/cqal&fV%^UIr'u.DUInA>B?Tf?,GN]W.[%DdUe<%lFTWOf3L6`6sO#jq9!3c*<56^-kb4oj16p]/I+kMeo)F2!]IP!Qi%0.H86(L%Kp@ooZ@E,J>'r,@2KB3`Q<Lhi<mNXQ!>rh![4`U%Wf>R"bM]04o)[qRk9)st'Z;6$o?hp##<a:I/=bDi_#C@KPR@L81F$5aNd=$LmPGj+c1UZ;`u_-Sdd>)0*G&@H7-l](OuYU^fuK#i%ZcsU6bOM`O,5QZr@4-Ed-)e_B3`u35%f"gk5C"Q/DPrFIJ!WtpGP986Bb85>Om:7KW2!AincN*E*V:mXW0oilZpK^7FuX^ZRJ=fg%(:'TcO'F5;+%kSG5)i:ca<hA`Qo[njatE-[K!f7\h>ui]F.03fj;:;FrOj$)A9'KSB[j'pME`Me,Tg16h`]cf?sL(gA2[5eEq*$H%jPHI5D>a)acAd4b_^^WN_Dp0NqPM@'($U8;('aclSa=m1lI`O>6%#B;fEW>g=A4:ZJ`-34!"?MaJm#]*9M0FF]1l>0g$467iD/CG%#aBOOVku!WQeu\s7J-sE8]37XL,i,TXOM^#RQ1o]p"87%=XqN6((`Tp#dduF*="uj3'S=O@>'u$?n,/PQHi7PEbXh\nU[.od\RtS%KCB`>Drl2a?3Al)B.b-h`U(cRq\fm'ms\%)2s.^Dpcc&=`SAp/fK#!.Q*YVQ'2"gB4<iN1>^B6o5!'^3$%Dn:[h%K2pQ5((F0-.)%)tY";?[OkM-*%pVJGD1bO,kDBG!g9b,H('kTc>&'^=4?tUWg&hmk>%$(_0=,_<5nVJI#SZgPLY<;ioG:1G5;m/tX+DpK<B+E@F*l%ap.^?k/!IjAIq`<)9UO1g!IYm:18T:J\t%]:KWZi805Wm:'Kb#6)$(sk7Yo-DsrJ'hQa2QHZMDM8/\!SVm[p,l.u^>lV"T]3k8]D%GLn^F7E>p*6kHc"[5]I90_u@CGlY[EENYmi31`i]/II2=^"IIF(pqS8#WbpbZh=)"J@]pspVPP8a1ZHX(33sLfa4+6pV.uSmCJ&K%3;!X2WEccqnCo1fiU*i=fdNIf,jY!<D5JjGI5[&sct(b(Hh(L'^(nuo0%XXIg?\hi7L5W1PG2oT1FG9Wq;1>F_\MX5c.gMlp,\A:%q<O6.(o+t^C'qY7'n'-)3]Wjp=NHT4r:<<m#W("]chn=4Hm!-4?P5h`D9X,kK=H3](*t-!n39,Z9J\:ja4;-cgDJnB#fD"7ia79?%]k[uJg%07(E6`%e(=d2mf@gVE19@5X/Hg5rD);Sg?I_Np'Ja`ipsK\iaX_a+7(qT,NT$K*AZ'q?NJ_D)/ir/%28[C-IG.jcKh4L$%BO+S`X4=`24]6+HcmL-=,+r5?j)5g'40QdTZCj:.r'h_\8c5qhc'**G>nPF&/:rgFID3(cg(F3>M-ord+0('%boE@^]4/B3W^#dH%!^'\m6/5#"?>F!j51N#-F.[t%W@`S>#?_Z2&stt/=5/JUS#kpJ__3MlJ(sJhf)/]$3`9utD][BmOoe<E0+r!_"PtHbV1\),iskOZ%Yl7`7X!ro([]KD?j=RtUS]`-As2Sb^eaNgFQXZ3pUlL1^g?.e_7MYg<1CP(PlaOGGIr4`\lj@aMeNlGW;3R<Y'Si`gkdu5chc[hh%)F>+N3FMVeLm_$%T2e3r3\9HZ[c2]t$r#lY_fA8&$ngm\(VS0D2k,85oHoBN]$gB@[(50N)$!W=RCn-XYd95GMs@0d0b&A-2md-L%KBhenD^a,T00(\eLCB$LoSl]gS79:DWcqA]SZ>H?nQE^"$t6K?q&@cQ3rQeP+20,9bZ9>C<JR<Y(fn=ckR]Vd!d]'2r#WBFg0aAS%DhXW;/V>9]=J+B6gJ[jhA,S]qGcSRe-=39W`IdN:cG$K+Is"Ga*2\qgp#J^&o6HR>V9tbWWk+SSYpZO\59[>V)sT%KXbg5*'H!>/%M3Dj`/;5T-2^!VCrGoY-=A0$#:ktsEs$VX<O/.%!2])SDnigRO:)U'c4]YXH<0nDZLT3ojam\Q!oSuK=rIZCsiTW"h#\g#1_c@10%!ioBE6RB:R2?i#rkhS@R4lL'h;,uYcT0hN4h@-D%]GO/_eWL6qRc+^a&Bc]0CbXeJkS[TC'<D6^+kn:8be=FD)sMCJ>[I<-+-KK3%%OT2'5!sFe0r[&)[5=!"WL(pH]Xim&[X!\IQbBs9PpEYqNu_>3-?0Grn#=Lc-B?(gEg-:4+i%;gYJ%"YQ6CP!Z.u\JX+AU/i)^mj%J`4"<_8E\MB/Q")R<T0DCQFFk4N>3.U%b"B<u=Empa+C#DaZqJQEhWOS.AOS*dBcM*]hf$T/rlnrjasa<AB+EUo?P'^N=2'T$ZIE%VlJ(&4&g\=^C[pW+1SK1''7S0SA*F9Hcsh\<)"C_7O%7)$P/AE_clqKbp^q7AOR^O@P_Qu(('WO-n^W[@<q4?7i-eaI5kgHoQp(V%N^]D37hTl4G#d=#>Of`'FR=W/N"-Y-p9sd=Qu5;HSTH5L:$,0<6+tXNGq(c;RhIb6Qq"VAk5Comq<7V&ldO`Q7pXZ[K9#)?7V*A5%?F'+Cg_YCPn^&6@4hdm!Lk,6Tk<3]u6$,WEZ-,[W>];^;_ZeHGEE,YCRc/YW`,Tq<U\tDeE@L!4\mjAOpYLO;oB&7](8oEtq)FkQ%m_=F)I&cS<rI/TFbW3=(i99$WObR[dcR#\kl8`r8e"MgqDt.4m$ZaGnds]#9m-rNtUm*ia(".sP:XkRU$k]s.'*7Lq/E5rO#J"Ss%J4Mch&gqVZoGBkcmiJ?[nEb/Y2)Q]9bWjdDV3gIi/s`?k8!Fch7A856m?#I*D24N0kccFs!*\;Emgg2O2K/MlmmIC/?=F&T:;*2>%,GoMX3kCu[#$LD?nMYGhYZ4/hR>sM)L/,U(ebi;<2C2TS!bs5$GqP_E1Coo6[`'+I-96Rudre[=cNPb]I=1YWj?\sr%Jb[>Y!"'-%rTXVsrWsJN-_f_1nVATpf\@k>+o6IK,#.Ker14A2+jrmnbu\-')t,0`H'3uS&h!T_`mBjTn)+P-Y/nhN(Q3@_!<dc<F!\ciW*32m%*Y&QGJ?HDAr.I@:\X[h1]uV31d;Y42_akuEatoa2/5C`?%D;5Dbr(V-i%gXs\W>r9r6.g\qE?]poLX<lJ%D/21s`mh,)$j5"K@M!%j^mnT\.C)6T&lO7OiD3T74"MII&(?E$*`']aMBuBec!C,hZBUI[[Z0hcd#$QH_.l)Wb%h;^Z7UGCX9]@NpFDYS;3?MV9T\]O>;j0%T&Mb6JFri[iZrQhMoo:.m<Mp[7@q4ok9A0C:t:9dV&nXH2iJH8U6YsE2DqMDb0qJ>6qBJ58(E#0I$@/4+Jn0qU/WC96_riBr>DCH%B.28Xm8))(,CNR`gV)kRU^<W$F*ltQUbBc,<thA`/lQFZp4D_rdsRrGgU$0Y$Wlq^?D]mUO1fFN*`Cou</SU1cl-X@*'Y]@o9%Jq%pI$W->g,WOcaDE=X"IDh8:b9WU@eAR>C_rX3'4hFoHL(nO["6*R>9;O"ApA+qgt<NT?CWeEHjT6HLGq$YkRpE4rU^cqp`_^+ao.Y%7FjsQUhIC$/?L:ObZs[%$BVRl=\=U5&,ZL)N.^LSE\I$G>+>k8L,_DB%V)l<O;:#(M0J(@C+dq,F?d8Hl'Y?S&f@Ueq3ff(+&R=V%f]OJB3tX(d+$Au%88n3KXa*IR-6om_p>oLq!J;Kc`6DFL2BQWfke,1e@Rp$Pp.t&m.>hOtdsCVS[qgn`QAF;UZcmfmkOIp)bN8?e%$rXHt%AA2&FUAKor-f`&j;&kdieV5Io$'[Nn_W`#_Aq4h\[9'dI(b5)'kbL$>CcAFR`LBBdi"s375kbo5.`E:m)oIYaN(C1$sqW=%+jsQ@1SZduLE_4uO])'rpW57g7H3\WOp!=dp2Gae!;laM1AXM`/5fJk*=\-Ga5.\+D,:))7n9#Z-OUb?_D3s%LPgBu[iqRHcW7%'%)c<'TArr`3`u,o^0mVoN0nb=1qVobo]COld,^hRfJ+jY2YOrH)@[9n<.EEb04giNqo$D_ok\6&%Q[Xl-@i7&S/dlSth5^n\.l6"\%PAAd.**HBiIn=g%(6tU18l+<6K8&DpH8D]-V(`*+DgE8P#k%gV;p'(?CNX<!#XRisZfSm/rGL9aF"(<G7%P0[En%qUgJ$jb@o2%E%?hP;E:/\6MqSL[T[s(Lt/@@Hq[8JflYe4MMf1m*GE[S#RfX7`G2YTGQ1Ms>/i\3=qN\sCTA@B-o>3QK#IkJFVGWX'bdT^?9@%/T&%EpWKK'007KqT\iQmO]u<f?4&UKr#PtkCuT7/hHI7Eq,JbV9m-'BP:i=.7M;G(3@]&n'ro,7BKiR=5iCO@;.WF?5")qb]QMugW;md%P;[1%'3S-M3[(e!#:#Z^mc[=n@&[J4a2@JT5;lGHIEN]XNMZ:+eT;"]-5ucBktr)YPYc(DR*Xr%6R+7MP19q-(-Kf^[65(c:>4hl%%H!o`Z&8PNULuTOn#"Js\'s$"DBjo2poDocngSa?PM/5Nqh>k,1*)#7M`ZOf3&/IbJase57Kh#IhEDN2\f606[CZEG1H*89#`(u.%%p13+<Z/RGI5CD\@\4d^REbl0N!&0%O7SL^pCB&N/^FCBhL"_1X^ph9=4$[A-E!_mUafe_@rel7"#aPVb]^d43:HV@F0>IGTbL^/%X6H39HhQrufslC:W`3uWB2p7]"YoRPQG/UMSC3aua?(htkp]c=nS>h!K;k3k\+:\?00L<s*_9U0g40#uSJtnbro9U0I`]6GCq'&5%0Yk#poVJA^Qb4%,53i1Fa_S52rEe@0B?PL*q+FT^:L8pj1@n]!rdP]uoL489lD9spV(W!h*-I.e^7nBm.5S#;@J"mBj<e>P@INi_%oXVt<lH0![Mp&Od"p6g]90;Ur53MrflOLE.gLBd$lYisS;GOT0lQ2'mi95PZ3G;_O5MS<^1Al,E\)S(H5FMFpGs-KM$2['OHK5ff%Gs1l\3j*IeWd#Da%fW=`]F7lU/ct&o>/E5a$tI0+^K_[tIjX&Xd0iJKDR@"2TKUZ0fkZ$biu1k;o]E'$Sh1GkIm0Yck,`b<*aZdo%X>m=8j4C%QDf<JD@FV"n`hUpiXZbj8K-"h<B*U+RmUFuo)T'Bai#c3e?eRC&4C"q#d_Wg,/DW7KC?1XNq9c-HBs.RI]))C[^X6rG%nW.HJ>L`oU)sL/pk@A/,LWQ0!##"+Ij0SIN2h:J<ol.RbGKbsPPh5;?k)V&$T#%I2.l9+cjbr(iNmI`3:9$oK<u&olA?_Y$<NiK7%?+H5*Z*IEEh:*;;l>^_Nn]6?/Ze(D3F/A$n_Y)]oa7I`&Yd1?CXHiJF04cLh(%5fEFZ(13hpu\o!uNsW1P!BeHHLEmr_bkoq=[2c%=dnD9DX:n24Q&@\1VYHhN4X=9P!?+RCV.o-FKI9^lWgT.qUOb)D^r=fIo\I^>r87Z+c@"nTi,lplIFQgF4e`db@4h1[sYoimSKZt%[W3BTF)EAUL3OZ7fD4CXE'@Hg=_#(-fCEToA@:0C&Z*BsICYf6NRgk;P0'\%>a[,Zq.3R&-$"1dNOS>fUZKpP=2!q*3^:(Hkh46K%j]i;:a_a%pJ%e[RJeTf[!r1d=dY?57X!SP\^k=%pkgm-BrQF`HFB.ed;j6_7^eDqE0D?uN/UP$KHrnn@3H95W4e:'=P1at&QCX1q%egWUbBd_r@=AMtTS_LbS_,R3djtt*=@F/W#hBs=VcEA9J^FM8jX#78^P]fn@RARgCo'(bBH?5?"F@Ao597-p!SEhJ\HM>6iF!W;A%^.AJ8>q@Mdaf?XKcG@Z,<%Qbfr0\G8*3)shC<n!8Aa?'LPsJCl08ljiH0MiEX?^LS0(SV#<jl4L`,mnHD=kD73dG]!_\((4[#RZC%3WloH[k3@#rQB4.PgbX+h:Q_jChm+o(p'^`((+_4^[neH%3J4lfYtJnrme?HmE56qS&*AYAWFg>NX_#9gt:t2FEX8c=1>'SIWSoQ%`F?B[)kg@g>br#_Ad]VQe'#@nM3i!KUJ=bAF+H4Y_7*fN1:lQl`h[_2;aVHj"h*AXM2;#5MQZ9K*E\%9P^FS;Q4@NfC/j*ZNghJA%2LJ]G'u/87$dqe0N",s$@"2hUUL]"YjjXct^=@.$[RgRD)*h]1NFMSZI]-F$f3n['q:@Z9!7h#e.I&"8=Qb=n:/f69fs)7Sc`Z!Z%CDbRudYn)VhBVIJqqXkm?Y>3i%Vu*B/mSmFThYin@Z)$3QG\au%T\?h4>U*m%B]rRoBAre$9kTT[s4U/f&""AC\Cmo%nW$>@6O(B%c*o%[P%@$LR0J/GT%2alN8h8u=dI,Rh7?2/&XW!aZtkYp)@d6jaSJ8)/9g75E-i[-_N!ip6[>)go"e@Ql#P7+_;3qmrB=B[!X$os%f9]tN-2nf&S"S>):9fD0V]i*5cTU>hBikW=\\X?3UK,HY_&R:P<U%Z2M`FIK;9calirlIL?dQ!bbt)?CdXP4t'Agfg_+3mZRJ14I%XE.^i)_L'QSi8^:cEB1tE\Hhlq>"fO3,.bj7:'g8OBuEN;+#fA$t,i!cp<j>7!FKd/(8'<FE2u9;@\i^lEo4g;2;ufOYhLhHNgc;%M]pbr0rhRVlO2(2AfI@dgD.!bOec9;_c4dj.VT-Q`W"HRrDLPjMNq1Y^3VmZ2bhmi$C\Ama=E2=[B1fl8@E5,ED2ngH/&nRf7LFV%lS)Vp;a]t1l:=+A//'2n9SanU:V4SS#7aOiB(aCPJuNo,@7YC*"bNB?7,20MWnDBNYB21BT8hG>b!oD4XlO/>k@6(`mI#@r#"NIY%cm0B7@-2@<iFjLUG.'K\i%$hAFqI5cLkneN86B""*3DV-6GIUQ3#^#0HV;u`eDP#">4m!\d28K<d<4f@C+5,H&KdJaNT3"IKf^YD%@9")M$Q[Zf6q>Aq/fZQ%66Us*e)D<:>/pZr')D+MaA'!Fc"mE(q7HOFCY`PE(G#C<?d0H,[FoA%oKs4[8bW//kA"eDN[dc0Q30"0%EL?ImPc4;P[D]DDXf#A/KW?CSW2h03mH^_V4DGQ<Y^C#Cnl7'C0TGJ9*_tdm+jd)IddN*)+^9=%@*sHPKa?2Yn%Y+0_V!kK0+GZq%lh<iRYg`o9Ps%aScckX_)j5n\8hljD)D8/#;@MmU8A?g?@T6.TqE<A,-4@.^\@2'0?mD[^@1e:jG13uYXHJ8B[ljOjBm=Uo82sL?%mq5*Y@ddBNV\0h9.2+bPX\_f$-n3Id%hL2]=R>B:;U[5go0[(0n*]aiiSLa0.TGumm"eZB]8bCP/@1.?/t97Rf<*HL[)E7pqK]Z:%bBJW`UF%9;K&;_u'5^^nS<4#FCT9fS/MsA@fp+FR1c<$h=piSK+kIW"7G,#6r\$+OUB!/0=3fQAI+KmU/QNV,D@5O&,="CkV?``3%D"b_5![D;<;_bQp`6:iFh`7X1l#UD^RshaOI%,FT#0g8uW,.Z4Y)##<NC"]mDr!gQ^%C2e(0VJk%es"j+8o-)mgo7B5OU8u:VG?V%QoDKB)0C,S9eUPNW\`ke)+36@d&#>eCBe),oS+u=kc-H&db06.jNpn>ct/<V?0'@4B@*K]"hVmMX3RB=aqj=hLTW[j/t4Hfp`-m1%$p*#o4isCeW6CoU;QT1(3p]=]"s(Z6HB:KqSO)H8dU<Vk#*<)P#IH@oS?^!?c/,g6=.Xun%dHAC\Q5KZ!Op+MQ#h^)J9bAe%!5\8%@Tpuk^Y#>PH@!=YAu0pFW@O&"/`p>4*KO-h=-iE=PTe:`O%3t3iVbt;>hZ!j(gg9SeMsXnrjCmI[*P8Ch7j`Oe`-m_\jhnKANmQm%>ZEY<GYLe+mOW(T'4/#`kP!C0K+oiZ]9E!>.VYY9(o2o@\C>5_d?H'"XF#HImaOM)CW36A[`ND-6:$LqI@0Vd4iRYHFe+>A8h6lH%Z<Ok*SK!kS_HSuR/RX[\R3Ar#lXjh\JRHUNLs<39Bp\WtO(TIb<u\i4%a<d>rN+:4'Vq*3jmg$`R<@0=E<_%aZ0X5ADq[o`cZ+2I%YB+Ro.(ansNEC=e>8*uA"]!>REE68V4Ku8/<sO"u%io5O<+UV$\''7=a>g<E;q&mQ?ui8h>7CGNm*C5<F`8u'/6C/)PfMA["(+--%Ek7G,?l%k:f?WE_\*\3F10'Ig\uN%g1.8Ir"K8C_8Z&7X(9R@%O''#QR>sb<D45,c,?An'6LDp9\MNh=]2Mk*'5'O0B$\uUAQsPr%"W9\LB!7CO=33$diaPa'H1b;a"6r_M9Dij5adlLkN4j%,['m76A$rbM(KZ\[,6Fkn?kCjgjO:=?N^h,oYK9J)VhMNMPUi8tZj)H6%>>`u\/)F^%i7<AG[iLJKT"f[+QUQ2RABD6:[kc233gAC\"k_5(Gu^P.cJ5fmq*u7iMhX?bA!PRhb?"3&[2SJ(>k1a#G&9E/XrZ+C%c\T.Sk`J';<k@=TrSFK`j+"7TjPJ#;OA]k1X[DhX7HR_/e'MQ*em/=tH"<#S<&@3iifP[.&gJUcD<H*&jL*18X$'4KH":qr;V(m&%D"YkSXEW]e8Zf8jmQE=u#7hU'EENcM1HfAiVE*Fo8#A"?#39"WhBN+;N)lT53_2W=jcQN+:C60rCQAlNU#e(.+5r?u$oG0A&^[I:%0]a@D3lsC=%YI?!*MhjtUEo><%?W'^8WHe^*bmiL=hi[^(b"Zj7lcFX)imBBZsp1'aOEg&D1?F?FDYWs%ApU0fBNFiffrNM6=4R?%Q$\iY80@_V<@;"T?!^f`ctoIX?<t%mou7OQ9Mf5,g,hSZ8mS+cQ!CVEo2*-&ei5/-g7Hnt/,8VdI(5[ujtbpG\\KH\iOV4&XB%Mi%gGRQGHoT?VB[)?[9V+[Q5$S<ueLpFO14!u2&_H>r\Fq;%p*(T]$4R`8krp37@22C520tGsk:lD9N4<&sX+Pf0Z?b\O5$T%2X=UH*%H#2;Let[c])(#u-AT(>Ni&nG'9OoMts6a,V;@Q/A+UK@?IEiMU1>-R=CXuE3O!L^$cjrM:oH9>J7P`K/^piK?Qs<_\p<I.*lQMii%DT5llcQbCEM'tV$eCoYL]<S#=^ZEW+FjIK><0c9m2>C;<2Vc!K!DRI0NT58mYnu`&%//[;@&g-Lp8MQ8;E\<&T.#o('7</YCC6+*%Xu]:X$te=A,]LBEcl,8OId+,Z<Z`)(T64mFQXuu8B0@*IpgE&eA>C804(sgGg-J3ndBhk"QU,7%WF't6Oo"IB2]8Ss:G4J$0jh$Z%N)ZmT(E'2S:YTBPh-&+lo=)G5*h$7;A<]O=*0*`.Cr;gHrE9egM3Hot-)kid.96Puo;GWu)J;A1+;HN:.sGa=W?7B4pNX<UP>o&4%`*G#pi@rE<8VX:aGWdr"%c<F@L+AE52&4$b;T4_o"DMJpr^?O8(4\g-'B*qj<Fgro0oP<dCj<m5S^c3HJW*SD3[Z#E_mCC=gbuZ=%SrLHg1PA\L9JE\k&p^=!YO.OCo1f'^H5t3MHK"-t:m9^n\&M,X^!Fq7?bZO-kK9FC7gFqSV[lF[U#g64DL_K2bH7VOl2-Tsj\N)(%mc**om\e%;V;&Q4X21_,L&'lQ_SZ6C#$sXcnN%:P6[uC9FrmPt/f&#hV1#T$%&L/hH"ZjLbZ9%8AWtrAT=fN7G!9Oom/3L96SJ;>%b4<i$Wfl15Vb:AHQ9WVqA_7I*qt9*Mm%oIP03stQ;_Q*pXR(@_1D>!&9Cp8ChTjHlph%Cu-#1aqX0.AEc&)qAM&4Jkati=8JUs<K%iEKHjgXh;k3uHn6WXQM?:S16d3kTb3o<dk\B@ZbH^#(8gl-e=i/#C-FGc@;WPhsHiqn?WB@Cs,&djMWMB50X)S=WBqrK8PADk".L%oZ"?73@?jHK1$;Gq8]53]DV.GmqJcl*S5hsju(eJbEa!mf'l\kWBKYjX*+d!][rtW*ikdU0NSu<FmZuD/]"VW?XHknaVEVVQU9F#%kU*j7WN5?=qmolK,$Bn\=fcW'84LFs\B6?-T!%%+X+,t2C&_r'qpt2@OW+0CA/@)&j2G0LV"XPAe/e1iOQkKrA``9mjuB2bSu!7M%,o0jkZK[7jMiR`iD6rJam!t8234m8/bBL)Fq(S@OdhQ"3NLje3[;r2D,sH[[Qe?IL.jp@8odlT8ghY`hCq:f58S9E(eB+S'O&>74%2I01MVC_H;ph[P>S74*V7:bJAflUf1fA:,g<TK,20Uo653EP$Je"n.HEp8acBWn`+MM)R37=1Fs=4F$>2FgQKl&'NG$?")P17PF[%rf[6.X),AAWo=;&ca)emEp8I%7_6d?Hh<,:PYKbI`-RVA=-QA0l%lanVCTfc/'G2DHo>8mk1Po%h/tV];(c/RhLt='l&)2]Cfg<c%S$"0+Y0qWE<&S%04I8Q-*h,ljRA#92acjE\VCSo%98DPIflWXu3,"das2]#fU(0%qKF_+q2?9/+'gu;VYB>#1;u&"O?iXe7COBsX%dnQ=Mfpm65KDXrfC)9%DYKiul[F[%rNRRjE86sgRmE1<5iS#as[?^f(E4<H9[bfLchNtO"&u9rpm;hTsTIjnV6"UH\WhX?rX.&*#%bdndk@[r=Y>qY(iV&%H/\UKmOM"G)"h<&2<S.i!j[]I\AGF]]J/i>0M(RO)hC9-F'Y.;a31K$./?!_Tm^5Flch:55q.g8Jna!Z(P%c!<5cZfIjm%_Pc[fA(N6;1..VGJtWBgdQF`UJpoU]@N1]$SK#;'\MGlUBfsekuZWF3nLH^T#F0;:@"def_%^>#]NeqB#dNUQ9mpH%]qDMCHWYK?7Wp((dWKmF5GlgC,+;_t.W$sMb<[,UZdLPFYT.i=!Jh0)-;gEd=)nUV/"]VEH8mUAcR6RS;mU+([2!g1OIE;0\qs]m%k]Bp+D=HI(TV8$a>42&%BIKgZ*hp7bfM&r]-^g%OLI.r*[)-!+q_d]=0Cm8J>ot0!"']QWRjP_gA^==VI^WXD)qab=[3&U='0tm>%WIS+(j3kZ!&Db^e3m9-,]1RkL'+JNNpUsTR15r]ro9bBDd_F;oQHVCm57A1u,Vp`rmW#.]%(Y0&bo5rD<[,HVl`L0Sp\o>+qKkZn%@lN[@\s=gFB*\,%i045Ek>A]gBC-M8Vu1S;cEO>'7>VH/7!Qa!$F\pVU-saVGi1ZuiN=H@1;;f:OkVQge`ZoQh-8^tL:b%NG]u+%%V)'3?YmlV0\9l_"Goc&]Q/.\VjYk?=E*%<KJ"?M!=uY4oC*/W1a;aR4Sna;=:L,#97==IV:!XGfTrJ/O-[YPpmDR^s2]Z&OjdD08%hia#qKl9keRs%e-*PU22F%,bDT?g(HWGfomdQ6VmGqLXgbDpK4_X$bBo@o1dQng]rIN-Rk::=uVRF*o+;<6=Y\bE48)g7[g1bu]C%:bK]oe!MVKeB33;nTfQU%!SeS<ebqOCbOP.1S])9AXt*DOkIpO*ncf?eHUDZ?!5%S%W8>ON9q=s]N8O>3fU+K`N\T;AQC\DmEO=$%-pLY3T]N&`:30[$mqUo>k0JU^ap<@ld8]peg$RU<O1Rs`[PG>'NXg,X=6"\.g,J+ff?J<;35)$Y:ufS<IY(:oSb66Qj6A`l3"_XW%pjJ:iL\YhgNM5$$Ms#+hIX:t9ikX7Da2M*n+$\"V*DQb,Bk<3Dqf]\*T;n$?cPB[QOD?f:4*I5O8U,/\I7R[:\n*oImV^tSmT/%A%Q+_riB&W&n8Ntp3GnOFnkk<tS7]-'O9>_G'q:r`Aj;p5N@I/>D'&L+YV6'?$F8rCcq+Fcnp9mV$3jNqar)&]I#(=%1d6CZoR^V=E%kJQ,8R,R*I_/*kTs)W#Ke^m#W2L>@s]C/ad^E#1)?Rh@#?>L@iZn]L%No&O0_m2,3K8Q"u$jPfH?$SZ=Qh"DCe*o,lQ2-bqW65%m%pg!Gh(bs>7>M<E/cKZPO4rJij.@:Y+ZdZ=RdgIA;@EP/ULZ:1oCXb<uF*56^Le6h%Y1JR!Lr2(R?Bp3Oo-kGsm9u4(&r0oga0P6.%`SOid!&`)/2`cU#Q)>m=Fl(\Rb\B(OTp&F7dt+YQkMI2llNUOXBi<ZU>Bhqs>u/mXqb'`u,\3BaqUk6(L>#dESO';+ZI4UBRebE,%l`I)1:g0^J*m2([kSX;V-@NL?ZX<!1h,U2V)P&^br4nd3pWHP?:<U&B"WNpgXeD.9a0X!)WV+Q$a-dQ:pKIBdRWX%_qb,a)\$@6e%44ONB;`bpIlX#$NP\5KFUQ]@aEtT;\kA>D/!Er*=D`?i_mk<5a/2r=;A-$k##VDS^=#XKfS^l/7<a=2d;kpWLBVZchHF-qJ1L$?d%/GIL\5$IC)@AfK3([pAce4jS2?,9oK*/3i$1l\2$Vd7lSin^sA#gVgS%=Q1N`S!/]D5[;rZPn[2WCZ#@[H?%;,$?O^WLFm.Yg#05%M(iCV=l-),hf2k;4JO?rLZMqB)QA7Tq)][7QbQll'sQMb2u38"`V,h)Zqo2N]biG8;0B3b8!T@rU(cE;ek'F5WRBUY[E[gtAAfqt%"<D]l,]`^j&_lrlQ*dS<>rWMVI9[Oq?0s=i='CA^JGEJRQ3166W^cA,^jI*DEWG_*,BoFW=>pI=ir#W":h^Z8go+9g(TX/3=>pJh%boNd#Z2j4Q!#ArW3lh@R*R>__W6DM]Rfup?p<,lnZQ8>t(mrGc^iCB>Nn`%:X%-F;pZNRL3q<K>hj2g99DR:e'mapM?[NsQ^[tF<%4<OIP>fu6BUQ8X]FYDilZn^?_F"&2&A@qs3?[=0YA+$Per)17<Y6$U3W6h*72=8\D9&8d!\](WdB1!EjlIU;.=7NtQeLp$j9Wh.Z%orGgWY=l6>I'6mY32P@'qGh1ap#9d9be!,VfhaQoorFEdg$QJ%WVoZOas^B6O1Nprb.oKMkGBegY3tuK0U&P-BZ9>?IP"*U8)EQ5%h6lPF/*l*Y=.+24Fj<uWp\NFNSY>q-rRrGpHZH;sorW\&Th[:SjnJUOn(q.cn+'f"C-e3<`u]T2?hLOMkqc=#oe3-0orEgB20sAJ%?O[]k&+9+k^=BF9qtM5!JD5Al?aj+i(>\7WG#E+Rp\In*akE92hoWQ\eH$EY.Wg0D?_sU=\FCWqlPHt0pf>/\][t3[lW5+)Tt^0W%?GC6jFa6GkBD;7fi$@-\I]:t8=82Pk#J(iL+frh5W4:H_PJ."kHi6j`rdnAQ*d\u9S*T-MhoF@%]maP#1jbA0&`;nUB][62h0Nbh%ZaTW)<<HIcr;A8:orC:&,BYY8=82P;.9Aq^+e(4Ypj;sSn?F%ilW5_0n5d:Fh8e-%H.K]jYH.&S\rX$"f4(&:ZeXO(%B]C$[C_<W%'`6=;e.1s?X1m-1fp,k#lW9B%<HYKYkP+gQX#Z,pkl+o'C,IB&=l733I]:^IaMNA\I=.StiKi9>f<mOfH`LM_p[QeW_QCa](#8-L%\7BjT.J;V*^[*l&T/"H+l2G#(316o6'Ul2norA9XYm/t]]meLDHSf1pbBYSMeZT(iATl",g$X"Lb"hBtX1m,f=6RKc>Q+,jbs1o.%^Zo&%)FHA]_g#q>n+E_VLb4q6S_ra7IB-^:IB7laCt5Y:Boc^^p\I$BL["_C^P\Faft+,S?!FU!h7\9f/&L6s]=un#=u`a11aa?A%$Zrbh.cKl7],:&M3HcVfk2jb3LK<"Zd)oY+e\M&Ug*1*LUt69@8`IX63I@;(SiE"[]kTA["O3uX=N'jDZQL=8[lFT=k2#F,])1.k%@V*6&ip5>b0thXGp^t`Jl5tEFEigc[0DhYC^0Z0_p?2;Cb<On%pY4`';\rpgo/H8MouGh="#gb^63"Eh;[o?/Jb'EJpA+"CRs-e5%r1!<6YJtL,-hbgU:331Ug[B'`G_bl4cF7/OIXDfVq>':AXafqfo^&ct0<`F/`S]!*IFpNOq=A(YlKm'bjir@e)7lBN%,U]-H2D>e%:lha^6[sMi"'IYXn8mNgGP1?>L8L8W4'ulTqY7V93O(g#YC>8SSp6r!k/?ig`k5FQlXX;&"N)=!D\'b5gH5:Dm;?;r355!F^M_#I%J=e0#Vl.6cok*uXL&grHdaIUKgUhB*GhlUa:s;9^q5)F32@m[V-h"69!le;,idHt#LN7)+p"\\U10?A4N?K2k)@l!#rUB3V*pc]!%>0t`jUIQPA>6CMl5.qrK]U`@M<o/mmJNp(2VjL&e*o1&Qs"J`c]g]TfRnK*3f`-9ne#+?DG]jGDXfJPGI\#4Wd'^!0<6AJ*DbY?`%fNL$?:@@^i"@EP-MgNW[4*6&9_Y9<+42K[*dq<aNpFk+\VXI9P08BYm>>&>coKE]<ji`oRT6J#_?4HalTpF"`adOPn7S]Hm9P*#8%D[alRhsA+SI_EJ*g:VdGn`@s1`7!h><Vut?hYP^>UtnU#lX0M#[q%LUl2+=G,95Jp-_C%$,LIl!8tKN0&T\7cbrDD7#"F.)XBbp:%G*9Rk'`31a?Pf/._<'qC-2#8E[B!bGEH:8OH$"1G9hp`H]N@3T^BqmO9/@>Bo=GuLOO"_l*DK3%@<SA"PksWXE+([$BjiLe6-\k8%^P[JBMr2"+Ic&Z5g<XG7hMqW[\2os,S'R+N7e?1o,5(`RIe+h6Hn,*4oo)/i[*t*6[fUW00'$cOWUQtJ\rZT@NhQm;:XC?%q2_^*%lKI]7iajpE7UD*!h!0<OlT#7eYb(Rj_-shDAG$skFk*)MI?e]QG*aSRhg@Q<nEZuDqGiLY1T/@]IqnOY`7U^tlHdMEV9*[mJ*slB%4IESO%nBo-NYb'@s2_`uTYBZd5+):Te0n3HPg]_Y0.+-"hZbaC]sk2ipX<!*@e4>Nmpj+:/A#7h4Rn2QnAU='jb'hA)f"`uoK;F6%QcWdTeDfaEY3@T6*hpWe22Qp4:bA9OoBB1`81jho<f[%GFe9?^[5<&Ki'++^5$$W`'aK),=Q<^$o/3]#_4OH<AIfhG\@N3kG2h&\%Vl2J4+`>Wbo@)Ue:L:[aO&LHer6i?1P3+dA'L'b@C&Ss!]lintk2OBas2Ted`hAoVfJtY@8:)@$`\jrT*nJW2Q[YR(DWkN:m87Zl%nFNitqm:V?.t17*k<<7ccF!k"jh$4Bhj5/Z4?IieiR>8uV;nPc0.<o/&>%/6rVPo2pL70GaD)(")86up2:=(7,Y/O)SGE0PC38^`%r1!BTYs5^B83sI@^Ef8?>5;e0g>NVbYsDc6Q4Bl7M`1:[Q0ZH8q#o%/r6G;4Qp-#NSGr1tCKM+%(\^7T2XfGL"E$drE:UHS=)X%\%SE82.\LY$nrL!ruZK!7:_T@&^^Hn:6aAQ'.Ut6d^VFd?bA4#Ko=Ih)7.BSKEfuK^C7M5TF,:CIl@5OYsj30k;(P[r[g8(K\93fpb%YVs_geV1p4f;BLh\g`;^]ReP9J[gUP5FfJS-0iN4jF-NLh('*if_'0dSY!6p0Zc/;'e=(t#S,GSq*31XQf[M^ZG[)\;DW:8eQ3iS%]=f;iV>iQH&Ktbm.o(_V7!/hZ0s$^B_(ZmUM,#u?hQjGk*3(_L[76XVgPtA"TQ^5sD<d=CM2h2_EI#3B[&=JT?Nl/GE=.2jVNo&[%l/D1&78VYbArnNkV70:EjS8Z;,.$sD0,#4N+A]_SDWI3uJV$>)Mi7%5I7je6g.;Hbr:!=<pMY^E@b\%_Zb%;`(j#7j?isI(m`p\P%R@=(TT^ss7C"(E*X3,JVB[9GtIU"oKVaHf/\$r[k_s,1i<T5Yi^*IHn>53dBOsorj`LEUZ6rb3:jf<VchRW_.e3:*W5.mfE;mScs%rn1Qk9-<S!Z/<j_O,WA<\%@p._S9:"=/"6[-<5H;?AQhB_<FJ5#:"!M@c!c;0oBa_s+`j/1?PN*2rfpArbMX<k-6$"K@A&]^,kF@%dm5>&XlOP1`fGYR9J"'lbpd+&Uqro=o16uZp`f.MTcQsgT6U?Jq^j_u)?-k04\fQFR?sKDX6CqINJ$qP42:ZX'MR)eNs@msKDjl5%cun8,P:IQVLOOVb57aT7pN7=nWBWG]"jDb32;,Uh6-)NJ0W-9R=0iu<KA]JQ+N1BB:F52NBc&r8Mg$9'+o"McIE.!0nF^'L#e;a&%-?Ff91^&-mrTL1!JtlE9Os(r2R?7G.#k6PY&DWM7$ppDPcm9jBp?0ISiZVG&hL,$DRtcI=\oB6oBH8ebOVb9JGO>Z$4im7,S@j2I%[LPbtPe#7<-=3Vmmu*N1AJLFuhgR/OX=UF3kh4*H2f2)$"8(];<D]u&bq4Y4p9[j$1B)[4MqJs/do56`N?]4@lC)L71d)fBD,EJ,%ZsV6],_K7VNE7q!QVeLXq$N:)8D:j(<gu<"$X9\bIQWY:o!ut.2o^VPn[V&[k2.O2[ei3H3Q[JG>Ta@!IJaucOjL2aL6=FFjc1EW%O2E3o=BbQ3=DqmW/ScoNj%G_Q\r(kodb?Vtb(;KO2%gqS7T)MZ4ZHJX,V%M%QJV/"2IrXdAJHLQ^<UgU;IqDINQ3WNZ*Z3&*Qgpe%<*,3Ncq_2='nEt>:Zs%8;8ftbD1K?"[\Ce@llTC.p>/fBme3t%N77cb-1YP8@Q[eYeSU*gEbd1GP,Rt1,cgL@giC'QWf6$NmJX[C%)R!J62;4_cGNE$!("_+:b^)SUX)qbpp%?l/k%=O6,3qjmaG)AqS/XNgar'nu=&-90:\6_q'U,_gQ;(oE28S[SLtp\PZYB,-A7HaA%U&M%aE3Fc6:@7^MS2==E-f9nXP-'`6][OrgYhG$[0jkD97SIS_"Y.$m54!d-nG69#<FO*O[S14:ipbtr%*!k&Oh+;WS:^l+^%]""%@"2N:n0k'XaULHp/%gpAV&lV+_4B5NGQ$Dh(1@Z#\3\lp`c88ci<smg5<f&3jmjUdPE(LRj:-qda;^nZmIsoRpZhqEd!R_F4Ee?]%qtF<IB.Mm6NdoCTYlbd=2h3D]h&Z/a*h7\25::gV_opf7Is>G=6Tb!*'q/O"SGX60%o[fLbM0K>0.4M.bE_BT2>q<+In>X5hqV!i%L5F(gf@]VR&80$iO9np]`I%W",&t7<DTGIe2EAM@FV"AT(V+nAZ/3D,8"g[g^n]50r<A%#iao@%9E$u4<((MSL'-J$X!;F%Vsu\^%hpfL!mocnMF.r9r\6bR%H0*;FJ+LHE7<.7_BN?pmqJ:0.^81_hLK?!J*_jfgiu>1A-HF&3S,9D.qYe\rLHf0sXIT2KZ5-s/(jC!^%U^gG/kAWbca\)jhF<X\>qN[+ZRGD]25%JgZR@`^\3!;fp@L!-&+M/87R+^WD%oY+eo>#A<2kT/i4Pi;.R!AF>=GZX8fi^_nO%oWm%OE26lpe#%TVc"ZTkrm\r`t'uocbi"5kJKD9;G[lf?WteOcc"N8gadZU(;<()QNo[e>8Md+cWD$Y%l87VN%?\a<K&j1cm`P"?)%E]%R\,MEo48bonPugg?sDDj=H06MkTg7BVoCiDZ8j;`O*;j0r6dCG;b$jL58E8\Y1iok@4U'Z$oELN+Mb7?-6Sq=6;P<SQ6%6"FW:Wp%=AI/3Y$g)GaU1`sKhRFds$Ih8QXXD%j5KWHs4$\^G5oM;aD@<?V9dCd/UZ#Or07URF"@WpE>ne<"/?GQH#r4phn-47G$'gLIO$dZ%N5s4h@qWhjXfaf'J'FM/ZY1fJJ^M0]O5kh++4`,^Yb-D&T;/;cU]Ym(k=rgT1deZq\ho$CV`5GH37FBl#:!T%UN'g_3f.I#1d%7g%p@6eHI371.jk&r;^/D<@=u3d:Hi%jW\1pBA))&]B4l$d,?gafUO4q?0+"dr#%,a0K7_$j1=PrtZ!\AC-pA$^$aN3P6@ueY;+h_<F%UDHeg3R&O`=4Uc?b7B*.lnS2CNsU*Eq$q"Hn4k;RCL$DSUoMEG<qa7p>8FNl77C(6kr7L4B@Yt-]sjf<_Z687i/E;hnaKF1j-cDU%]N]rr]`,4JmM>?kY:8B8iA(Ypk4eKtNJ*n4g-5OcENl#S4,nBpT\dbjc'Pf/BV7)g4I1'c2h2WLH,+fN2ci7i^RU0IT(BM%R,9-h%06;!k(;<[I"5=;E@@YoHYX?SdHYqpcY8hja.-Rcd)"$.C5kouQQpVJ%`*2jG/DZS2[IiJJ$gVJ/G3+;nb]@.)Sc3d0HPOGb(jk)#%5N_%sO0>n62c#$`,rrM]Z%u=/@DBlD4kr8uODfTC6u4mZH#QX,%j,]JTo9>uG\RgkmHc?6gK'h]/MG;hRskOrGO"kn07S$XGNI4J%oZOEb$Hb<kqXg_84W_8$/,R(-+T^*PeBt!Q^A]i]Rl"`jjZG<oTbZ7G;&A[uhjj)+GlMS$5J?HV$LL+YZe&9fW(4SJWK<q`UpH5i%%$t8SNk*C%Nj?7+o^+M]5/nhM$9O1g=d^/F=aNN',YCe[6RN\+:>_tERcd8"ID&?2J<d6pJtPqs<a2b!NQrHmdNl[<7Q_".h8E2g%X=Sd;&,MK.;S4?W<e:s86MnaV9p3RhE#r>.gJhZikLX[NWX*C'k3%_tDE)rJIdXL%*m)ece+rAXN?86c,N@2CRf$[-In6h8Q"_!%%UT#)BM=B+,8_(D,;Wj(#`km$GA$C'V7AH!.'be+OMh6a2K&Vo%Jp?k1N&l?unV0.]GfPZ,-\FW!irdgO'0_i\Ym;<YZqT2=YFZ7T%\[&HG:d[qG9roQl0Xl,k:cUX]bcV/)e&]IYpBjk7"!$sbTLjYJeV\OQ00]P!EB`tl*A2bc%bu)>8Z\QQ#b:K,3nt9bE<?O;0KF[A%Or+$23:Se(N!#"K:M3XE]aX7WB*ma4k?*VV('hZ`q[e9+RuoLQpi$s;kJd=Z3+6!naR(:lYoM20,I7[N_<(e9lhb`O+Tc>?=B/kU%&RQ&%^"<JRFC@J<r9sd?*]l$*NubrZ^D/g61<OWL_P#`B,YluS*Ah-%/E\Q3R#=NnqVqkXU(4n4Gtqf+C>Z1V+""T0-I\/G4?;@N%OdJgH4K0*f9bJOph/mKZaDK4mqt71Nd.8rnR?]?=>Y(9bZM=N-lHLQNpL`3)!9cs`cE);@b!Da]b.]\=<]:'c(4UrWZmB@Y6VB3=%9*NP;qe%^hi[=6HElQSbO7#K7PahdQiT(_+OVNQ(c[]aa&V+[]HD/>2?7hqZpY_20'tJ?=pm)`HX3Y]CfT,jjcck@FGqCE*c7BfR%RkMj(2&a@&l<f*o)]SQ%""bI!PcJjuce0'q*W<38IL8J*O/2Ltg/,ojA0abcT5gF,/5"HGLdu@'ZTlIH&I_E->V;=!q^FMIdGVu&%p7I;fmeRFJ'Dl%3+sHUG0&qOL0'GKYZJ#`#)L(ltg+Qk&:U4ES?Pf/*kO=?SnnKAa^;0eVcUZ'EPgqOT`]o4P0g9P$NBE`dS;<;_%)cIV:biHKp;-YQ$q&Qu`O4VeVhT9;9S;.(q^4_dV=KX2KVLCe2X>(Ff[+7Y(3=]QnD1^_-hsZ#HEP:p/dT:'sDp9SN+#r?1ehW6Y%GU1?HcOoGZ;4^p9o^(Bcb0$i1djR[4i<;/mn9(5#*G8@%o[[(aK,[+K*dBD)4qMs)o0Q.>DC4SnXLbVp[5`U,@X.%UjiB>n(GD)e%ho0K;'Wbq,POYJ-6YPNA6;`_2ol7uJRi3MkPYl/W7a=1LY+:/jb8b,<7n-/5P=cu8a8R%e1km4Pj,k.%r<V8#+1_b?IQ'\NhJoaZ%m:h=h"`4HSpt?R4qC8'(FhFnaL2..YlM*n?T2%PhoM2us4o[c):/R;dI,0WuIHOs+oP$NmD9%JN#!\XCe.7C;oC1#L:u%E/M]a=S%ch>EY>5/sd^N1IA=APe'8IV1OPl+,*/J$e<:,@@`$$f'\Z/"dU&;bJ'nEEJ5T2$%6l&#"6h#I(O>3"Li?6128q:p@hHM1tHnBFeN%<nZuYSIt0<'0bg^mt'5O4(<a<0KFqtf)W^5`2Xr7>ltL6f[4_q@FkKH*3lp`_la#p]TV#7%#Y+?s7^*BBIit=$"`#dLPJ*,\*n3a%rV1Ng2q`H4R!u^qjn@g#eai+\fr)1VmsafljPf+bo"K%>Du0.IKs`f(0:n_>SY#Lo9(\g6fu91kColZ`.0&Z'?i2EZ3F<g%0RL2%%Qe6_SpEYc(J%Fm:r:q;UF>Sr30F70UIo7kJllTNHS&DMB$oF^+58rlq#(_./L>bE_YdX/X!/10+os.QKHp\f>j\6WAX5qe.J0t)M%rh2-YJM$bT?^ING>S![iRjC'-H)%]i3>)`kk8XddeFrp]3>)Ji2<3NT80#SFW).c42-*@ua=@e#+0HE/`'<=+hKT_k92W/gj3@OG%1B#*$0+J0"D%bG)DD]DdGhdb:[i[3CAETd(SDt\)34A8rcSue!1JS'H^:@_1hT=7uDWCK?/mI>c)@kMK=7+-,D5pX7<!J;s0RFh0%ntp*=5#%lmCHBgC(N&'H.T;J9e`@Se!:3jJml+l`6\4r$A*EU+LV[=jH`()hh`o4nrMo;sqf@e(mdBCCYOKu.&[+m@<5)&:oSE5L%(^'am*A..AK$oIiU\=XT7\]2Vq:`"@PE%kQ>fG._MZCKZ\JbuRB]AbqAU@4kT/(A(4?P`$51n>`L)qt=%n8%dDa3O1?I3tD9-_;7%a+3>p3m.2/.[2bPp'q?#41]@FTO[E%N'F<6F)QMP8Fm1PA)8j\Ibn@4S?QMHb=cb;gIP8RnAX)N9RnY#)/"EbeV1MsgFc5Fc[jjX%;>nXrbR@i-Ds>ICc"Gt#j,4SEn%FPPk4L7IQ<8Mog3Nugbe@6j#="_2Hs[stI<dVnZ'fU(&.ZoYg%pE_=jUL3fLO9=a#H9I*r129%$bM7*4IS%5@W_gfRTnd;XLmtED&I6eOV:[?0#*6"T=HD^NXq3;#G#Gso519/RMY=iphLh$R0D3Er3\c`X`a=Dljk(Z\q%=d'QDSO%AuMfTr0X$]>^p`>5]'Y!FO'=\$Nbs2'olP=)6OH]@4RhnRVHj-lNClNEtaE-enK+Sb>YLSYZeWD3?@?QQtf+71YDVnUj8dlcDG>h%g-i)2?0I^=QlTkqE=*1-WnHXo'/:,'S3?JAF!,nDdd__gd_D>d`VI:FR&XQ]gLN*gfFm//?Z$sE0BHU<fpKQ?29oP[]m,lCn3.(c%UFI<?<NH\6VOb;kY>7P@G@5`\D\XI\VU/8#aIAO@Qo5u6?sY0EU'WQ#)l`*BmuBn%:/,<L]$!@0<>2booV33WI%11.rA!Xh%3XO[%#EU_QV$]Io"<UDe@3dP/a$Jk-;a^'I<Zah!0I%N(aWQNom%*Q7K@$.2$j,6J`.P:d`m>B(b729oH3g0$)94bk/+!Q"kf):e&G4R=%d\[W`g;?/foN*aQc&).N"BFbqmX^+CJ3W_5.5GP?I_MhOM%G:oo2Y-`k>l)JCCq*)M;,i8eIM0okjIt9&h7j,nl6[eFkMbH&%Tn"%2e)GmA*_llkA*,J*4'caZ7Y>Ojjr*j;1];1Q0E1F&#Q@O[;^2PWT'qmI2`NK1',PR5)ZGn]h#.7X)E/Wd]_C'(9cWOeAR:,n#HV)%%<o;$5$iEG`m4"ab523\[_M,cpA)#[27@k^%I8]TNc0h*5eq;a,ke7Lnaj"QRB3[bL[JbapRloG2MUKsEI?50)c2FZSeV`IrRoj%%=h*LU-,o*\Q/+FgEaeEC51"jeh/q[8^Gh$n#4MMr<]iM1Xpo^["77D?]).dmd6I3tkJp8>j)JoROA:kX<,m*1DC!rCiFcmsA[uC.%OZ5Pn/B+lE>97/.\"1l<3HTY4hr'37En.``IcsRW4W/L1q)UVL_=:RZs%T3ILr2Ut:P8(:Mb_XDri,^!Y7`<,jPib-!D[ih6nZF2%lMr;QR+;g]Fau8&JApd:kY1Wdb]rF>QDOPJ(XWb7PNcR_dUAo024aGL^"a;N1HY:+Q'j?r\>J*k<]*#KDkXsYlJ5iQ-c68n\:)O9%[R4!,'BkXIE'_R1D+-2$FI6o\@=l@^0$Lc32O2q9&*(rigtHRbCm+n\>9="%%MJc2in#3R<knJ6.R/8,#Ff5NYqBfKP8!1?mI%T`%HV8"FZM`*dM<2ML@CiC$oNaSf`bgjf(i7OD/A0g\IX\frdqi:(rq-'X$O9#]^Q&DOE@DAF40c]lP>7X7l1mL!S4pm`3ML`qJR.kl%M!Z%/3dULf_k/[GGnT(\H[:r2p99cfXO/CS[DtLZNbrfumX2X'8OP<DdS7]Z];[Vjq><d[_O;=TM?E#(5J5W)l)0PaH*t>u=uV`e%7?Zo.M>4H7URf@<XS>512;WhR-5Rl5qt2pu>5GZk_4OWm^Ajm`(?,5?XU4\R<rX`M20ASl0f8XaeW(Hb0u*UM&`?E=q)'uKA)$.0%aF<=/5mkhZkTB0H46V^[kf?!@\T]aeadr234806UOW0ke#:mH>YQ+(7`cL'tCJl3)?(Rq2R#Rd_TR8l6J%3K'r.FgO+29EeO8en?%[NYNYT:l5ZY6k*%Z@0miiJWcHc/Zh-r9K&rPn3>lh_'r^D-f,T%]3UjhCnjh\c6epH$&quI5=FJH*b&p[b*OfQ[/LSh^Gj'*'aQ"%FUTLn#LL`uGk:6UkhGnTq"))eJ7#M=j1@e1)Yi]LiQF90p^O&!l'%k1:#FRkU@/f>I:u/c7,LrDNP&p-dDnu\.-Vs@OoERcbTFag%7^k$(O"S^QqgR<ASc6K>YL6qQh@Q0<$jlp(s3\X@_#HM>"G,[GFtS;_2%W\N=JJjE(GLO6-h+GL/:U;Ui^lY00<,"V$q:2JTB><0%7_?q>dC%0tF7eYIkucj8p>mrd?%9N%rH7q2DtN8FbfkjKPP_,u++MRJAeqOe0@+N#rU2Uk(-FafbC6sI\3,He\?t8DU2TnGg!QFT%(O^h=I^kl8Oo2HMS"@C+.X:a7e]IXer44uUW^WYG(?l<9Po_p<abs,"IHm\tY,q&\?A%@2IrarIfDVnJ5OT\S:2c1GmlTc3G72HN%*cA1@Q[S[PHN1>-6`Xk7If+$2lIYf,(B`luc:W\N'TNPTP-`nKpRE#Lcg<]@a?OVBqEJU7IidR,[Z56d0()t;1I[5VRju!qFF!`G%m.N%#[c6">4SXL,-]%FRKdW,5IIKP%:knVY%uCBH6dHRBV%97rn\7.U^fP[2$j.M>X;D4$7G(9I,$#["Bd%GX^Dbi9OoVD>TPnqR%Ds%KcoA/G2.>"4,72WtF'S2l#Co.Lo+p;J1Io.`6:cAL6dnq@-:o1mEVS5^t?'fs==#Eg2VB<9BL=)@4k_j3]5F2-905?XB9N-;P%M&Ks=+SC.=oj,/tVW@WhW.Ds59c8h5HPiMVh`"KkV>K\GI/d8*:roN\JW(Nr7-aY]lFUh.r-\KjB`kg`@Jks>.i#%-RHM(!IK40t%Rhuu<JK!6!`Yq2dPk6dHDrRru)q%WR_?L?rL9@J^l3LQqdn"^m8kIS*5cI10;8HWiBWH'gV@8FNqpWW87rB#oYg5TKc9)7uA\D&c%Rg$"2mMG/(UG0l_oKs2+dh1W3T7;7j)Z#5iq]gJFWuE9R2?l&Mp(_1:H.[+DW5(4Y6*&Aa*Y*lZSrZ+PTS3Dpn3GS7E',nUFHsH(%)ps>0&B9$:$R(tn-Y;pA)1>CPSMH)X_,k1thS2u4omd?qb54[WV82gj32*D\Zjq5/CsN>5N#t/t2?"eNpNp>;rSdKA,:*hS\e*@)%EP)!mD3gM<n\k0nptc\AMtrrB\5WA2Ceo]SXGm(tn3,\#'WHANb'CqoZtJl8BgE1SFjF/jJ[MmXqt(.BYX+0:=U?R"i5^d0qAq@T%?T1>(Fi*<F#YBk#`qRFHSethOp^H@3^A9p152S8XB>]3+k;+S57d%\YP,7JIXaEj#SQ)E^.F/8AFZt$qoMRfUM"O?4J@-Bn)0V=C%5-_pO2Yb2p>M,T`JfWtQ@p'so(K@a-hjkj4B)rB)BSLMgqBFt;CGB^*:DZt0)gm.pM$O%WH(b(^nj"XH;eTIVgX=L5TW*YF[r;=>%ZH:9,GErP]TniJE[FtKXRL-urBdj*[`$hW7<?/Z%O.4NeajJf:WVgs?*B3;Mfu>\n5":Ii-G$BX1UZD[VFqWNU1.s`C!ij'Gt)p.%?(M\+CMKj\jcr*"1nqY@s#H1m]D;,rKhie++hZfI9As/#Jp0Afs.o^%0RPVaKVcaj&5(+h8g#"IR8?HsK3THZ47\N8.SuM;WYm!C%,LP[-;FD&F(?8!9l&?cCAI'2J0em5L'\)q(%\L\uIu?l@<R?sg/5qtc2M#`aV99SCZoA17>aC,FH6j4>)":Q2ot80T/0Ei?^TF8A%F:.)]&LIp$+UB8cQghZg]dPXhU+!i?W=^^J$o`2MgP?dRdLRo)P"hS]TGdfS1^L`*QEVmJ#nMb>ib"&Rii<ripLZ3]]TAL1rm0`%%:Tfs14rUU.d-JKKVu\CKFeelN1`I`;;=Lc$US/t;\.^c(AioshYu.F+G-8'HZqG8*64jbP9`tht=Hh,b98KbGAl5*pr:>bprjVAm%cm*'t_^Y2$dmCm^<&1EG3<)pbcn6$ZK\:W7.%&Fp)5npV\F4'UAMMRIh^kf!M1IiFd/PR">!r>f].m,YMbL(mn7M]6#&9*-FaD1<%Ju3J.!H%stb[lTD=pMe6OeeHr!$7LO+knfef6>Y6'E+f45YT_jbGGS4e!GAr7"V-;lke"3b]C5W"Y*3tQ6IVn9o*fTP1nnZ[.a1R%Z.q@GX-Wb_q/q+@e,/HIl1-[=/dophq!lR;aY;0(OXqHZaqrjto(mM;p3jN++7G8.mo+(f*f*<h>[r(5noK9=F/dF?\n0p"U@jk%%H&@g)cP?#U)OniKnGd/P,lnZQ)=e3TF+b(T>i7eR@L[&u;'J^_Hr*Z'6YM0D_4G`g,$D/7=@9BO*u/R)Xn/0fU--C5SlCs"@gu<o%D5fDf2\.cjcq.6kq#</k-"3kc^!9a`T%qg"G[QuX-:D\_q5%P6HiAALKbi21`)iT+l@07M%7&aX[S@7_m?>9m@guC9l_#</;h0!6%X^;hTq+kM%/r"/7>EfAr"6$j3+R;mr5:2U.@qBbF+/Qm\b[?!m#$0]E(skC!`0$iPpf?Ar+9kQd#aHS<2Je*hY\YGUFcdi#9bD\8%QtQd<3.98n2#'9Q@aHq=/A:*J^4]5eiV+W-M+K(S![?-,$nCC#?.aCdF.[bG6?*Hcg*0_Ui]h,qG:TgYeb,4O.Q'[WG)AVO7c8qk%V0p.J.A_/Xejg:^6;;Q26Y\@c3`KernPB\2=L1E$7Dt.po3bA85dF(BMAHnhir<i2puE*:&rb6%Z+)<*(M7_p"(34#Q_;"2**cW&%o@:t%C(KTZOBh-M,c3Pm`\>!JED]6ME`"Z,XNbb4,%=IJM2OQ;d3gQ8p"C88kd?E\pigc+HI/O=(`.=-9_HC?T$l:jNgc?fM5-rU%VLLWSI<*h"ERN,Q2,[FoUVF@7`]%:`X1rKeDH@lu0Wq88PBCe1;FUa'G`$aI:bj;h-u`$?pmXSA_.Qf<pOF4,&.>fV7RtlB%tF,e%N1sKH9ZIt@ofY%]-g(84_d&1US`c?E_A%(A+m=XRn&&CY$d;pY418Y])Z!/3g?LnU\N\kU)Y6!11kQoEo1n5Pc+q\GY:2A48;mmo%[at2k4.gc\Igb^u[3(."QL`q"F_Zbh]`1m\q3]*sR)s'hkH2u_9cl2oRtFWR&u3=5Xn=h3bpTCahnh48Kf*6#1p&.&q);cOj;36O%dYUSl^`7P1i/'Q5U,OQ8L-FH-&/."O`/r7iPO:10/mUk<$NIG8kYl0ZM1rr#e8K*+g"Wi0M\r$`"Ra#hCYk7L.n!*].'q9ucr*`,%L%JK[A:1%)nSqm^eiNiq4S;8tIH%5sqa"eLg[afc#4BPCC41a9<HI*u*2]/218-iQ8<4J65`.h;I!VJRb.WW';U(MV92l3rcRe']%Q,;k5U==MD)D"e'/#Ga(2d:(pVt8=arUf?YfQ\u]fYt:">.rMrc/0nL*\X_F[ba0E&l8B7FYuqZ5DPNDLZ98Xig$d'1sj#fL"EI=%/&`ocg;N^gqFJ`HpAu<D[)c)c"X0H(e4TW@S.Q8WO^X,\r1L"jMoc3TC'"XdOt\uMQ^BQN'7F;Y4uVP!ROC%aRaRP8_O'a!&HF7t%8k_9['G-s%0N(#$d&%.ce!/:,kuT.+W$tPM9T0qh-UWhR(V_.3K%?X\<GmMS:3=@2Bu5h^ZtPA3Bpke`(UA-nE2mk#0e*(I(2m!G%_NT4;+aZRT$]_*RIVA]jQ\$ZJaDIS]3P"kXF^7)kB535!3j]7Bgs'b0j_*6mP;:qA8&n5^=VfBDU/.l]M,caEapb<ZS#%gl-U.@p%i005Rr*oro.m1J"UO09/,bh+PVXLL]6!%9Z3u/Kndf4-Tq;a\aigKh_lD;M1I2LK*63$<iB;\ke^duFl;WD2KN/(6F0sr0j):I2&%L1>O4NX=]7imEBmNZ$5"*#%f"Q@=j(((lbY:E8t_@m4nV^S@+ZfO`=^"9)HiZF;e!p6tiGTNt6<7+AB9^*bi8`('c2fP(5fSQ&>0%Q3,G4mVt>AoXn(,nUDHA/\:m7^*^/+7o)`#!Z4#YO.jC2AN[Ur<sUoWh:IV4Q.GGQiPK@7T#?g&6J[lWoU'B^?4^;9qTTQfd:Qh#%-+?gm2^V-G6&6_LA]iIu=t%WsS?&O8F<)1)MXZ6r=:cTsIP>6hZj]*j@Go9=M!!a.?Pj<<!_b*.qa:m_T`eXBRb77k_SDZC<SuE.%0>q2n+WVE&@>$d+#;$?9B]B++D:#XuJ1o:UPpQZ@KMCbOCeWbEKaOS+O[+0`@d&!6"]8\p!dKXAKc3KG+ZsT;GkuebVb\6&`spuS%C&TK=d-12b,qQ@N^)si"*ah/*Bin#,BTjiqK8cEbj#^>Po^S%6kTW_"49)'aFjoqjW/r\JI??kl:#D`)OFGYW1@1LFJ>n-%cTb0$%eif<=3t-$cKo]kiXf-Fp3RfFX/Nt0POiNX&N(KR?7#TA;=.7`id=Wl3$d6T6-5$0r*_]=7nVpn6WBE)XUPj$e(6OM(D(IE=&3(p6%.m6U^#/GOC*5@V\WYP%_V_e0sP6tScCV6Md5Rk*([2+MlQLVdPf5A&&&iZ@8YcW;6\/+E?%lPob%*U6MOLkWZD-96:$C^c0XNgg<%`,N41)K<GV>,K,ZPK`PJf^sS"%AIU<*$5SUg06i6'ja:Y1t_:k$3E=W$V;94$Pg*l%51T]@,Hh[%NU`6'ukkO9ZW/'Ifto<DWc(L%+9Gcsr#f\3pgu%GbSmE6$l"gjBmkGc"t@iO<R[Tf:0#G%cs&=4/4h\VE^E]Y#U]9#;3C@i]c&VkFOL:FBD=sb;5eLSGOT-6]r#ue%k7a4`XLU%+7I=e9HH=FCh$D%DR^0kROk]1e1(>R18%g5bb#MmeLuo%3Va1[\.+6*\)Xt;!V],C8ed59-5Y:^Gk=B")7>9,b%Q'*G%nY77[Sd'Sr-7fJF6O&a2:X[@UDA4fTM'N8T5\jV5OOG@OJPRe6G!IuU!XYY5XZHo"5tRpWn<'%D/."F;)lVEPOIKnt--f$`c11rq%Lt3+HKq=07)HMN&WjTk,\MC*E0eLb,gC5qd*=`!91C_fom09-fHWTg&Jb$$7@"5m9Ba?SJp-q#5O6\gbajQQ'#uoOs-?N%0G_QK0%(Z:cJ];bKj\j?BR5i90+_TOm;gRun[[lkcT@HcMcp/,5R[\hlA2oc)H:O'6"C&]Cm9L6Xe0FVZhBN-hQeMuQq4cfm!U5_(.78>Pu%iAl-L=FS]X6""dL;h2Fi2c3Ke1$jHf-.d+')]U[FcX?EN_qfuk./u]Bc4"jMK1uU\M?_=-^;pUaknY$#)+C[G9/s#0#?#hpB*jAF%`MHGK;jc9o.7#R3&M39?b9UK!ZiWL+.U'?TqH2X!o**Wo/s\iqgA$u+KZPQ+PD=M@dBj>kdm,]e;/*pQ!N=/MoH%D/b)p)N8LB"S%)*/](E%5\o-lL3-/SI's2tn:$[l>d<R*[?g__nY]<kEku.d_O&HGi`K]JZ:BB@Ie;8(:ppV3pCL_hGAd^_N/up*M8sJkuJ5o5WrV%DPs=Q1hg3uJa2hnUXK'TfTX%7DA#4G+:T)T5^Fa'5RR!I6\b"oFJqX&n,Y,PadOmV7DO!F8OAOnSqN3V3)M!NN!r&I*4%f,%[:5A%1nc<6c\H4%Q1Uk<0C]J2e:9jMkUe(P&@r)"^W11g!LX(>a?,bqXRH]=a\Xs)9jH6WW4p&;DPm<p1$tathusm_JW<ncC$caoXr3[-%d#19N#t?/(__Nh5W%09h_6W"H%\)OU#ONL:nm9B^/!t[6ZjJY9'ei6Og^Fr68:&IU;:h+o)IcSod?L?,"j>02bNsKI(!RIG/0VRU%'&0IcjTYq3intHIj[Fpi5S^6k4Pgq9&^gscKku`T@kDI1W-S0VO#1V3FKSl!K#qMO"DaRX&^1B!EXS2B_X4P+0?g.oe>!]*knb;G%R4RLdP&rWrUKfJfX<S?mQqu&?gS/-DBL,06!q/!1+WYS!:_&S/J/o6Mp;SKMGS+OG506$^_0[I!M\*)aUj"=_rEN`ZU$,'I<^P`.%>T/jMJ@-*oO0B*,@^[0=:6bV99)E9;ZJl$,Z`f&5ddI>V'5Dm8/jbqo:t"=]7(%U`5L-\[bm)dMAlB#^5BU4e'(ST]LW0WndOOL-%*%4LG'?<t9mXg&-@(9Vm;5]Ys_giLfnRunLbB8t8e)SE(B/?iYVA63EA1ib(.TgC'(]FKB+WZXc,A@^`dK(qDTNTdTG\KgQ=`Me:%58O%M2De0un?(_o!=KNS;76_BdmE"aU!XGW1WJZ++YOTR_.&M]C-U^,T_*rnAPfD;-qN-DT0j]QFfZ\oKe!O)LNu^hg`(dYL<RCX%L?;am%.F`NKuS2InBfM^)U+QoSgO!!/g6Vd5o[m.J5:cm;Z%g29@gADnX(#PDGP2:;.0ujaDt^G/HZp:*KRqR$E6%aJV6egK#Qnt%2DD2IQi*ZL;>!8E8"pMb)IsVICe-lXi]7g3$]"8h!F?LcfL(KRPOC=bQqqNX/3a_-ml/`DUGpAH=<abY55-`R-lY>5$fsk%%nS?Q%\=>]$N>V:[ZHai8pdl./$3fiPV?O>_0pokjNQ7O]9qmAnRi+DC*cscc_F>^3<:2J;PbOT>22rhW@K)g"ie<BZ"s_'g0TS12Sl.*`%foGp'n#4$j4^Qgi#aa!BXOTlC0KVE=730Ae;KH2QN0tD'HW"__,ShMkA>KU1%iH+aD2l^j=s\D74n4<S7[c;a6P>2L.7,Y';,!TA%?EJfm5AHs]O(jYc,g%*#'I-?^.\?6GH"!L6P.XcL(MH@\I+8@!,LQ]DY@u\LFf!l+a-0)[E;Lpi,@/]</.@h\i;$-)$^c8b4+\'A%dQT-\L,TMpHm_XA@h<mGSoLTJ]GK\Zpi[lMp7uCkH>'F,GUFUGI9PX/4/4PHU+ND_N="?>_o>+X0J&8V(=h2o"q_=/^)jWj>>-;X%S9>CN44hJ5V$B+$[fMg@CPdkqdS%t<JDu8R`qVqGH,cYq=&]mFXMa6O<mY=PaK*D[b+iej!"$T+?qhF8R`lBJ3Bg"0K4XN##iZ&m%_J,%%-N+XeMI?t5V^?2JH/*&\Mq$LCPRLr$6I;6a)GEHt?+Q_K._*s/J6a$;,#oZY"$?g9"=u=OlD.4W:8%Q#8:^K6'C]$GM+%da%e3me<)3MZ)f"sUYmKrn*]+(1jj4;+C9AI+sB7UE$.QrVHYB5)'84"-D\-PI"MZR\UNJ>']O#0fb8Y<s"V+=Me9brt2__h/LE]!pU%Gm$sFqV"eTKt<"S?:[Uc[.0iBL95,G7BA=C[f_^'DJV2`[m9PU(6'f9@Zi+pr4s`@R7;>7(oQMK>%r4tL$Q.`eV#4'fV,pFdX'?$%(^:%tH,A9d"mDO'?%SB0O)g.lTKc!('*c.G$TusjEI/*F>'r,4+Ca"._Lps4A`/Cb^5:F=[CjIml-PRnlSMEbkUW?hlm-pZiS>bV%@G`H0W%lt*#5i(@Uh$EZkZ(O9CeC7,'j<Z%'5D&o(i.pbf(+Ut]:^'>(_`g3nLag1+/q4j[H,iba@T785al[3)QtIrI@bk^afP(&%'\]KBXpKOf=U@8fCD\f933M3@LS=3/GLk,B)tKXn!]G^*Pl^DmW"JYUC(FG)2XmK,7iMJBUefGh6Q;KhYD+@=r#Ad$3s7B6],"h^%ASBUE:d'KkrIN?+`.*r?[@1VPaoG!_Q,5U]WBCTJ:$ZnP^c??JC9NXe$7SSn<Zb1##`+r`NGDH@doB?]\>,6hTXE]-_]/(hNC]0E%+V5B^SGX&SnFBWL1OCZLY+^U0@PFL>3'Js+TOA+&3[#FZaj'm^L;"a,;4g/nkUNjW7ku0#nT-Hroa]jmW(?//]M90HC3J.$g`\V2%Z=pm2\JG#kC:LXbe(:ElMcl`\M-YTPg42k;r"ntOK^1IP#^4@a.S<E7QL=ob[9:sB-asuj#XRNb-TDftB'\g,^f]4Td.!.5j9EP(%2(j"AP`U[Jne0EUe-3T+71=<8UTkIn;[A*\(QLsn67rgK0i9s*dO<bY1qG<\p4+_<K>;b*_2uS.^io>QD&CVg6a5m%^sNnY4+Arc%/K?R+Sc_k%KTD:M8LiYVNF3Qq#@W2H>-[)m-)0OEiX+U!!aT6W%AV=b]B^n6A^!jalqf/>A]U,:$T&EW5oZO/O-[6]WH[Qn&^IM9%f)g3(Q3E_41q!a^V3/)hK]IJI[8UaO3.nX!2C08-Tt?B.OA:_@^a%YJ\cT&Apt^gd+nW8E$],5ff")n0G%78@c^G[)0cndhF$.qQ%J=T+<#D:+gd)$d47Y21p*ct_5a924S/6HegX.D!u!?NP4!^3ouR(mkk-=BD9O!YsN'4m_MgH*jt2<I06Q04@rN;@'5h6I-n&Maf-%eCA1p-TQ,n#M(Ih/LX/B)RJoR9bLsR$JCgl*SWYarPEfNZdsj&h33Buh/-LqJRk4q8t*O!j.n!TaWbhtef=%<B^]p@`:B0A/GMRB%FqB:`=hjHO$ISSrP':-%<fH/20R<aifjVYjJkIUVBZI6#@@<[ZFCVK\R`_E8Q7gQMa'KS5Jq2u6%N8IWYqaK:*1MOW(=%I@>JU]7%k(i#e!K%39PChL7Gm(Kn]UsR-_M*5BB*fegbfO#qT.0>p>-:_X`0Kj5jQ"//BGiNkcmo9Tl-OQKZ41tr(`:k?htPs='uqYSi.L,3%7t<5%-Nf\!Rc7.;@M9X4$!H.J&D")hUkZa/)h-E:,i4*pSI*,CFu8!t7"YMZbXh>:mMouj/@IZR=ONC^i-6J_4HH7qTaU$t1bH*C%3I8?^k]V1sR3mln:B\g/.g]!BKi';\p>?6RUo9IY@O+H*JLQAW6Ad`Fbql%8PnnqE?;%Z;'m"lNBAY!(/[U\>fArbsP)O]<H(JI#%).Ha;\5UI48>!f!Rd>NbB`d*i-X9cI?,[jY06Bu>+W\f_2o1gd4q@t/V;#)8Ji:nO(r3R*>7C9qjA)udqEWY]+C2J_%,d5k1D!X%%FLmtLTNr]m?KID8:b>CKJL,V/IR?qO4UO.D^f<tP5ej!/q&,:Zo3OdYR_0\dAY0^u*JNYX7#VaQ#7doriJL\;;^FpQTX;K:nJFj7%g*PF4fLfE&&UskVU'HhG<)X;<BCsuC3[@2^TeXGtnmT"Q(nimG4L7QmP2^3NAeMK7g'_QrOTiN7cT$(&8'?QPEG,Jjl&)2C%r(5-%TVeC&SeM2f#Y[=`+Vn,>_*RgP-Bl9d5_[6(iR8]7,FCK881HGTRK>(:5/D!C+Uouj<np/u8i!dY9leD/LBVHZIaVW!=lthV'-^AO%"c<=26UD"nZK-FpVD0T8\<'RB]@)RrEJo94nopgJ/1C.-I109,jJ1-u:-D6%B*%;P88SU3p1[%oU`L1DZ\sEK@-^[_!dCGL[h)``%'NII^J59V_8-'[d`o;\XP%fZa7hds<EFI%@++jh%iC[<I,2%LTcG;i+kQKCPN%i&%imK*m2,f)+)Ldk<I5_uR,uK9G#^I-G`4Ol[%MsUZb&grl&5jp)87WYr%N`aZP-I>Q(;Dg_KNHHJ+Cg8aC2oL/nN$=?-M8?'NQ9<md/-CGM>d+O4!E;M,<!n*EFEuqWiD<Oi9>tr$%5!U(+0RL\KUETFPG\CGT?BU&P&^rjKp.A5u(MLU9<OB5%1<0GYmue_[qq-0T@+boc:6D7Fg,2B9-]'rRMpm="@]:o)m`@>Ae)h=<%`<0_iTa>gi#j]X-p2&O+*$Lg)Qt0Ys&+Rb':HUfd[?op%JK&K'dZ%kr8]^lHVX]uB;$<&RL2+>rnb,i"LTr-JAOJB)5>BFH7oO40%U*NUU\Pint*h;F(64POC//m.\,Ld0g(9B`_i\"Jq!h&E^><nkLLQ6,+J"Rr94m0VT+=HFoMSU;sXV7UR^u.7L%Ql/AK?1=%,k%(o%n-$VjP`)_Kl+f,@<$%I[fP[IT8euI6!.2d&,H:gn"`3G%P=S=[;1'B$H)-R:chZR.\6XeL<)IAoZ,[A,H&mLWkeCVe*)/O:18M0h%JcGl+XL)cFN(Wse,)90q,emQhGD'X9W*G=>F=O)S^]iO/!Yp@rq)Wm-cj1>B]@nF5a;IL&E^2/26uE<*7"_o:bQu.]3$&0VT^u,r%p;(5E'MUnD9Ze;O&Sko%c\*J6$fXI>*T:gKRM]Q(3Gpads(Q]dno[hl-oZeS/]nZ'3Dko<bgk)m([6\rc`4qb@r2_+2-SlCN!ZF5%)R67%gU3tL\6stZ&.EW+6h)td=ctEY"sF'UMIfu,Z]AS=\S!cL(plP*n+3X8^OA_2%%aE`Z&4&EQnc5jfQMZIWo;3[E%d5@+Gtl#%)PeaENp^?M%,Vgdl8Y%Tb_3S03RG,M4a`k-S\i8=(d&SMPOohUY<8+q5Xet2oHHo-,Ee+.KkQ$F7YW&F+@=Ol'f/.Jlj0De5W]`2%NHR,q3i?[0MI.RPpC[WU+Ck\j-ZkM=Y]e%?Rl1i\c>%Grdh<_%U8U.)@0RZsQr-RY&8J/&mN[gT;3B-s\,oHFE0bTU(E&l3(ClEP%+r;*C@)/nnU+P'UaMJ%Vp^p[@:E'XgVksj1nZe(.D)XCb6phY&OaO4)ZEOb.ibs5(AK$h)jie:_QSl7ko0m2m#fe=>',k&PD#6D5%CSHsbN_;u51ll)mBP7]OUDA(TKi0ph9FL7M>9_@Vm5[U4$&mq5EI-qo\qckWc^A[8fhSRl6:c^n)`gl)kVbU]=-7WqY\*6U^4QM)%lSN8cGq9h*V#-?Da+R6cBdZ9i!H0QN,03ET:\lDW1`+P)EC#V+_O:6A.pG3[C-P%WZM0:(2gf*XiX9JRUGr^]7Z0=<kO`!6%,/N\%$jYb\4X@HIk8l,44K+qdp]P<l*cN$t;-YJ(7ku?<e@$P>WT1'#.p>!b,NoKJ)EUDuJQNhOn/rdl#&I6^=b=VkH^ncomDcY#\S+k/%TJQZg,@!*7=:BCL31V+I@0CRIllJE`Vmt(:KHg'sC#i'`Yn:lA^etr>NMmmYQgidUMMDbf&l3H%dL6>r`069'KSVkSF9ofeEX%,N%arpp@&K%[@o1Y<c(m0kC0m2P4@&QMm9@(.n0R?:`%AFgo]0u0jiuim'OI$rXIXDkl!sl#gS;*_Vn70R:6Zb9pLN1nnW+][dbc_JY%%iQV`D"+_hG`d^C]H'o!l2f;sG/$>7BHs147Jmnh/O?WbKHs^fYekr;"3$@k_0K!(UCIZIG4D7(6BW',8M!:b[-86o)-Wf2MEo.3%e,Bc1(thiBapQfkfGDBAKCDh-$c7Xm&W:YY/oHCT!d9eNigRe)M@TC;r%.I#qcK;X5,acN7Rj*FX,I-n0n^'/g,e,L%K4@[nKJd/%N.A)4ncD:7,8?<N7t?<r41ij<(`?OA!?$t'8d%ok-s7`ncI!D^,e/BE/lc@cL:@KB<J:1aLAO8A(f1-=U,&Du[K7nKPR'iJ601j3%c5_I#D^l0f\YQSXX*ob&TZ8T"D&k8N7fki9nP:MXH+]'^"3a:u%#0,&Mn9.]j),RO[nJSa6rUAV(7ePA#k/B86kO8EXT[(+f/4e/%&YR$6R"pb=LZ"8IoWV#sSoXgA?ZIZJqZPUVRmX4s/J&Da7c&#%`CZ&K@aJEaj5ifhOr3HBTo[;%>]`_Ff5Ar\l-7;RKVO)Rj)M[u%<]kBGKTK&1g10%ka\FVLd#kEN#4jN/MmVm&&a,Rt80=n3,V+:31P(jHnJtW7DiG=`JHJUPp>@+B4/=P7)5.OJL.E7Ni?3.d.2VK8%eiHu*c6J:!E%B=3CV@eS6I_K?&#8tdjUPQ<&St1a.sc:HQc@[I%\qC:,i+Po9QOkTOoEe:&]B[Xp2doZ4jK_;*&&m$TlA4],FVgk%gQmM$($#L+G<>4hiOG[o5R)9,-l2mZ.A$bmaNd`.X/tHq/3H$9ha,]naftpbI-#aBA>!o.!BiWb>EG1-at7TK(3-o0L02YZMcd'9%W6gX*!Sd=hh8otRR_7cn'uK@L[KNOZ474^<f8:Gkg,LhF\_%r!MePD_$ocK6"p?4Slm1keb[p<l[Eo)7FN@ln<&0DjD^s&=5S&"Y%;+h=)W??5L)htdDrZknG1G!BO*K!aMm'jF%o.Z#Sd/k7d7Ph'dF$!N75Y8SlCre;$I*>,O$P9Q$X>.VS6lZQ^pG)JocN9@gJP>VP%S:FI:l!.,"hO2_RLriVE1cRDO8?G:6_"8?NfE1/4[cWDR[!Y4OY@A;u`Sd?'WC2+FB*Pr3.N;[7C?bAgHknmoIYaI=*%8D7;1Mq?%<8UO^q*>up1G'a5+-Dr(Tc(Ys,>g=.\'Q&`?"%-q0"W=37QDBBD)J>!6!RSrm6DVlb7H8P%PU6;3Mq'YF-tX3/&@L:^.SK(*[;m=%#@RlWU/B't!k'hQJ^uQY;8ZL/$oLkb0t;g1:aC;eH/K7>iV>Ma$qirC<Kh-N1`-Kg!tc9q>`&nYPa%"sbCFY8cjC(!Wa(Vk7h>rs%\H"H.;cSZ$(u7QUd3Zpl_VPoV@EBFoKnX,B@//5=F=Q%D,cJuk'`i)<\?_cY'?O.L1"%ah`L4*#"RN\N,"e?u'04lra\Q(q'9EF\%<8_GAiLH8Z*87?uDeW+s58SYDTOuNB,#Gd]RUD0]#W%BX!*:!_Vo+JuJrm+EK1,o'eNT$PasQ+jkU['.'-m)d(oE+YnUm:VH6c9"%V,e`4>>'a*!F`u%A->s.&V`'*gdq(,PFimBWR_[++`/OgMn%1VK/+#g+1_]Rck4Kc&0D2@24X7b$*NaJ(nre`#`YrdaA;X^!Z,XD%BuKL0TP\'3EFGgjG\W%J$:5A8<dgTmL3nelSn#Eh'k;^n@?)B)P<t]8+Pe3[cqf8b,)V;b/J''=C'WN(SU!hhFpGBD7$_r-R"=1Y%+<hEA,t&:&$%nTsLD"P]8Mqh5@j+^),g?U/L2k9;Z'QpiX][.%]ZG\4g7\:&OGm('K\Z8ANo,%W@\gltEHi=3M'69DTk>>SUYc3R%-DR'G#1aFt`/MK3`r7/gS&QE+/q+4k#rr.oIEmCr,q-qB0Veo3\jDo.A\B83o1:WEs"OLE1hGA(_8J1H3tkR(2\qe?8=i#@.8@.!%h*O6!K=eJ7)IP=dCUoI&1=-77kn)+Gg8/TMOOb:Y:T\[%R`\%s<gXu(=FDs'!"f[-EF_IAg,"Q@&"GNn@!M^)Ol(obo>t.5h1InD%1U.<c7p/V?@0Q$E\%*'dUU3BppmuT,<FAQlM6!<p$"#_F$S4afjV_3V2PN?,#]n4?1(KrZC6m1&O*+CNdG-3?e@B.H0fE*0nfc`9%b]0mrm+nNYMnm/gZuIu7VXng2%WMqTlBuZ!3C4>%'X>_FjA`J"o>"`b>W;hUTkcoUSol<9ne5Iq5_).0d%ap!4u0e3Su?nO#X:o[%-\c*/d$;%'Rt'Y_EreT9QW&-k^a<kgTF4UcTFEQME%n^j7P7"P>uVOPZeR80.`u$O%/@ZleXd]`@?d62M,q#'0$qf%W?U48NYgm%%+Y8RH6l]7:)?`*3>Zi;2>7Y,g9:dQJ!XeUFeqe>:/:.kS/.p.4B(R5X>nd>Bj<@36(8StoafT%%k8feEdUoT8J98^L/LJ<r%j?ol%@kiq<+QAXF5)0PIB%Feq*%aTkoXIMF.'_'UOa3>,kXleT&W$eH1@@;q]hLD]0YB33eOCr>-`N6Ni=e7__tYiW:koOlaJnBf`Q20f%P$g"aBjV4FMheYqOCj1/&=7u2a[ia("O6S&9G$1D+Jg?oS41e#>gfr+K]<ZeO,j)+0lPR,<igG<ZutVm1=A3<BVp_5.I$D;.+I\m%Hd[i?JMEZLKYWtjjd(-<Al$Y6&SW!E7[1dL3G$.M^bsp!;6l+Va:HZ\<d9;).PAnhE^_&FkW*+PHiTS00Rs2kC5c]DAQ`Y3DdI+O%-b4^B'0k;,p]271$M![FBsl!*hr'*K0#u+I,cjIP+W>5o;kFYoC`(tq<)udOktBEf$qEg<VpnRU.n.U2jJ,)j("RJY!oI&:3A.Kl%RDYJhJSU9VN%1]WUYY!',6MAS:REY94+&]6-9gT`4L,m]oq%2_#+tpIW9td3bE4Aa3@a$od^1f4KGPp"RpkcA/IGW*5X[d$g:/.d%'+#l/4_HGb`g,,VQ$JSsmc9RBjFnu;ZDGgg3OGB1Z+4]l$5%iV'`%#j38!H:;#%3#ATU)`&7=WnF*<q+;2'h$BSYQeTU]t8\^KRQ%#dca";;jr])a&M(\R*A#%!-T>j#Ci<*+/e:cY^T,!sZ;^"r0r^/>MhYbGST)^?j;-9rR(<l]ApdLpk[a1&m>\0HupDEhXdMAg"Lt%Q1b="3`*hdFeXLo&pX;0+\+Tqs-.OAi\h/,,.<WZqS>i9@9HF"hb(BeHHfk:'[!$9'%-Zn`n=qG\.j8H-)R@Q&It8f3GIQLWo]li%'PVU9<a4mo%Y9_E['HBPdW-fjJu_ukoaQJ`W%a)d@\Z*k6&\H.Fm3WH%oH"4'PBiSLaRQt0I`:D;$0#9+H0T?kUfgfld_u)Lfr.U%N!f/K7eaE9)0(tkNroN->=[/VE)6_TK2>^ie&D@lNrfug9Aa6@N90t<%!7Y]8-gI#8kXBT$=[uhHe0[%b*7uDQ9qmE,@HVrI//$H%!&MXq*K7'm:nX,G`$@X8-*5a7)?_&7`53AAkE>lI_nq=QXsofs1eY/KV]QHk-:!)(ZYrISp0IMW7;k3HO)n\19JrL,\$[i#7fWpp%oja#Qch=A)ZksOtN,i*/Ls@1J_,<IL,M=L4K48u1@L[&SJL`8h0TG9)#1;FU&X$CA7PQ*F9)Ii/%%->8BU$D/K8Aq]T/3h$)bG)-%\5-)Xj2dBRam@f#eBO@i6Jiea@Q6@c4g@VkU'MIpQ_54-gp&[W"(Vh/@!ra,j*X6Ud)W_k`a"V@jn=%K+:=!R;XH3'UhGJ?&M#^*%LaNe[)2RIc"=0B(4<LP-XNppc:"XRNLS0*.*6A^3#hGZ:B,qo0K[Ll4,=6u1R?3V^q=G7#b9H^W7^,"J9#HFL+hilgN?.LZ40U!G%foZ[I)8T>flN&BY%F*0U*$irjal?'C7N;j"TGq.p_EDMYTQa7&Jees`7?CqJNbIS/LlV!ojG4:Z:Z9D@!?WH#<9nK[*Zl,K1cg)A%BO7V]RMXAYMf9iBSX:=IQilo1@gntEJWMS&%VDgTHVOiMMq1)&DUEfBI0R4f!`:.P=n>L.GRfjXkpGJp+Xi:m/oWqa9JagmUE*)8%%*<.5&:-_p@Xj2G0qe]U6k3j]\B#ee#18'682DiVE..se(gObGK=sfFTi1s7G`HAQMLkl1d*\)$BoWH=VS"1M!f(`>?kY6\"eh&8%&ft3qmP3%%TLcG3h@EID$e.]6hKO[%N_l"8E!Y@_W6(7S]uT)CLh;6pk2OcPFuFG08`r'09[`Zh.ij^`=`PE&/n^'EiI&2r'+eKc%^:fU\gl0PUd%hY9BGs9OZhR7\SOg,(JRWFYFJMb/&Li31#ar6W3^@\XUbfuta)@h*HsPU>:MC)*;n`@:TGF6WCOd(OOU=FXB0qYM%Vs$Y`*F3+U#M(&fQ8a03Vlm6f`EX-(NDWFiZQV&F'HeS\Kn9=$KP!$-UZM,5V+>GN,_[Tjh2jN7VLg<5X.Yu:A.dE?SYf%aL@EXX%LW/Z%LC^(T_&VE)n`Eef'It@g]8!4*EHJI`aLV<_C`Oj'P3!*!96!oE*C%F^6sQ(#8((MkCs?VJ3$4LF1J8:rB*7>C,"7&c:MAN$%&UZ&BT)0h.=!R!]3?0*@A[HN^Kn6!j_aYDNjoT/<JT.c@6&6H&<%hcL#BSCRA)J7gEobmeX?+fZ?dal1Jj(QKTaXhMo)XTIlCdY)%"#M]$&Kr3\ok!3I%/:5EPW)XTo,nJ=1J-FoGIE45&M8lj3?P53;&G$7EhuCS#uQZfI<)kJT7$&@$WVZBLfH#!!Xo&iQ`]C)_cWil%n];X/I)N-,aM\D/p94!H`JIj@MDH:ZlU"Gl4>)6q,#g8CV%u(aV<>Xh"=,+YA_\cTJDHV7GVGY0i-5np(U>=AW]R4OGT7tpn%I2%%aM5suF\\YbP^+0/h)TK$d)CR]\$,Q\$A5pDZ:o=PQ][jdrRg#RhCjLQYt";J+m6H@&U]g<:,P(1&Z$F&N3Dfo=/8Od*^An'mBfW@%UJ!G9j%KL976/[%3e0=n44.R]?RiX:!p)%+'L'Rr:r\\k(SH&KK/ga-n[m0tk./n@+1d/027nh"<UVd3^j'k`ORiZR;l@No0]L!t%IoPSo3\^f%m!\2Y!FNAXK%/.,jK^-mA;?iRs1c6#h2O!HdX)&0"9/Xg"ZN"Liq_,!B`K#.@s^=ia"WHA&,St6S%L?I@ZB7$nO;LO%H0Q*5lWm/8+P(a4m[:=kA418aK&a=WN/;BfW^Mm-:5bb"9:RM]m;+e?"WJs*9[UM$pa/?^Nd6lcFdcPh,M#/MZe4.:-eRHa]8CAN%AG?cT2fJ4ip]HjtCUgsID_jr6/_h%tV$#\S8irN.?!oud?#!H-[^hX?]Zeq?bI6B,*<p"P0C<'>\;rMV015/I`H&Sq`?g'``Gi$R%j5r/j3!l!9f,:T_NsE41PM=XU*Uf1@]keSF'_pNR/n]n"ie:0MmJba;k!sZT;>UhnS/"n'/`$oCHXY+ca2!:'.Ea?qXgF.aY`jcl%LN$#UY1P[S"[mFGFTE7(Zle-tV:nT>Al7O&J[Ko/==_1V0<p]B'.j;M1c^W*KA8_JpJJO4Dmi)Z_RNo5aoeVnMr3lJknYuV?:D,R%rakG&;]PX/YhV@#>]JeU4c3VYK&#S!02mdC_O?J?nI0qLa3QC\R@55\J7_<cY,'m!GL<5VXAOgu_2eSjiTDX&fqle>TQ/32q&Ng@%5S,<G,lZ)H:<4RdA!YIo&sTc1K7]i9fpmj4!MTW^[TF-c+F?K_i_i/\.4qVU`$!hMj&oR7$/!$'6RK!CA1s1qS;6uL)qN4Y`/L5c%dRo,Q/p[eES64\Spi:a0MMM`^oF#alMouFp\6S;WXW!YS]$GOfa:j]!hc_pJ>\sBOE11>V.rm.e,@]<s,0#>hS:XZgc&fuOPILab%Ia-j)ruZr3$Dm2ZI[MkXRPRkK]_WXY0k-cIfJ;`CEX\Z`e&ei'L>"K)gZs/M5WN;;5C[a\7qH4G'0SG0aW#iC!=oQo#]?m!*1$0m%kbqm%'I1[[S$+ib1+CMQK#>s#i6c5j0#eAgRH67_*rIokL;@j2-%urL.pKufcq:OeM;F-AV6R*JG>q=jjk$U''W_orB4*lj7mB'c%H4V=+8In()(Nd(hCF2tneYhF^EO<Y#=S*"0L"f9:S;TA(`BXqA.P&Wgok+H?i%0@QC3!'ao"msmr.g]i"9G9<3L-U4`S+rhKnlH\%H1gN#LbAnG]8'oQBiu&9:KdN8Z^GWMPl+l(rC@tp9I7FD7#5uI:(,f??T:;<`V"RqUbf9*,Q=Z(T/tb_QM01)T:OdqZaBL<FS)5'%blC3:]:^YRC"(1FVWK\**'=o.$Wnm-R8?5h1`o+,4d^Nbb3^@:1;_iK0uuOh8nhTe4.`0[)00?[)`l["Khh49Dr7?afOuQt$/Z5W%G0B)9O!\A"Bdk=g\cfa2&prDZ:?N3(b!\/(1"tsA%aHdAi-)I_]AC/@]f.!/ka#*8R7q0L-TDEd;78"[Y58+"I^5>liY=CYS$r]@%YA6+.&o57lFqsHd4SlD@c`,sC=&'gEcD_a2:L1Ro<i$glifN(W]bT)lhOj,i&\T:[p>s'gq#0U+5Fjbm+!5ub<A^;C.PK'-\@%Np%i@_$Tie7'O?N9hj]0F%*iKI_n0N%XEklMU#_c%E-dD$*jHcf%-'ScrmGu?m&#[&/^!E*/64r*3+L]/4I7cQK3HaU`r"lFF.;@RUD%1OQkS]P%@k52u@kWDcE`dgf5.UYO$CqDhDA]i>O=kcEal<X-i=PI!"u\P0kuO*=8>T9fWQ1%Z(RB+T"D6`,p;Es=9cfl7!%"aCde%g(&8@jM6'B*p,N('XTnj*$j:kW$C`+XVX2KIRf3<\a\60&dbP2#E?#Z&["D1\qYW4eSqCGBBo8;:e-!0Rnm0-FII#!cXT-=nq]AD%pBsQr5;r)"fE2amp&XtW/;Gs!E*Yi\\u+^:Tdj7Kg-):Z7Dq;%7p@lG7$/B"_^oNoTMYj=iuh)%?,Jk+C,j\]1L9o@k[NXD.DJCg%Zc)8r'?/QGMD(o*O1VYcUL%i^p@[c8h0H3\1Mo8'`m9>s5#e:H?r-Qu]mo>2iOf!&X0iJ.2Z=U%1]B`Vp6r_llH>ZdTC;dDqk(S'%Bi.9?H7SnE:F1&7)Aq.74n(O:7H,#]9Sod(IIqS80V5recK&pfLSq*+P73D+.r.omf_8idj;33"BD/#s7@peerI_'.$^`17&Y3PH%:n&^"DF@fG.ViQ"[FoPcha]mMA)s&@SginS)C+,K.=I0GrQ12M-^uaYa>`(#j^Pg^B8@_.eT<fKD5<[Zm%^24l1.M:cW'PE9UBB)%qV!4efnReOJSRX9eD[g/o7XimVo.uRH`!TO9)?(pdYDT2%l\UE'3b5<CZhTa8Tcok`2d@a)&#kKOAo9n[g&g+"+nfBBdaWkcrQ4'%M4gu@*.UU1!j6O-eqbkaaM.nAb&KO\<Tl#2LquZXr#.Y<W3_9[s.%;)@7[_d=u=oh,"`!pK&<^Z@ML'iZ>'Wlfb*17pS_R\9CFs"%3X`fR`jh7'/1A+g1SNAAY-EVmlaIe&A"7D[\N$2(RjYP)J,K;$]5MTEK=a=f_`rE"n=3.X-hb_G\mM"-5@G&hUDnP'TD^/0oa+mb%&`\3"DJBiApbhI_:Xk11E$3Vr\OCk^CehEj!(m!8:]-9rD>tn-Da]4NXqAj5F96YQ]Htcn_jI)A5`VlP,qMXA;8ONo`o\!D=#KX.%*_5G](,_Mt;lb'GOWXPL/7S<XZNqgNW+ffT("$^dd`R0$?65lN.lp/!g)75:4I7Y8:4!`MCmGRU`m$S>@HiSC-OC&>H<=!3HOAUO%UK4+(,A:BI;2eH7:j!%4-[ENiFq$/,E@8(o.-a2=SX,mnPkU]"YV,;o)#&jP*2r<($jEtul7j_%TgTJC#;OHA,ESZaEEKm,q2V0E%3REfW1a+q"S)n8X3VfEf"fW(SYL7;rQRV:kUIf7-\bmX?6Yi.eT*P2@nt5K,r`_S^o>Q3oGl((uZtJQmZVEUC%WeX)XjE[;kZrN%%+DKb$A.<H@=T+N(N;ooJE/Y,ooumt?'e+Pj"<^Z!>P\,k+u$5(:.'n4KOqbA&1SVhr!LMCOs,odNeiS6QP!@JOT+HeWH/kl%Gc%c%6Y)#6d-%tBJO=%Pm1U:TdBDp^d3it.L8D#KdX>);@@(Xlc=Tn85ajK*7:c#*X7Ek+jHRoF+Aa;mU2^OY^adC<7eVf-/pBd29a+BK%LQq4$*;8)LE9&T\O]rh*ccP#]5\_8KQ[mgI%[YNEPuW,-c]A'>F3J:s'j8Hd>r!U,I,t',eT,]qX?]%RE$/kJD'[f$+=G89)=e'V%5\%#(50!uq3C%)o&1#_.&^3;S!^nHg^qs^ao0u,7"`\G4aOL_28cO05>T_suRl2S7Z$]L_PHi[sGmUI0!$]rD98]5G0SK_n<*GhF%Yk(6l#]]3U0F30Q1(QXq9>\BdFR!Puba!iG+#Cg6:O%50k^$lBZ"UoJR:ME:[Nf'$IaW\L(@)V88)]-H^^6uePQhl2+je=ha)N&;%O>s,U(Qfth3_bH,=)PkBUIu4M)8e'HIu\Tbk0#YmBd2.k[@U<.FmQn:C3_ADTLIS$i1tCS:p>IPi9*ip#\2Hojd>pJJaJ+C?sidG%b_UdA@k\l\dE9*7V5]us%Gdkee$>AB.olMUOkbarW.n?(ZT%uCaOgPB=Jg3HN1*o&_([XM%IcLb1)+3eM%cVDRuOte*MK1L-<P]8%.h^-0*H;V5OuRDjA:Z[J=giGAqNqc`1@.mDSd+&!N`.uMY-;rJP"644`;TPX(?+J*Zkmr[rS7kMq_L)AC-q+`%kkfFO&"6]WDdrX%O&p;p:b!g`(nQLn7UED`OsR3>W-+\U/7!ehJR$:gr=[H2kMfi2ne1Vlpgut#/^EXS(ajpbE9ubueN&8DCrF'<OcbIK+R#p[d:E3]%eIag-PFKduN^QLmGeMWB1q3;aeQ/T^,Yl.U[lPnLpN><W80!:2;p/33@.+[)]%&g@\;;`r,d>p#2$$:AiC;-pc,`E<279sNS(F!1%qq#8kLnMn1cNiXFj(QM7Lr/)3L^Yipl>2\c,=bZKr[Wo#Gd:")4.jf]S.gcojl#RJ*Q<=%'T%U,Dc9tE!URpu]PoWbj!/esX9o4@%3`6mC4eu`6$VsD-Z+ID*5[/$K+NI[?Q"qS%='.J#7>ccdTYP@]R;7%k/*;hUBbL&\0R73hYaf<:L]SgoUCnG8Da4fO1'J&fF`ckX%_8]&NoTMRQ(N^:uj3;W.N;3/^hd)a3m6hWIL*g#$_B^/R(QHE[7:YEVF+,r7MKT9Vd/g'.AGPN5fQW?4+8idAq]krVI>X3Sd[WJc%ZqJI5.GiIR^)/*O>N39DgYk[Xh4S8Alu/F2-@n\l@kcDs62UFhUEDKY-eAjpW(C7A73Hb5ATj\>[u`j#-hjLA&Zj3#/8NY$D-Oh$%YFEUN_8u^M8>d8,:hshaOLS@;5qV`*g*FKc-Q2e!O".+ijCka'iQAe'\2Pt^*(tBt/@KoNiPH]AM,#8pU%E$dFb_d8="GIS7MD45%kb!qUH,&aLSnYXJ07Robjj!ODIt8p6njh>d0(6OSp<C0hD;.Rgm:ch05n&%1]of?.S=7k]\RDq0BoKbup1fHWNQZpBOYkbF?Y%<I%dr00cH?:O(d;kX&1G1&=-9otJPWm8ijA+cj/AqXI:eVZP645T0N:rRZ8*2'735Ch/+E84<q26GtZj7aU$[?o7!I<Z8a,Rg[8h=oB%`(]p[(Eb*+<.W9(%XL,&8:hGMSi11I3eI_[1s!-?WoWmJ/G*Ygk+/\1cIWn]p&`*q4s[.03udYe2BtT[-:78WpPBFZ8u"F,!e?Uj%FGuEZfF8i?+S66n$HF^3$_Ag$RA,+I'Wo06rID@qNc+n]J<8m'Ek^i2YiH993^nD,!O;KW]P/XR3a508XFW6j!BOc<Jkk`q)&`,h%`5F!>bRnC8Y8a`tF*>Lt#uYB@4?Y3`:i?oS,83HdpYmf*D90\Qe7I'9s$`brT>i6n35)'H&O+ltGM/4q]=n1200`p.^O,Ra\)43F%\_Sq!b@S.6oQ,Je;U9qGC#%t%p&0rB';IY`hgYFaLS%Q?8G+)/2"#h,q"sZ,C%j]3VYAj4HG4.G.bZbogSJ-c3(U0'%kQ.AAY6se%(!/h:hl93LA;aGVl7EI^7*G=n<$]80BVAlNO/!<AL#@K!=9*=FDbLC,osol@@7;!(4WI0EW-.36D^:s&R/2"Nd3,!.3r)bEV8\ln%[.[A-]YE3VrVj/>VB>M5(aVuRiP.HepC(P2JRSK*ODUL8fd?9,(WUp>%>dAO5QdLUpM:ou&]\io`%L(PVUHaLZkV%t=O%a3Y$SVY%2RrW%i'Du5,*WmrmO5dWcJiJbn#Yu+*r;JKXk:a+G=OL[PhkPo.XW,Pi=dAl\6:R[W#UY=JY1/Q=D:VtOudcr.&jYB9I(Q`<>&_3%.P*Se-,*'\'b=56mj]'OP<<'aTPoM-$CE9].nEVlqM2.;GfZbJ;gT;">q3Ss),9V.:(i8`Fld4J*-1_r:M-1MN8mfrP@d+6c.T\j%inHbS#GU2l2o&+:+U9bTc&+f1FIRo%;n/<N_NWKCl\eY4WO+3cGEA]8`[b7rNpgATp*s);f8M$je@U>/-J1A-fGhr+Aa_Ou$gfrj%9lZ=$fK8luYia9@V3iTT8;)oUQ=c%<b\YjV`R%Sk^2VGln3>YJe>2jl3/cgkm:bU$eJ>?9_%jVb\1FGji:@Pe'p`TrH62*iS1AB6%qmoQmg7+e3k42Q*Rq;95bGq8*L$=Y04d#qa]7_J!adiKuG,IT+]jOmo;:&F-MlV"kFO]%Z2@D<+h(kP^@f8l;NWpkk@qdJ:*oQ9k%bE6-iY(GfUe_j[J49/s54q2gfAakdV/Mq'?Ls=Q]^0DrlT9?HpY1\00AnO3=&3mo=&J=MWe&b66airr/9(R/=mH4hIlcj-5Fu[!Q%.P"^p8E()nK)lU%Nh$)LS&\-3rtulL!B"3q4@ca1,!4`M!X:cp7s1S\7WML!)KMU"gb@HsKfDCWAR^pjT>hgLobn`sgAu4/:r]=M%k_%c\\X1G.NSSN3i@AV'7Q$+#-:kl@#p'jYh=o.Q]AP)d<XR,E_<7L+=H;hI!(2Sfb$7/e9:u7pH8>9?8#?qnlB>VqYT&JN_1eU0%MjNZIijB;Wib+-lVJ'V"p46,K#Sen]lLMtad=-O!9)tJH+aU#M,)b;QrJ$`YP*Cgu&-G<;9)dp'.1ts6Q%-EV(r*0^&>3ZUdu-<\%lali+oG0mc_dfbK<gQdVj&^$$rGMS]`Eb."a*<#^e;9gn^[3IoE%,;VHqg3gY?fCtd6Wu^.T2B2JHX4aG"Zu'6?FPc1cpc"f5TTU%!D_3+'@.6Q=;'f9^lf))I.Gu$Y?8SDEqXIlpJR<C&[.o0`X9cF&COQ1Uh8`THC3K<%-/9;VT#pG+OedBjb2D*\E=)f'gZEQ:penS%(LVg[$2U0nI"sDM7\J![::^`/RZopEW':e$l?6(CK`2hAOW7/G81,12N@9n$(aeiY+54u%I5Q&"N`A(BMnQ.I?n5`?esRYS8[?Z=%IWl!<Ha,[%S`r/'7[i)l$--6:/BlE1*A-m-hFPqYb:b#?fW,)JT6DPc4JK7Tjmjk@3@:iB*7TZ:><3L<D%SIh4M>Vd2$]%RL_!FR%/=q[PPJQ88];4sVK)U/8+D@CjO<4PGC+0tRW49`lA<*ERZ;"jZcD9:"Uj\;GmaQM_e';^^kG"h.&UcpC@ge.Z7>^67U;dFCoK4\S%Z)+dElcK&t*uPXo\OtO2\\e;um=K/SJOs7[$Du<B!i+!kh'/@B?P&uWi(+sr]uPHW@B[s4#s=Eec\_ih`(0>",Cphqjo0XmRKc67%lhi#Ai37&qM9I0<M5df:$@da&FJE2Jeo#[T=gO3uc[t5?;@Y16BG_B2PXm1DT58q,=%I%f.719-`Zk"@(6n\Km'db4kEo>:)uEn!%52\C+!mM(h6JV)nAr/"c_1Mf7ehXumDoLNR\/%<8W&'A.4BPR:WUZ<8</L)mH4Z!\os@Ji@,$IM&;3PTa<s";LVTE$Q$IXBBDYtc%@J:aN(qF1f"t7b/-P4uM^rgYjd)&b9&SaKS6WT4`OL>ET`=dZ?=/G\l^r$4Kb,L9eJtr+=9hs%1S^-;<`55!*S-REiFCjAQquMmX%:L3K$FLM!=kc&\^3!jA3Ohuh6cR[EL$tg\7r@5GQ(fs+LOi\_;KHc)r\RSK#7B<ZINMp%=\9#7o5Wa3ij6>LO0/I:.UC>J2>[G3#%X=6.9(WehAf>tZuFPcgAK85e4/J>$5=YF#*b"gpJGp]aCB#^=je73gpQRaI/4Y0V$@AE>X:!%?7IPPu`CBG(5)K>B;!kaG4-2fGD%%3@>C,;d`V!Bj.gp6W>DX3<ARRg5E9A`q],JEmRPi>I6smj)K3^foWQ'_IF"f21eOp"gNlCX2sa7'qHt:&Ou[gtPHU_mNJHMtkf$%?+^R1Xo2G8o9bQnSN&F;LMOB&];+)AVV'*)CYLL!W95""V@qd0oA-Z\TD-:Q/Z>K"4s@P22Cn,3$ZqGK$k6E]jKPK^ir!\SFL^*d%qU_X$`6M683OC:r%Q@=:1?Qee*`(hh9:bFIR>,&AD+EQ(R1^;s,C+OrD$'6dUFDDV@fsbj/9kHjIA;h!ncM&@>$Q;Wk8$u'Is=rS%Vln^C%7OpSk1'l/F99Y-H\7Zk(58fXo>BE$,LNGMg%Y6Eh0_MQYiZk`1F7HN3KcCS]ge=L4#'01%`@jR",Od5]W1C78n>@Q0J=gL%#U)Mi"(a&2?'.tM">p#fZC$GUWm)p25dgZ(L#5`W![bQP53u;FWDhBSc0.i((RrgOgX`:TN8>"Tom!<5*dC=_.\5mhL9XO/Zp*2a%<"+]jV5:qGQBT!ojFfcr!XW'O/)-(dGa2[uoHaPDgbtSMMF_L@DKWQmj_<Js9<j^/)in_[0&TrKTP->(7'>Xo8SY5\q#!j[b#bjZ%Q5dmio7_^jfX.=MeQ:/=.fC5rr:F93fVY3d!p)Xr;PmLd9P,6+`<n^a=*]BabgmuE"Zr49!mOhH(>9h,Z9F',qlsQ^V'+Vr+d$)8%OD_OR-a$YX\Se,-KZ_URi4)597_fBWZ`;!&Y1g1cU;"Dt-f>MNP"0q*EH;;Ac3RrbVV4Z0<t<;k4HNX6s!(Ijo=]dc]8)q<G.-)L%ffSO?;V@*Wp=#Op'itOppMR>+O4o&^RG4DkGGgJNmbp7Th49*;dB:AnlRt-"B:,%>`_U@0h]:GRntSV+Ji%NYWD`f.''kp`DN(7J%-Z':ZJ>R<Oj_XNS%c\[ubG4*h/s!!KokEu:F?XnDZ@L,TQW?G?A0G=Jbi3@.dUS@86g[P?jV">k[O$]IGia8*Tf[PT-2W-<-rQ`4%&i\pFMsl8(pnt4qSW-9T'kjO27.t);aHLL&-MCtDo65J"mQH>#HD(7ipHbt;J'7i*+*LEu'M=OdW1'ju:t)h6!LB"(m=Vb?RBE+F%g6o)qF:CM[h+Io#I[4+a4+o><TKgdn7b3[<0IF8l[14g"XVu@<>mT(82@?(5g6nn1M;"CIMc@i<aq"AfIE"G7io0mH3Zf)6qb8k%%,"3kD)D\0-Qq6oDblP"=:;_f,-5Hro'fWn"??d8cV>nW?3B]IMk_=,lZGi`LV#fjb8+Bl(D$g;f>psJe'fdAh$Dj10TWWDOhZ_W/%R-JU%0,<4$P3@/!1dG>\0>3,mmBGOP;Xs\W:4_\7D'@O4<D,DrE`:!)dGsT:F%gOp0eojf4[EB>.)$(lUOm>5qmn\>9Wc::1HiRN%em<_?>afudKUaDfF$;I#F.oAj&IUoHo>0(7UB+:33sBfsTL&$CL/!'%GR&-n7$d*P'Sn`ue];qHad(W__46i(&R9kmXc0nZ[gQ:L%f_8:Oco\`nO=)DfH:g#X%p-,`@ZVSYmpo3aApM/NbsrBDkJ>XA1(a_Q6FrC[o"phe_,U;?fVA4uf#(r*3f=7Rrr+Sfmp!friUHV.%[LFNOch+^c)!>2s2;$1P3\jLkZ6r:/EY)jX\[pQin-+Ai#%:764D[89i*(LECrLTBq[K`Z([-4_:!C'7%:&cOYEFFIpb"O`^ImD"%Cl/n7'_B_b2t4$P9l<n2Msl8"q!7W:&D%G,e+X=n2II)8/\VV$iih-]Cfn=:HNVm6'Bp')(Z,BdnQ5-?2XJi(2t4$PD*=?I'4<?i%\n@:8)n9bB)n>S^WAWJn=RLg:q!7W:)MslnoY#lmh^e*R]^=i&3/d5p5F&i\qhs(:0+gID+M0p[S#b;&j;.(#m=9rHY)=b`P=h7U%!k"7e8oVjoJLiP?i)UF1p]'S?1M[p2s(o)1f<]["JJaJ9C*@aS:dm64!fLK0]7U7o[->6@EUJYikmgLNW3=D<;Us@]DJ+]R+mSI"%]?[ah8ApJ^\VRm+6Un&F70gO?$19,mk:;175$T4_\m]4UQY>\_HOPofP=,7J`^Z4J_3orC^kgp3&KGQe*ILSo/mU5[4ZMELCdrh4%4/AnC>sI\8#A<9cOMYf5q9?\Q7*69:Q[f%QRl>hAqsF,'5k-K?Z$u`HgGf.%^E":E^Am/1l8Qk6q%eSUGMi<(8aYDBr8#>8OWNA2%IJ"B"'3f]1+#$kU]G!VbksQ4H=\b:dRg"2TQL-Ilb]FV0k)EEYQ+*8OAInDYO(Ts[;-8ILeU(D:qQSEh[`0H:UkrD8F%<hQ)1oAb%ZYcKWUD%Co/NLQcPnq:f`gt0\1qVBYhLYUQ/9R'ZD)eea-OL^DQ#;n*OKL8\,a-f67_="L9mG/:LM/TN$hd'hW0^oa#1;-`+"Cr'%W)dXLS:+@rm"26%HXu[9e]"`+r-eM>GAk5ZI.Og+5CE!Tr;Q!+T>#Zq#eNLX`ouc#\--<^s+n@Ub6[b0Y8=tQm@,34qpX:Yhd1d)%[nE6u^O5d*rnZ\pm0Vgu^\l".&&8/3jaXo_jhC`ZDdSQGIjYH0YGidqVOd0.^SLo.b?pTTk!%4J"5,T`nX1WA#T4K74*Aq]q?KZ2%oI]eqQiDpAptl5Qp!T;PJ%5EKs3"YrMoPb\U3cSS'?s91P71@Y.]!c99,SMcA8,O@:C#qi6=KsFGi-UlZ79lO-dq.0Ts#_[<^[d+%"tbF?8`$Paa.3Sc,Y''"(/T0>.3c11b>b`@%3eZA"3&aJiJ^>.1WU"Qoo^@0(\P_s(^[>NjAQ>dUb=V686VO2Q\oWCXsB*M5A4e9%InOY3V]dq+l3a,jEd)qKNL#gB5df-BLtg)1B`V%uK1RonUg]i::BF4m8u%F<#ps<L041M5(:O;Z>?c6(KH\0H1_OQ<_F_)@l2oBI%&sV?40+5U1c92(X[:t9Znb(1"T>#]DH^Og/rGTIE+andbejWX9=CoB<1sERf^u/bH1m#&q_naShU_Ntu_sU@lM0k+B/L:a;]MJkU%qg8WP'PnUQBHqbQ;CGB\a;ojCmL9tSZ8k#[`F*kfL?o&bS:Q2%8=Y9&M?4="(L+EOchGR8]QlfAG0@JtOGkS!PrI,6@ARDOd_]s/%_>#o2]O_(2PbsGf3_mEqO<c^"E[[I&Oe!Mf'<iab%aU;`.MDE:<#-UpO1[_!JO`S,UK'm&`Nc,5[b+=c8^Etu76UCnhh9eKZ;,g2%)^IuX:#RZb^IqW?YGVP])%c^a;_&dV)?E"[XC@l__$P=?ps'c+GdL!S=S[74fF<8PCpqo/]DD'+NV@<p;Um?(BuMO+eQ5MFkn%p?%@1\lYj<Ucr,V$A0_'>MEL]tKNOpP1t$sM)Nq)b5GS5lXL+I]pN!jtWl9=1h.L#OGqg0C]$eQNm0`5Q?YHbSWo(,6'T:aZaQN>.J2%0+ka9e37N!FLLop,3tp-;=n#&;/gH3FfJNGoO5"72Wp9g70:HJU/RQ"J:/[42*$Bu$Ul11*j3hPh(T'$#,ksMbe4=)[?G@"!0IXj%%en3NSYQ7?;B$DH8PZBO8W5''8\*Aa;CHr"Mp/_SV*Rq6G1QIDHRSe)kqdnVG4<M4/.'^d,+]PgR#@%+QYQO1+YSLDA?-gr*l;RQ%B@QeqqIe#;]L>NQp/SPU2\CVZKY;mB"<JgQ_ASpgg3j$*hn'Y;)L:-jes;^r`q<Hnc8f<b@-Lc`5)Lt,#d"_d/'dJL!a[?VmP$Ki%/8H4\P9Qf'o_c.O^B9s<0U+'!ZHA+;ktGrd)CtcBLqFk;REhKZWJuhc&BVJ>r!bD-WA`V=0$Rmlh;>^.^\O:'#W-\Hk[!/tGBhFK%'aPT2cZ<r=3$IJL&1;'1$V2YF'ofN#*[E!bPQFd1RO4YIDX?0eT>TGQSeL;u;9&'6(9U"MVp2*T97o-l3B8Nk*N:)R0</q`A!*UD%cQpp_-V)sI`4\WhOpH46Z=/<X+Pimc+&.A-P8]2d(#MQR'C#Rc%;^oCUrG$\aLiP>mph[1h7&&lf?_>@,08in7-:q,6"IhBidd,L%g4iEH.VOX:+&$iu#!6MNB1,`(R1m[N<21HHE?iE96eZa/o\usTCa,n($')`Zb2rti7f&L?[.i%bJrF-7D1fb5@Blkb>sOoWdQ-'*%iO:W^!_o_u8K&Tp<Yh+_c.W_jLPac%[6[->KZK1WWXoGAf7[+m'-)GdFcHABNUnlGB^R/p-_*#RlgaY^H6-Be\c6V"`h;3O=!+P-%gi_*"fN_gX;DolJfleSrNi$?!8%Li+B3f$0),KK^4,Em4`m.4diWQru2NbrT%?ci_jSE=pS>Ap/1[\@/KfLir^k0QS]8(qZAP(]P%)qASN&lb^t0Kj?DRGdFm._Z-sKT`WB@0Q=Cc>f;5d\T[tL6tl-p7rh"dYRS^8jN:!K&S[scrs>$g+##+k)BZ@gSK=IXK.oJRU>:J%goJKD2Qr6af<d@%PF0.J]#HW89@Ja>M-tpp3d@'_LkdQR6't`PR`R2>5n^Q,K`^tI+ch$%19V@]3shU[r!>o2?mOcOkp2(pko=j^%+PZGV+WXY1_sel?',1uhMs&$(Vk>!#PQ]*5Ig7j;nZ.=2X$F>b((mG.f/lq/.Qcd!eaF)3k$IR"4!r@<V:^H%#Kc1I!sZF3ALNuo%An>X\$k8=.!DouqC8D(%'e!*u'29/%.M?h*atipknRq@!"MIUl\-C>9+oSMlb@cX]`laRa^4pm(n5?^'l4[JC?1SVjDmb]q_0ZGh%1JJe6ig#>bZ5D,"2FF]1F<p#4'm.@Rnj;"*B=RkrZI=tAN+n+@V7tD>k[:M[;'p)%k"DS>E7>q':dLGMb_qS;+Z1UrbFS=<0A?Gi%pZ&s`"=k-fq'`fr@]QaJ73aK=QAHW,8]q[M':r&$,-'&3N.j-Ek9C/.TGtH?Lq`*AYdM(7R./,l\0'$-EOR_GpBp)E31or&VC]7(%e0:Z?/R^f;$RfX%ORYW/d0u/oL@pWPTPmP=4er3mj0LqF.H>U+0#nK,\&QZAKgVj4bBG5mpe^T;bm"r_oorAK>`!nmVA\,o(tL[D%odYcp2GRt;>r8^^1aTle>J:J9Pa_5!<R<k*$LGeid6*ZdPSWs$?B6PT`VJNUGJ#h7+4K6rI$J2fYE[>Q'Npr"=ANYuQ9TLa.oM>H%jcgPN@+(s;k+aZPGtMf&\Ah([GJn?>5L"4B\,CQ2;sNdN2BI<>h7_O^32NGHVQn"+;nc$97V?B@)7N1;mnbu`<0u4-S7B<jRbuLq%%=Eq]@tDu7J:*I]TA_!0VN_C5Npb&Q;C3G&lNp7A=X`&@Go*hAP]s@acGU&pjLNaZ/dDCXEb!`AQn\d)ZS>/anLa=nnRTAREH1`q%ja:<pc*:fk=k*gJd(@Ff-d(2bN,q)a"GfnT7\5=jkcZa'1:=]Lgb-qj]EStiK?=(nc!@m(];rEo!80rWBB-&GIh1AV?LEdD<@7Wm%"m4bKnp^,=*D!]bUtepkDu"iM@5,sc&/?R?6&bXW3XM1LT@g(bRRdL^O(J+sRR4b"BXLQ*)F_c)_:OU`@pKu%Njq"$+;CB;)rJm`%N7t]bI?hd`s!e&k6KHk,CNjtbo"m\P[E>D_8Rk`i?#UL-Kn8&u/:[Gt]O*'4AZKe(Km)rFHT^GH>m!"MDT1..\"8WEi:ZO4&:pqu%r$=jN>,Jgf"u^;5fm5mpX1A>^QN;BJ[`&IWMb:.A3d8D(bZ@rUqdnrG0AF0,dt=^+pBhkggQD1q6"49ggAL+"*4nR4&DgBs]2KHT%U3Ei%&M"#qqLV]k3M]q)1jGS4%@)Q9@F\`$ALbaU"Q<`i#Xk:2%h1kU-FV6cV9jB6h\YT:9ts"!85.,Xhg)_u1jPfrKA,HI&M6.3%BMfmgIi'73+5nF*:P!r^%XSkH*=!(Ws+rOrL<Wte5T4*HPo/7,R\WD4m_)?*)4dKFk);%+;M'L2[S+bgq9In^ZSdhiR0GDoHX]h\%9Y.6WB6n9+Z9^Dc\ng?<d=9puihbQ&fWXC.ARgiK6L1qbFipt6UHo$f:DaPQ!A-AUYuBar#Jaj^2rDIOA>fr["2Q!1_I0m*Z#[32%[#=:W>Kl6'Vpb8^I0.7.)Oo[^=nF?B>SVqK_/_NRAbch=-U+Ru#H0W29Lh":d!FlEF&[`5$h(Z[]b=Rt&KWfC,)LM:5Bee/q5@'J%%1aTb'D367F&%VuB<@`4\`nGZF)QH@GB1+^ZI-Lj6%_:"U"bL2$1:^9W5i[4*ZHl'pD_"$@IJd#DVcc7jEY'&`(@Q>j*odbqhqiH%e9"!F2OZpR1a,jbBqhj=ZDn5?rgc(bCm*:rkHJ(X,V/@Q254eD#`Dl*am,5].X$X"UeX2f\*m4:K#HE*WY6C"or-]k>GR>,&9`8X%>]bQoM29Sh"?Fu9m![5s^HEfq[UsX)GEp[R:/*77]TP:"@Cn(M\;7`Y%`dM>h7dGK^aO#5`$\VGpVTT:>k>uDQ3T=[dNEW8KHg<T%41K"$2R$)),pib/Zii!B6+EAOb$B0b9uQpLiZT4T"HJ?hOF;p9:OoME,g!;W^qkJ&d#LhPa),kn/(0hjBU^9a;/p6l9q"Qj%T76O%6`EoaX(j3&irVcV4BLm%PNacaY3\jT$Go'lr7`,Jhpp@tpKDDPi^TbX#MJ>t?L$5o9]9u*[6Z_f\p*2H0n`EWG+^g^Ki>n_"4ZEB%"VT4aD#ZfE\^U(YCbjl-)@pSk"8iIM.;7b-_VBk;;<tjQ/gkfU"IPa]ItdD'1J)rBaU,"9JZq'hp95*g#2QNXHEol?a*2JOPnO0W%hQS+?VE)/2Be[YgO$).SV^;8;[ft<uk%X]eBen*MhjdU`FMi_:e_&uq!+2q<eO/jW']ARo\`a/JN3BUr;-UYek[[#f3lq^$N\pL9%I"uLuIW$N!QQ#0(\eI,*);:M3D?g>'::GiJW`gn^$W1:J?>tn7AfX413ENIk^4SWdqt>7g'hC!ugZQ.(5h0r03BkPNT&:=J#kT`&%;I*n4@]-%[]Si_2,LsVtOr$t+^%BPn:/,u>6>AY2-rE9PAI5Nn@;3)7ZCJULj1@;S,(Qr#n7MS;_61T6`+pgtD?3=T$khE"JXt^D%BOC"?>m?<31>Zmq#\c2c=4R'U%TdA4mc)X3/ddN7]`oi=.@ASJR+dP+n1I6n*55tSr58?uKT8%H(l0tk3E@tA(ZU6Ce$S3/X<DHc%Bc_-$/sR0'W?NW0gB?%dNYY"pb/+Ye;2KUC$eWF;de/%59BW@2+(SM9?f<ZKq(CXoZX9Z]%5c&n"mdEl[7`hr4T]J,"nClrS>ZSW%ML4!MAb5Vo0SK*\KJ<s?qZTs;moKhTG]a\>3GO.jL%#qm,#;kr<Nftf$D0^4REKA>l@p'9e>.:Kr-349*0/-"U!$S5%^.i]0dr-]%.[9@\`H&JWdNOEJS7QUd-:>uDii!7E"IXFs2B"R?a=;uZ&%M1MT`u/KeqRq4qRFNlg"J^hN9#bg<0_3SV^/`$1_hcZdV;S>(d:Zf%&K+h>;Zg'.2`IBbA+b,sD2qoI?*h@#hpEG*dKO?(^,aERpBEIV$IrNSQBU5hZUZh)%1VnNL7)I:K--eBZoOX#OFXD=RZ(]hc=snC%b],Ab.ZgSdHtka`@k31`e0IhogDNt-c$l<(*G,N3\+/,k6*i?e%K1UZq;ACD2S6/&C;):fVG')Up([^DiHf#,3a7c4Xju]<7EkAC%F6B^b2_;Zoh^'u/V"UI9`\_G7m:fj14!(ELIQYt9gYC$M=&suIFjec)gPNRL7^'8YG!<qfjH0'5Jr,hPVAbMP)Ct,hLfZYaC;!;.%C;^d%)bel7GH5J$Cfc/,a1Qd)NmTMFAac\i[55)u\nriunm8hE44V7df[0h<#U-s-OY[GXROo-P;lNLC8A)+4:=6Ps&ot$R]Y8@8%.0u]%p>Pr3]@pd*>b].-)1J-q[p*4.62#_Wp(k9>W&4'qG>6VkMAJ<@_Y,IB=,5DPSIpT+O(Y,Y&#\a`-('PHK!T]Um`NN-hJ_'c%k4-cBlH$5j@[#!!j(ZQ_U5_^i'BXn`Gc"tgQ*Htia@Fi3Mnq))5$j?u);Pri@./7)YPu^(IsU_45CE(Ym@,1Mrq,50s6n4o2fIU5%'&h)Bk[,tBoY[.?J,9/"2jZc.q>7o.Td'I,?iB86s7u+:r]eu*^.8~>%AI9_PrivateDataEnd